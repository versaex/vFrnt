"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var R = require("ramda");
var RE_ENDS_WITH_NON_ALPHA = /[A-Za-z0-9]+$/;
exports.MIN_LENGTH = 20;
exports.MIN_WORD = 3;
var lift = function (rule, error) { return function (_a) {
    var left = _a.left, right = _a.right;
    return right ? { right: right } : left && rule(left) ? { left: left } : { right: error };
}; };
// tests
var startsWithJiraId = function (msg) { return msg.startsWith('Feature:') || msg.startsWith('Fix:'); };
var notEndsWithNonAlpha = function (msg) { return RE_ENDS_WITH_NON_ALPHA.test(msg); };
var notFirstWordInPast = R.compose(function (s) { return !s.endsWith('ed'); }, R.head, R.drop(1), R.split(' '));
var hasEnoughWords = R.compose(function (x) { return x.length >= exports.MIN_WORD; }, R.drop(1), R.split(' '));
var isLongEnough = function (msg) { return msg.length > exports.MIN_LENGTH; };
exports.ERR_NO_JIRA = 'Message must start with "Feature" or "Fix"';
exports.ERR_INVALID_PUNCTUATION = 'Message must not end with punctuation';
exports.ERR_PAST_TENSE = 'Message seems to be in the past tense';
exports.ERR_NOT_ENOUGH_WORDS = 'Message must have more than two words';
exports.ERR_TOO_SHORT = "Message is too short (min: " + exports.MIN_LENGTH + ")";
var tests = [
    [startsWithJiraId, exports.ERR_NO_JIRA],
    [notEndsWithNonAlpha, exports.ERR_INVALID_PUNCTUATION],
    [notFirstWordInPast, exports.ERR_PAST_TENSE],
    [hasEnoughWords, exports.ERR_NOT_ENOUGH_WORDS],
    [isLongEnough, exports.ERR_TOO_SHORT],
].map(function (pair) { return lift.apply(null, pair); });
var isCommitMsgValid = function (msg) {
    return R.compose.apply(null, tests)({ left: msg });
};
exports.isCommitMsgValid = isCommitMsgValid;
//# sourceMappingURL=commitMsg.js.map