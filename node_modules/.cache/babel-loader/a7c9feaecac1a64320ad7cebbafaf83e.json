{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\SignUp\\\\index.tsx\";\nimport cr from 'classnames';\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput, PasswordStrengthMeter } from '../';\nimport { isUsernameEnabled } from '../../api';\nimport { EMAIL_REGEX, ERROR_LONG_USERNAME, ERROR_SHORT_USERNAME, PASSWORD_REGEX, USERNAME_REGEX } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\nvar SignUpFormComponent = function SignUpFormComponent(_ref) {\n  var username = _ref.username,\n    email = _ref.email,\n    confirmPassword = _ref.confirmPassword,\n    refId = _ref.refId,\n    onSignIn = _ref.onSignIn,\n    image = _ref.image,\n    isLoading = _ref.isLoading,\n    labelSignIn = _ref.labelSignIn,\n    labelSignUp = _ref.labelSignUp,\n    usernameLabel = _ref.usernameLabel,\n    emailLabel = _ref.emailLabel,\n    confirmPasswordLabel = _ref.confirmPasswordLabel,\n    passwordFocused = _ref.passwordFocused,\n    referalCodeLabel = _ref.referalCodeLabel,\n    termsMessage = _ref.termsMessage,\n    captchaType = _ref.captchaType,\n    geetestCaptchaSuccess = _ref.geetestCaptchaSuccess,\n    hasConfirmed = _ref.hasConfirmed,\n    reCaptchaSuccess = _ref.reCaptchaSuccess,\n    currentPasswordEntropy = _ref.currentPasswordEntropy,\n    passwordPopUp = _ref.passwordPopUp,\n    password = _ref.password,\n    passwordLabel = _ref.passwordLabel,\n    emailError = _ref.emailError,\n    translate = _ref.translate,\n    confirmationError = _ref.confirmationError,\n    usernameFocused = _ref.usernameFocused,\n    emailFocused = _ref.emailFocused,\n    passwordErrorFirstSolved = _ref.passwordErrorFirstSolved,\n    passwordErrorSecondSolved = _ref.passwordErrorSecondSolved,\n    confirmPasswordFocused = _ref.confirmPasswordFocused,\n    handleChangePassword = _ref.handleChangePassword,\n    passwordErrorThirdSolved = _ref.passwordErrorThirdSolved,\n    handleFocusPassword = _ref.handleFocusPassword,\n    minPasswordEntropy = _ref.minPasswordEntropy,\n    refIdFocused = _ref.refIdFocused,\n    validateForm = _ref.validateForm,\n    onSignUp = _ref.onSignUp,\n    handleChangeUsername = _ref.handleChangeUsername,\n    handleFocusUsername = _ref.handleFocusUsername,\n    handleChangeEmail = _ref.handleChangeEmail,\n    handleFocusEmail = _ref.handleFocusEmail,\n    handleChangeConfirmPassword = _ref.handleChangeConfirmPassword,\n    handleFocusConfirmPassword = _ref.handleFocusConfirmPassword,\n    handleChangeRefId = _ref.handleChangeRefId,\n    handleFocusRefId = _ref.handleFocusRefId,\n    clickCheckBox = _ref.clickCheckBox,\n    renderCaptcha = _ref.renderCaptcha;\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var history = useHistory();\n  var _useIntl = useIntl(),\n    formatMessage = _useIntl.formatMessage;\n  var disableButton = React.useMemo(function () {\n    if (!hasConfirmed || isLoading || !email.match(EMAIL_REGEX) || !password || !confirmPassword || isUsernameEnabled() && !username.match(USERNAME_REGEX)) {\n      return true;\n    }\n    if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n      return true;\n    }\n    if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n      return true;\n    }\n    return false;\n  }, [captchaType, confirmPassword, username, email, geetestCaptchaSuccess, hasConfirmed, isLoading, password, reCaptchaSuccess]);\n  var renderPasswordInput = React.useCallback(function () {\n    var passwordGroupClass = cr('cr-sign-up-form__group', {\n      'cr-sign-up-form__group--focused': passwordFocused\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: passwordGroupClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"password\",\n      label: passwordLabel || 'Password',\n      placeholder: passwordLabel || 'Password',\n      defaultLabel: \"Password\",\n      handleChangeInput: handleChangePassword,\n      inputValue: password,\n      handleFocusInput: handleFocusPassword,\n      classNameLabel: \"cr-sign-up-form__label\",\n      classNameInput: \"cr-sign-up-form__input\",\n      autoFocus: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), password ? /*#__PURE__*/React.createElement(PasswordStrengthMeter, {\n      minPasswordEntropy: minPasswordEntropy,\n      currentPasswordEntropy: currentPasswordEntropy,\n      passwordExist: password !== '',\n      passwordErrorFirstSolved: passwordErrorFirstSolved,\n      passwordErrorSecondSolved: passwordErrorSecondSolved,\n      passwordErrorThirdSolved: passwordErrorThirdSolved,\n      passwordPopUp: passwordPopUp,\n      translate: translate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }) : null);\n  }, [currentPasswordEntropy, password, passwordFocused, passwordLabel, passwordPopUp, handleChangePassword, handleFocusPassword, minPasswordEntropy, passwordErrorFirstSolved, passwordErrorSecondSolved, passwordErrorThirdSolved, translate]);\n  var handleSubmitForm = React.useCallback(function () {\n    onSignUp();\n  }, [onSignUp]);\n  var isValidForm = React.useCallback(function () {\n    var isEmailValid = email.match(EMAIL_REGEX);\n    var isPasswordValid = password.match(PASSWORD_REGEX);\n    var isConfirmPasswordValid = password === confirmPassword;\n    return email && isEmailValid && password && isPasswordValid && confirmPassword && isConfirmPasswordValid;\n  }, [confirmPassword, email, password]);\n  var handleClick = React.useCallback(function (e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (!isValidForm()) {\n      validateForm();\n    } else {\n      handleSubmitForm();\n    }\n  }, [handleSubmitForm, isValidForm, validateForm]);\n  var handleEnterPress = React.useCallback(function (event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleClick();\n    }\n  }, [handleClick]);\n  var renderUsernameError = function renderUsernameError(nick) {\n    return nick.length < 4 ? translate(ERROR_SHORT_USERNAME) : translate(ERROR_LONG_USERNAME);\n  };\n  var renderLogIn = React.useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-sign-up-screen__login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }\n    }, formatMessage({\n      id: 'page.header.signUp.alreadyRegistered'\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        return history.push('/signin');\n      },\n      className: \"pg-sign-up-screen__login-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.mobile.header.signIn'\n    }))));\n  }, [history, formatMessage]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form\",\n    onKeyPress: handleEnterPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, !isMobileDevice && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__options-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__option-inner cr-sign-in-form__tab-signin\",\n    onClick: onSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, labelSignIn || 'Sign In')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__option-inner __selected\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, labelSignUp || 'Sign Up'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__form-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cr-sign-up-form__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"cr-sign-up-form__image\",\n    src: image,\n    alt: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  })) : null, isUsernameEnabled() ? /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-up-form__group', {\n      'cr-sign-up-form__group--focused': usernameFocused,\n      'cr-sign-up-form__group--errored': username.length && !usernameFocused && !username.match(USERNAME_REGEX)\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"text\",\n    label: usernameLabel || 'Username',\n    placeholder: usernameLabel || 'Username',\n    defaultLabel: \"Username\",\n    handleChangeInput: handleChangeUsername,\n    inputValue: username,\n    handleFocusInput: handleFocusUsername,\n    classNameLabel: \"cr-sign-up-form__label\",\n    classNameInput: \"cr-sign-up-form__input\",\n    autoFocus: !isMobileDevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  }), !username.match(USERNAME_REGEX) && !usernameFocused && username.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, renderUsernameError(username)) : null) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-up-form__group', {\n      'cr-sign-up-form__group--focused': emailFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"email\",\n    label: emailLabel || 'Email',\n    placeholder: emailLabel || 'Email',\n    defaultLabel: \"Email\",\n    handleChangeInput: handleChangeEmail,\n    inputValue: email,\n    handleFocusInput: handleFocusEmail,\n    classNameLabel: \"cr-sign-up-form__label\",\n    classNameInput: \"cr-sign-up-form__input\",\n    autoFocus: !isUsernameEnabled() && !isMobileDevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }), emailError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 40\n    }\n  }, emailError)), renderPasswordInput(), /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-up-form__group', {\n      'cr-sign-up-form__group--focused': confirmPasswordFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"password\",\n    label: confirmPasswordLabel || 'Confirm Password',\n    placeholder: confirmPasswordLabel || 'Confirm Password',\n    defaultLabel: \"Confirm Password\",\n    handleChangeInput: handleChangeConfirmPassword,\n    inputValue: confirmPassword,\n    handleFocusInput: handleFocusConfirmPassword,\n    classNameLabel: \"cr-sign-up-form__label\",\n    classNameInput: \"cr-sign-up-form__input\",\n    autoFocus: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }), confirmationError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cr-sign-up-form__error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 47\n    }\n  }, confirmationError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-up-form__group', {\n      'cr-sign-up-form__group--focused': refIdFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"text\",\n    label: referalCodeLabel || 'Referral code',\n    placeholder: referalCodeLabel || 'Referral code',\n    defaultLabel: \"Referral code\",\n    handleChangeInput: handleChangeRefId,\n    inputValue: refId,\n    handleFocusInput: handleFocusRefId,\n    classNameLabel: \"cr-sign-up-form__label\",\n    classNameInput: \"cr-sign-up-form__input\",\n    autoFocus: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Form, {\n    className: \"cr-sign-up-form__group\",\n    onClick: clickCheckBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    custom: true,\n    id: \"agreeWithTerms\",\n    checked: hasConfirmed,\n    label: termsMessage ? termsMessage : 'I  agree all statements in terms of service',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 25\n    }\n  })), renderCaptcha, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-up-form__button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"button\",\n    disabled: disableButton,\n    onClick: function onClick(e) {\n      return handleClick(e);\n    },\n    size: \"lg\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, isLoading ? 'Loading...' : labelSignUp ? labelSignUp : 'Sign up')), isMobileDevice && renderLogIn())));\n};\nexport var SignUpForm = React.memo(SignUpFormComponent);","map":{"version":3,"names":["cr","React","Button","Form","useIntl","useSelector","useHistory","CustomInput","PasswordStrengthMeter","isUsernameEnabled","EMAIL_REGEX","ERROR_LONG_USERNAME","ERROR_SHORT_USERNAME","PASSWORD_REGEX","USERNAME_REGEX","selectMobileDeviceState","SignUpFormComponent","username","email","confirmPassword","refId","onSignIn","image","isLoading","labelSignIn","labelSignUp","usernameLabel","emailLabel","confirmPasswordLabel","passwordFocused","referalCodeLabel","termsMessage","captchaType","geetestCaptchaSuccess","hasConfirmed","reCaptchaSuccess","currentPasswordEntropy","passwordPopUp","password","passwordLabel","emailError","translate","confirmationError","usernameFocused","emailFocused","passwordErrorFirstSolved","passwordErrorSecondSolved","confirmPasswordFocused","handleChangePassword","passwordErrorThirdSolved","handleFocusPassword","minPasswordEntropy","refIdFocused","validateForm","onSignUp","handleChangeUsername","handleFocusUsername","handleChangeEmail","handleFocusEmail","handleChangeConfirmPassword","handleFocusConfirmPassword","handleChangeRefId","handleFocusRefId","clickCheckBox","renderCaptcha","isMobileDevice","history","formatMessage","disableButton","useMemo","match","renderPasswordInput","useCallback","passwordGroupClass","handleSubmitForm","isValidForm","isEmailValid","isPasswordValid","isConfirmPasswordValid","handleClick","e","preventDefault","handleEnterPress","event","key","renderUsernameError","nick","length","renderLogIn","id","push","SignUpForm","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/SignUp/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput, PasswordStrengthMeter } from '../';\nimport { isUsernameEnabled } from '../../api';\nimport {\n    EMAIL_REGEX,\n    ERROR_LONG_USERNAME,\n    ERROR_SHORT_USERNAME,\n    PASSWORD_REGEX,\n    USERNAME_REGEX,\n} from '../../helpers';\nimport { GeetestCaptchaResponse } from '../../modules';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\n\nexport interface SignUpFormProps {\n    isLoading?: boolean;\n    title?: string;\n    onSignUp: () => void;\n    onSignIn?: () => void;\n    className?: string;\n    image?: string;\n    labelSignIn?: string;\n    labelSignUp?: string;\n    usernameLabel?: string;\n    emailLabel?: string;\n    passwordLabel?: string;\n    confirmPasswordLabel?: string;\n    referalCodeLabel?: string;\n    termsMessage?: string;\n    refId: string;\n    password: string;\n    username: string;\n    email: string;\n    confirmPassword: string;\n    handleChangeUsername: (value: string) => void;\n    handleChangeEmail: (value: string) => void;\n    handleChangePassword: (value: string) => void;\n    handleChangeConfirmPassword: (value: string) => void;\n    handleChangeRefId: (value: string) => void;\n    hasConfirmed: boolean;\n    clickCheckBox: (e: any) => void;\n    validateForm: () => void;\n    emailError: string;\n    passwordError: string;\n    confirmationError: string;\n    handleFocusUsername: () => void;\n    handleFocusEmail: () => void;\n    handleFocusPassword: () => void;\n    handleFocusConfirmPassword: () => void;\n    handleFocusRefId: () => void;\n    confirmPasswordFocused: boolean;\n    refIdFocused: boolean;\n    usernameFocused: boolean;\n    emailFocused: boolean;\n    passwordFocused: boolean;\n    captchaType: 'recaptcha' | 'geetest' | 'none';\n    renderCaptcha: JSX.Element | null;\n    reCaptchaSuccess: boolean;\n    geetestCaptchaSuccess: boolean;\n    captcha_response?: string | GeetestCaptchaResponse;\n    currentPasswordEntropy: number;\n    minPasswordEntropy: number;\n    passwordErrorFirstSolved: boolean;\n    passwordErrorSecondSolved: boolean;\n    passwordErrorThirdSolved: boolean;\n    passwordPopUp: boolean;\n    myRef: any;\n    passwordWrapper: any;\n    translate: (id: string) => string;\n}\n\nconst SignUpFormComponent: React.FC<SignUpFormProps> = ({\n    username,\n    email,\n    confirmPassword,\n    refId,\n    onSignIn,\n    image,\n    isLoading,\n    labelSignIn,\n    labelSignUp,\n    usernameLabel,\n    emailLabel,\n    confirmPasswordLabel,\n    passwordFocused,\n    referalCodeLabel,\n    termsMessage,\n    captchaType,\n    geetestCaptchaSuccess,\n    hasConfirmed,\n    reCaptchaSuccess,\n    currentPasswordEntropy,\n    passwordPopUp,\n    password,\n    passwordLabel,\n    emailError,\n    translate,\n    confirmationError,\n    usernameFocused,\n    emailFocused,\n    passwordErrorFirstSolved,\n    passwordErrorSecondSolved,\n    confirmPasswordFocused,\n    handleChangePassword,\n    passwordErrorThirdSolved,\n    handleFocusPassword,\n    minPasswordEntropy,\n    refIdFocused,\n    validateForm,\n    onSignUp,\n    handleChangeUsername,\n    handleFocusUsername,\n    handleChangeEmail,\n    handleFocusEmail,\n    handleChangeConfirmPassword,\n    handleFocusConfirmPassword,\n    handleChangeRefId,\n    handleFocusRefId,\n    clickCheckBox,\n    renderCaptcha,\n}) => {\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n    const history = useHistory();\n    const { formatMessage } = useIntl();\n\n    const disableButton = React.useMemo((): boolean => {\n        if (!hasConfirmed || isLoading || !email.match(EMAIL_REGEX) || !password || !confirmPassword ||\n            (isUsernameEnabled() && !username.match(USERNAME_REGEX))) {\n\n            return true;\n        }\n        if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n            return true;\n        }\n        if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n            return true;\n        }\n\n        return false;\n    }, [\n        captchaType,\n        confirmPassword,\n        username,\n        email,\n        geetestCaptchaSuccess,\n        hasConfirmed,\n        isLoading,\n        password,\n        reCaptchaSuccess,\n    ]);\n\n    const renderPasswordInput = React.useCallback(() => {\n        const passwordGroupClass = cr('cr-sign-up-form__group', {\n            'cr-sign-up-form__group--focused': passwordFocused,\n        });\n\n        return (\n            <div className={passwordGroupClass}>\n                <CustomInput\n                    type=\"password\"\n                    label={passwordLabel || 'Password'}\n                    placeholder={passwordLabel || 'Password'}\n                    defaultLabel=\"Password\"\n                    handleChangeInput={handleChangePassword}\n                    inputValue={password}\n                    handleFocusInput={handleFocusPassword}\n                    classNameLabel=\"cr-sign-up-form__label\"\n                    classNameInput=\"cr-sign-up-form__input\"\n                    autoFocus={false}\n                />\n                {password ? (\n                    <PasswordStrengthMeter\n                        minPasswordEntropy={minPasswordEntropy}\n                        currentPasswordEntropy={currentPasswordEntropy}\n                        passwordExist={password !== ''}\n                        passwordErrorFirstSolved={passwordErrorFirstSolved}\n                        passwordErrorSecondSolved={passwordErrorSecondSolved}\n                        passwordErrorThirdSolved={passwordErrorThirdSolved}\n                        passwordPopUp={passwordPopUp}\n                        translate={translate}\n                    />\n                ) : null}\n            </div>\n        );\n    }, [\n        currentPasswordEntropy,\n        password,\n        passwordFocused,\n        passwordLabel,\n        passwordPopUp,\n        handleChangePassword,\n        handleFocusPassword,\n        minPasswordEntropy,\n        passwordErrorFirstSolved,\n        passwordErrorSecondSolved,\n        passwordErrorThirdSolved,\n        translate,\n    ]);\n\n    const handleSubmitForm = React.useCallback(() => {\n        onSignUp();\n    }, [onSignUp]);\n\n    const isValidForm = React.useCallback(() => {\n        const isEmailValid = email.match(EMAIL_REGEX);\n        const isPasswordValid = password.match(PASSWORD_REGEX);\n        const isConfirmPasswordValid = password === confirmPassword;\n\n        return email && isEmailValid && password && isPasswordValid && confirmPassword && isConfirmPasswordValid;\n    }, [confirmPassword, email, password]);\n\n    const handleClick = React.useCallback(\n        (e?: React.FormEvent<HTMLInputElement>) => {\n            if (e) {\n                e.preventDefault();\n            }\n\n            if (!isValidForm()) {\n                validateForm();\n            } else {\n                handleSubmitForm();\n            }\n        },\n        [handleSubmitForm, isValidForm, validateForm]\n    );\n\n    const handleEnterPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n\n                handleClick();\n            }\n        },\n        [handleClick]\n    );\n\n    const renderUsernameError = (nick: string) => {\n        return nick.length < 4 ? translate(ERROR_SHORT_USERNAME) : translate(ERROR_LONG_USERNAME);\n    };\n\n    const renderLogIn = React.useCallback(() => {\n        return (\n            <div className=\"pg-sign-up-screen__login\">\n                <span>\n                    {formatMessage({ id: 'page.header.signUp.alreadyRegistered' })}\n                    <span onClick={() => history.push('/signin')} className=\"pg-sign-up-screen__login-button\">\n                        {formatMessage({ id: 'page.mobile.header.signIn' })}\n                    </span>\n                </span>\n            </div>\n        );\n    }, [history, formatMessage]);\n\n    return (\n        <form>\n            <div className=\"cr-sign-up-form\" onKeyPress={handleEnterPress}>\n                {!isMobileDevice && (\n                    <div className=\"cr-sign-up-form__options-group\">\n                        <div className=\"cr-sign-up-form__option\">\n                            <div\n                                className=\"cr-sign-up-form__option-inner cr-sign-in-form__tab-signin\"\n                                onClick={onSignIn}>\n                                {labelSignIn || 'Sign In'}\n                            </div>\n                        </div>\n                        <div className=\"cr-sign-up-form__option\">\n                            <div className=\"cr-sign-up-form__option-inner __selected\">{labelSignUp || 'Sign Up'}</div>\n                        </div>\n                    </div>\n                )}\n                <div className=\"cr-sign-up-form__form-content\">\n                    {image ? (\n                        <h1 className=\"cr-sign-up-form__title\">\n                            <img className=\"cr-sign-up-form__image\" src={image} alt=\"logo\" />\n                        </h1>\n                    ) : null}\n                    {isUsernameEnabled() ? (\n                        <div\n                            className={cr('cr-sign-up-form__group', {\n                                'cr-sign-up-form__group--focused': usernameFocused,\n                                'cr-sign-up-form__group--errored': username.length &&\n                                !usernameFocused && !username.match(USERNAME_REGEX),\n                            })}>\n                            <CustomInput\n                                type=\"text\"\n                                label={usernameLabel || 'Username'}\n                                placeholder={usernameLabel || 'Username'}\n                                defaultLabel=\"Username\"\n                                handleChangeInput={handleChangeUsername}\n                                inputValue={username}\n                                handleFocusInput={handleFocusUsername}\n                                classNameLabel=\"cr-sign-up-form__label\"\n                                classNameInput=\"cr-sign-up-form__input\"\n                                autoFocus={!isMobileDevice}\n                            />\n                            {!username.match(USERNAME_REGEX) && !usernameFocused && username.length ? (\n                                <div className=\"cr-sign-up-form__error\">\n                                    {renderUsernameError(username)}\n                                </div>\n                            ) : null}\n                        </div>\n                    ) : null}\n                    <div\n                        className={cr('cr-sign-up-form__group', {\n                            'cr-sign-up-form__group--focused': emailFocused,\n                        })}>\n                        <CustomInput\n                            type=\"email\"\n                            label={emailLabel || 'Email'}\n                            placeholder={emailLabel || 'Email'}\n                            defaultLabel=\"Email\"\n                            handleChangeInput={handleChangeEmail}\n                            inputValue={email}\n                            handleFocusInput={handleFocusEmail}\n                            classNameLabel=\"cr-sign-up-form__label\"\n                            classNameInput=\"cr-sign-up-form__input\"\n                            autoFocus={!isUsernameEnabled() && !isMobileDevice}\n                        />\n                        {emailError && <div className=\"cr-sign-up-form__error\">{emailError}</div>}\n                    </div>\n                    {renderPasswordInput()}\n                    <div\n                        className={cr('cr-sign-up-form__group', {\n                            'cr-sign-up-form__group--focused': confirmPasswordFocused,\n                        })}>\n                        <CustomInput\n                            type=\"password\"\n                            label={confirmPasswordLabel || 'Confirm Password'}\n                            placeholder={confirmPasswordLabel || 'Confirm Password'}\n                            defaultLabel=\"Confirm Password\"\n                            handleChangeInput={handleChangeConfirmPassword}\n                            inputValue={confirmPassword}\n                            handleFocusInput={handleFocusConfirmPassword}\n                            classNameLabel=\"cr-sign-up-form__label\"\n                            classNameInput=\"cr-sign-up-form__input\"\n                            autoFocus={false}\n                        />\n                        {confirmationError && <div className={'cr-sign-up-form__error'}>{confirmationError}</div>}\n                    </div>\n                    <div\n                        className={cr('cr-sign-up-form__group', {\n                            'cr-sign-up-form__group--focused': refIdFocused,\n                        })}>\n                        <CustomInput\n                            type=\"text\"\n                            label={referalCodeLabel || 'Referral code'}\n                            placeholder={referalCodeLabel || 'Referral code'}\n                            defaultLabel=\"Referral code\"\n                            handleChangeInput={handleChangeRefId}\n                            inputValue={refId}\n                            handleFocusInput={handleFocusRefId}\n                            classNameLabel=\"cr-sign-up-form__label\"\n                            classNameInput=\"cr-sign-up-form__input\"\n                            autoFocus={false}\n                        />\n                    </div>\n                    <Form className=\"cr-sign-up-form__group\" onClick={clickCheckBox}>\n                        <Form.Check\n                            type=\"checkbox\"\n                            custom\n                            id=\"agreeWithTerms\"\n                            checked={hasConfirmed}\n                            label={termsMessage ? termsMessage : 'I  agree all statements in terms of service'}\n                        />\n                    </Form>\n                    {renderCaptcha}\n                    <div className=\"cr-sign-up-form__button-wrapper\">\n                        <Button\n                            block={true}\n                            type=\"button\"\n                            disabled={disableButton}\n                            onClick={(e) => handleClick(e as any)}\n                            size=\"lg\"\n                            variant=\"primary\">\n                            {isLoading ? 'Loading...' : labelSignUp ? labelSignUp : 'Sign up'}\n                        </Button>\n                    </div>\n                    {isMobileDevice && renderLogIn()}\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport const SignUpForm = React.memo(SignUpFormComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}