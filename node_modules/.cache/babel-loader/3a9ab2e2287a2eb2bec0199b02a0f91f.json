{"ast":null,"code":"'use strict';\n\nvar crypto = require('crypto');\nvar BufferUtil = require('../util/buffer');\nvar $ = require('../util/preconditions');\nvar Hash = module.exports;\nHash.sha1 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha1').update(buf).digest();\n};\nHash.sha1.blocksize = 512;\nHash.sha256 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha256').update(buf).digest();\n};\nHash.sha256.blocksize = 512;\nHash.sha256sha256 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.sha256(Hash.sha256(buf));\n};\nHash.ripemd160 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('ripemd160').update(buf).digest();\n};\nHash.sha256ripemd160 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.ripemd160(Hash.sha256(buf));\n};\nHash.sha512 = function (buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha512').update(buf).digest();\n};\nHash.sha512.blocksize = 1024;\nHash.hmac = function (hashf, data, key) {\n  //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  //http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(BufferUtil.isBuffer(data));\n  $.checkArgument(BufferUtil.isBuffer(key));\n  $.checkArgument(hashf.blocksize);\n  var blocksize = hashf.blocksize / 8;\n  if (key.length > blocksize) {\n    key = hashf(key);\n  } else if (key < blocksize) {\n    var fill = new Buffer(blocksize);\n    fill.fill(0);\n    key.copy(fill);\n    key = fill;\n  }\n  var o_key = new Buffer(blocksize);\n  o_key.fill(0x5c);\n  var i_key = new Buffer(blocksize);\n  i_key.fill(0x36);\n  var o_key_pad = new Buffer(blocksize);\n  var i_key_pad = new Buffer(blocksize);\n  for (var i = 0; i < blocksize; i++) {\n    o_key_pad[i] = o_key[i] ^ key[i];\n    i_key_pad[i] = i_key[i] ^ key[i];\n  }\n  return hashf(Buffer.concat([o_key_pad, hashf(Buffer.concat([i_key_pad, data]))]));\n};\nHash.sha256hmac = function (data, key) {\n  return Hash.hmac(Hash.sha256, data, key);\n};\nHash.sha512hmac = function (data, key) {\n  return Hash.hmac(Hash.sha512, data, key);\n};","map":{"version":3,"names":["crypto","require","BufferUtil","$","Hash","module","exports","sha1","buf","checkArgument","isBuffer","createHash","update","digest","blocksize","sha256","sha256sha256","ripemd160","sha256ripemd160","sha512","hmac","hashf","data","key","length","fill","Buffer","copy","o_key","i_key","o_key_pad","i_key_pad","i","concat","sha256hmac","sha512hmac"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/crypto/hash.js"],"sourcesContent":["'use strict';\n\nvar crypto = require('crypto');\nvar BufferUtil = require('../util/buffer');\nvar $ = require('../util/preconditions');\n\nvar Hash = module.exports;\n\nHash.sha1 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha1').update(buf).digest();\n};\n\nHash.sha1.blocksize = 512;\n\nHash.sha256 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha256').update(buf).digest();\n};\n\nHash.sha256.blocksize = 512;\n\nHash.sha256sha256 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.sha256(Hash.sha256(buf));\n};\n\nHash.ripemd160 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('ripemd160').update(buf).digest();\n};\n\nHash.sha256ripemd160 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.ripemd160(Hash.sha256(buf));\n};\n\nHash.sha512 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha512').update(buf).digest();\n};\n\nHash.sha512.blocksize = 1024;\n\nHash.hmac = function(hashf, data, key) {\n  //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  //http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(BufferUtil.isBuffer(data));\n  $.checkArgument(BufferUtil.isBuffer(key));\n  $.checkArgument(hashf.blocksize);\n\n  var blocksize = hashf.blocksize / 8;\n\n  if (key.length > blocksize) {\n    key = hashf(key);\n  } else if (key < blocksize) {\n    var fill = new Buffer(blocksize);\n    fill.fill(0);\n    key.copy(fill);\n    key = fill;\n  }\n\n  var o_key = new Buffer(blocksize);\n  o_key.fill(0x5c);\n\n  var i_key = new Buffer(blocksize);\n  i_key.fill(0x36);\n\n  var o_key_pad = new Buffer(blocksize);\n  var i_key_pad = new Buffer(blocksize);\n  for (var i = 0; i < blocksize; i++) {\n    o_key_pad[i] = o_key[i] ^ key[i];\n    i_key_pad[i] = i_key[i] ^ key[i];\n  }\n\n  return hashf(Buffer.concat([o_key_pad, hashf(Buffer.concat([i_key_pad, data]))]));\n};\n\nHash.sha256hmac = function(data, key) {\n  return Hash.hmac(Hash.sha256, data, key);\n};\n\nHash.sha512hmac = function(data, key) {\n  return Hash.hmac(Hash.sha512, data, key);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}