{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\Markets\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { Markets } from '../../components/Markets';\nimport { selectUserInfo, setCurrentPrice as _setCurrentPrice } from '../../modules';\nimport { marketsTickersFetch, selectCurrentMarket, selectMarkets, selectMarketsLoading, selectMarketTickers, setCurrentMarket as _setCurrentMarket } from '../../modules/public/markets';\nimport { depthFetch as _depthFetch } from '../../modules/public/orderBook';\nvar MarketsContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(MarketsContainer, _React$Component);\n  var _super = _createSuper(MarketsContainer);\n  function MarketsContainer() {\n    var _this;\n    _classCallCheck(this, MarketsContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.headers = [_this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.pair'\n    }), _this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.price'\n    }), _this.props.intl.formatMessage({\n      id: 'page.body.trade.header.markets.content.change'\n    })];\n    _this.markets = function () {\n      var currentMarket = _this.props.currentMarket;\n      var key = currentMarket && currentMarket.name;\n      return /*#__PURE__*/React.createElement(Markets, {\n        filters: false,\n        data: _this.mapMarkets(),\n        rowKeyIndex: 0,\n        onSelect: _this.handleOnSelect,\n        selectedKey: key,\n        headers: _this.headers,\n        title: _this.props.intl.formatMessage({\n          id: 'page.body.trade.header.markets'\n        }),\n        filterPlaceholder: _this.props.intl.formatMessage({\n          id: 'page.body.trade.header.markets.content.search'\n        }),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      });\n    };\n    _this.handleOnSelect = function (index) {\n      var _this$props = _this.props,\n        markets = _this$props.markets,\n        currentMarket = _this$props.currentMarket;\n      var marketToSet = markets.find(function (el) {\n        return el.name === index;\n      });\n      _this.props.setCurrentPrice(0);\n      if (marketToSet && (!currentMarket || currentMarket.id !== marketToSet.id)) {\n        _this.props.setCurrentMarket(marketToSet);\n        if (!incrementalOrderBook()) {\n          _this.props.depthFetch(marketToSet);\n        }\n      }\n    };\n    return _this;\n  }\n  _createClass(MarketsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.markets.length === 0) {\n        this.props.tickers();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var marketsLoading = this.props.marketsLoading;\n      var className = classnames('pg-markets', {\n        'pg-markets--loading': marketsLoading\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, marketsLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 40\n        }\n      })) : this.markets());\n    }\n  }, {\n    key: \"mapMarkets\",\n    value: function mapMarkets() {\n      var _this$props2 = this.props,\n        markets = _this$props2.markets,\n        marketTickers = _this$props2.marketTickers;\n      var defaultTicker = {\n        last: 0,\n        price_change_percent: '+0.00%'\n      };\n      return markets.map(function (market) {\n        return [market.name, Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision, ','), (marketTickers[market.id] || defaultTicker).price_change_percent];\n      });\n    }\n  }]);\n  return MarketsContainer;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userData: selectUserInfo(state),\n    markets: selectMarkets(state),\n    marketsLoading: selectMarketsLoading(state),\n    marketTickers: selectMarketTickers(state),\n    currentMarket: selectCurrentMarket(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCurrentMarket: function setCurrentMarket(market) {\n      return dispatch(_setCurrentMarket(market));\n    },\n    depthFetch: function depthFetch(market) {\n      return dispatch(_depthFetch(market));\n    },\n    tickers: function tickers() {\n      return dispatch(marketsTickersFetch());\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\nexport var MarketsComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsContainer));","map":{"version":3,"names":["classnames","React","Spinner","injectIntl","connect","incrementalOrderBook","Decimal","Markets","selectUserInfo","setCurrentPrice","marketsTickersFetch","selectCurrentMarket","selectMarkets","selectMarketsLoading","selectMarketTickers","setCurrentMarket","depthFetch","MarketsContainer","headers","props","intl","formatMessage","id","markets","currentMarket","key","name","mapMarkets","handleOnSelect","index","marketToSet","find","el","length","tickers","marketsLoading","className","marketTickers","defaultTicker","last","price_change_percent","map","market","format","Number","amount_precision","Component","mapStateToProps","state","userData","mapDispatchToProps","dispatch","payload","MarketsComponent"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/Markets/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { incrementalOrderBook } from '../../api';\nimport { Decimal } from '../../components/Decimal';\nimport { Markets } from '../../components/Markets';\nimport { RootState, selectUserInfo, setCurrentPrice, User } from '../../modules';\nimport {\n    Market,\n    marketsTickersFetch,\n    selectCurrentMarket,\n    selectMarkets,\n    selectMarketsLoading,\n    selectMarketTickers,\n    setCurrentMarket,\n    Ticker,\n} from '../../modules/public/markets';\nimport { depthFetch } from '../../modules/public/orderBook';\n\ninterface ReduxProps {\n    userData: User;\n    markets: Market[];\n    marketsLoading?: boolean;\n    marketTickers: {\n        [key: string]: Ticker,\n    };\n    currentMarket: Market | undefined;\n}\n\ninterface DispatchProps {\n    setCurrentMarket: typeof setCurrentMarket;\n    depthFetch: typeof depthFetch;\n    tickers: typeof marketsTickersFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nclass MarketsContainer extends React.Component<Props> {\n    private headers = [\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.pair'}),\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.price'}),\n        this.props.intl.formatMessage({id: 'page.body.trade.header.markets.content.change'}),\n    ];\n\n    public componentDidMount() {\n        if (this.props.markets.length === 0) {\n            this.props.tickers();\n        }\n    }\n\n    public render() {\n        const { marketsLoading } = this.props;\n        const className = classnames('pg-markets', {\n            'pg-markets--loading': marketsLoading,\n        });\n\n        return (\n            <div className={className}>\n                {marketsLoading ? <div><Spinner animation=\"border\" variant=\"primary\" /></div> : this.markets()}\n            </div>\n        );\n    }\n\n    private markets = () => {\n        const { currentMarket } = this.props;\n        const key = currentMarket && currentMarket.name;\n\n        return (\n            <Markets\n                filters={false}\n                data={this.mapMarkets()}\n                rowKeyIndex={0}\n                onSelect={this.handleOnSelect}\n                selectedKey={key}\n                headers={this.headers}\n                title={this.props.intl.formatMessage({id: 'page.body.trade.header.markets'})}\n                filterPlaceholder={this.props.intl.formatMessage({ id: 'page.body.trade.header.markets.content.search'})}\n            />\n        );\n    };\n\n    private mapMarkets() {\n        const { markets, marketTickers } = this.props;\n        const defaultTicker = {\n            last: 0,\n            price_change_percent: '+0.00%',\n        };\n\n        return markets.map((market: Market) =>\n            ([\n                market.name,\n                Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision, ','),\n                (marketTickers[market.id] || defaultTicker).price_change_percent,\n            ]),\n        );\n    }\n\n    private handleOnSelect = (index: string) => {\n        const { markets, currentMarket } = this.props;\n        const marketToSet = markets.find(el => el.name === index);\n        this.props.setCurrentPrice(0);\n\n        if (marketToSet && (!currentMarket || currentMarket.id !== marketToSet.id)) {\n            this.props.setCurrentMarket(marketToSet);\n            if (!incrementalOrderBook()) {\n              this.props.depthFetch(marketToSet);\n            }\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    userData: selectUserInfo(state),\n    markets: selectMarkets(state),\n    marketsLoading: selectMarketsLoading(state),\n    marketTickers: selectMarketTickers(state),\n    currentMarket: selectCurrentMarket(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        setCurrentMarket: (market: Market) => dispatch(setCurrentMarket(market)),\n        depthFetch: (market: Market) => dispatch(depthFetch(market)),\n        tickers: () => dispatch(marketsTickersFetch()),\n        setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    });\n\nexport const MarketsComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsContainer)) as any;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}