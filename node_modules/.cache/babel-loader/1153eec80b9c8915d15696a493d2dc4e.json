{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\mobile\\\\screens\\\\ProfileColorTheme\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { changeColorTheme, selectCurrentColorTheme } from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\nvar COLOR_THEMES = ['dark', 'light'];\nvar ProfileThemeMobileScreenComponent = function ProfileThemeMobileScreenComponent() {\n  var intl = useIntl();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var currentColorTheme = useSelector(selectCurrentColorTheme);\n  var handleChangeColorTheme = function handleChangeColorTheme(colorTheme) {\n    if (colorTheme !== currentColorTheme) {\n      dispatch(changeColorTheme(colorTheme));\n    }\n  };\n  var renderThemeListItem = function renderThemeListItem(colorTheme, index) {\n    var listItemClassName = classnames('pg-mobile-profile-theme-screen__list__item', {\n      'pg-mobile-profile-theme-screen__list__item--active': colorTheme === currentColorTheme\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: listItemClassName,\n      onClick: function onClick() {\n        return handleChangeColorTheme(colorTheme);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, intl.formatMessage({\n      id: \"page.mobile.profileColorTheme.theme.\".concat(colorTheme)\n    })), /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.theme.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-theme-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-theme-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, COLOR_THEMES.map(renderThemeListItem))));\n};\nexport var ProfileThemeMobileScreen = React.memo(ProfileThemeMobileScreenComponent);","map":{"version":3,"names":["classnames","React","useIntl","useDispatch","useSelector","useHistory","changeColorTheme","selectCurrentColorTheme","CheckIcon","Subheader","COLOR_THEMES","ProfileThemeMobileScreenComponent","intl","history","dispatch","currentColorTheme","handleChangeColorTheme","colorTheme","renderThemeListItem","index","listItemClassName","formatMessage","id","push","map","ProfileThemeMobileScreen","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/mobile/screens/ProfileColorTheme/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport {\n    changeColorTheme,\n    selectCurrentColorTheme,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst COLOR_THEMES = ['dark', 'light'];\n\nconst ProfileThemeMobileScreenComponent: React.FC = () => {\n    const intl = useIntl();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const currentColorTheme = useSelector(selectCurrentColorTheme);\n\n    const handleChangeColorTheme = (colorTheme: string) => {\n        if (colorTheme !== currentColorTheme) {\n            dispatch(changeColorTheme(colorTheme));\n        }\n    };\n\n    const renderThemeListItem = (colorTheme, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-theme-screen__list__item', {\n            'pg-mobile-profile-theme-screen__list__item--active': colorTheme === currentColorTheme,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeColorTheme(colorTheme)}\n            >\n                <span>{intl.formatMessage({id: `page.mobile.profileColorTheme.theme.${colorTheme}`})}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.theme.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-theme-screen\">\n                <div className=\"pg-mobile-profile-theme-screen__list\">\n                    {COLOR_THEMES.map(renderThemeListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileThemeMobileScreen = React.memo(ProfileThemeMobileScreenComponent);\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,cAAc;AACzC,SACIC,gBAAgB,EAChBC,uBAAuB,QACpB,kBAAkB;AACzB,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,IAAMC,YAAY,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;AAEtC,IAAMC,iCAA2C,GAAG,SAA9CA,iCAA2C,GAAS;EACtD,IAAMC,IAAI,GAAGV,OAAO,EAAE;EACtB,IAAMW,OAAO,GAAGR,UAAU,EAAE;EAC5B,IAAMS,QAAQ,GAAGX,WAAW,EAAE;EAC9B,IAAMY,iBAAiB,GAAGX,WAAW,CAACG,uBAAuB,CAAC;EAE9D,IAAMS,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,UAAkB,EAAK;IACnD,IAAIA,UAAU,KAAKF,iBAAiB,EAAE;MAClCD,QAAQ,CAACR,gBAAgB,CAACW,UAAU,CAAC,CAAC;IAC1C;EACJ,CAAC;EAED,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAID,UAAU,EAAEE,KAAK,EAAK;IAC/C,IAAMC,iBAAiB,GAAGpB,UAAU,CAAC,4CAA4C,EAAE;MAC/E,oDAAoD,EAAEiB,UAAU,KAAKF;IACzE,CAAC,CAAC;IAEF,oBACI;MACI,GAAG,EAAEI,KAAM;MACX,SAAS,EAAEC,iBAAkB;MAC7B,OAAO,EAAE;QAAA,OAAMJ,sBAAsB,CAACC,UAAU,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAElD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOL,IAAI,CAACS,aAAa,CAAC;MAACC,EAAE,gDAAyCL,UAAU;IAAE,CAAC,CAAC,CAAQ,eAC5F,oBAAC,SAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAG,CACX;EAEd,CAAC;EAED,oBACI,oBAAC,KAAK,CAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACb,oBAAC,SAAS;IACR,KAAK,EAAEL,IAAI,CAACS,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAkC,CAAC,CAAE;IACrE,SAAS,EAAEV,IAAI,CAACS,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAmC,CAAC,CAAE;IAC1E,QAAQ,EAAE;MAAA,OAAMT,OAAO,CAACU,IAAI,CAAC,UAAU,CAAC;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACzC,eACA;IAAK,SAAS,EAAC,gCAAgC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3C;IAAK,SAAS,EAAC,sCAAsC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChDb,YAAY,CAACc,GAAG,CAACN,mBAAmB,CAAC,CACpC,CACJ,CACO;AAEzB,CAAC;AAED,OAAO,IAAMO,wBAAwB,GAAGxB,KAAK,CAACyB,IAAI,CAACf,iCAAiC,CAAC"},"metadata":{},"sourceType":"module"}