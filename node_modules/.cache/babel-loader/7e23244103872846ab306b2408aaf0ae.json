{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\OrdersElement\\\\index.tsx\";\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { History, Pagination } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { localeDate, setTradeColor } from '../../helpers';\nimport { ordersHistoryCancelFetch as _ordersHistoryCancelFetch, selectCancelAllFetching, selectCancelFetching, selectCurrentPageIndex, selectMarkets, selectOrdersFirstElemIndex, selectOrdersHistory, selectOrdersHistoryLoading, selectOrdersLastElemIndex, selectOrdersNextPageExists, userOrdersHistoryFetch as _userOrdersHistoryFetch } from '../../modules';\nvar OrdersComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(OrdersComponent, _React$PureComponent);\n  var _super = _createSuper(OrdersComponent);\n  function OrdersComponent() {\n    var _this;\n    _classCallCheck(this, OrdersComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.renderContent = function (list) {\n      var _this$props = _this.props,\n        firstElemIndex = _this$props.firstElemIndex,\n        lastElemIndex = _this$props.lastElemIndex,\n        pageIndex = _this$props.pageIndex,\n        nextPageExists = _this$props.nextPageExists;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(History, {\n        headers: _this.renderHeaders(),\n        data: _this.retrieveData(list),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Pagination, {\n        firstElemIndex: firstElemIndex,\n        lastElemIndex: lastElemIndex,\n        page: pageIndex,\n        nextPageExists: nextPageExists,\n        onClickPrevPage: _this.onClickPrevPage,\n        onClickNextPage: _this.onClickNextPage,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }));\n    };\n    _this.onClickPrevPage = function () {\n      var _this$props2 = _this.props,\n        pageIndex = _this$props2.pageIndex,\n        type = _this$props2.type;\n      _this.props.userOrdersHistoryFetch({\n        pageIndex: Number(pageIndex) - 1,\n        type: type,\n        limit: 25\n      });\n    };\n    _this.onClickNextPage = function () {\n      var _this$props3 = _this.props,\n        pageIndex = _this$props3.pageIndex,\n        type = _this$props3.type;\n      _this.props.userOrdersHistoryFetch({\n        pageIndex: Number(pageIndex) + 1,\n        type: type,\n        limit: 25\n      });\n    };\n    _this.renderHeaders = function () {\n      return [_this.props.intl.formatMessage({\n        id: 'page.body.history.deposit.header.date'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.orderType'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.pair'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.price'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.amount'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.executed'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.remaining'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.costRemaining'\n      }), _this.props.intl.formatMessage({\n        id: 'page.body.openOrders.header.status'\n      }), ''];\n    };\n    _this.retrieveData = function (list) {\n      return list.map(function (item) {\n        return _this.renderOrdersHistoryRow(item);\n      });\n    };\n    _this.renderOrdersHistoryRow = function (item) {\n      var id = item.id,\n        executed_volume = item.executed_volume,\n        market = item.market,\n        ord_type = item.ord_type,\n        price = item.price,\n        avg_price = item.avg_price,\n        remaining_volume = item.remaining_volume,\n        origin_volume = item.origin_volume,\n        side = item.side,\n        state = item.state,\n        updated_at = item.updated_at,\n        created_at = item.created_at;\n      var currentMarket = _this.props.marketsData.find(function (m) {\n        return m.id === market;\n      }) || {\n        name: '',\n        price_precision: 0,\n        amount_precision: 0\n      };\n      var orderType = _this.getType(side, ord_type);\n      var marketName = currentMarket ? currentMarket.name : market;\n      var costRemaining = remaining_volume * price; // price or avg_price ???\n      var date = localeDate(updated_at ? updated_at : created_at, 'fullDate');\n      var status = _this.setOrderStatus(state);\n      var actualPrice = ord_type === 'market' || status === 'done' ? avg_price : price;\n      return [date, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: setTradeColor(side).color\n        },\n        key: id,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, orderType), marketName, /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: currentMarket.price_precision,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, actualPrice), /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: currentMarket.amount_precision,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }, origin_volume), /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: currentMarket.amount_precision,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, executed_volume), /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: currentMarket.amount_precision,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, remaining_volume), /*#__PURE__*/React.createElement(Decimal, {\n        key: id,\n        fixed: currentMarket.amount_precision,\n        thousSep: \",\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, costRemaining.toString()), status, state === 'wait' && /*#__PURE__*/React.createElement(CloseIcon, {\n        key: id,\n        onClick: _this.handleCancel(id),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 33\n        }\n      })];\n    };\n    _this.getType = function (side, orderType) {\n      if (!side || !orderType) {\n        return '';\n      }\n      return _this.props.intl.formatMessage({\n        id: \"page.body.openOrders.header.orderType.\".concat(side, \".\").concat(orderType)\n      });\n    };\n    _this.setOrderStatus = function (status) {\n      switch (status) {\n        case 'done':\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"pg-history-elem-executed\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.openOrders.content.status.done\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }\n          }));\n        case 'cancel':\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"pg-history-elem-canceled\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.openOrders.content.status.cancel\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }\n          }));\n        case 'wait':\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"pg-history-elem-opened\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"page.body.openOrders.content.status.wait\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }\n          }));\n        default:\n          return status;\n      }\n    };\n    _this.handleCancel = function (id) {\n      return function () {\n        var _this$props4 = _this.props,\n          cancelAllFetching = _this$props4.cancelAllFetching,\n          cancelFetching = _this$props4.cancelFetching,\n          type = _this$props4.type,\n          list = _this$props4.list;\n        if (cancelAllFetching || cancelFetching) {\n          return;\n        }\n        _this.props.ordersHistoryCancelFetch({\n          id: id,\n          type: type,\n          list: list\n        });\n      };\n    };\n    return _this;\n  }\n  _createClass(OrdersComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var type = this.props.type;\n      this.props.userOrdersHistoryFetch({\n        pageIndex: 0,\n        type: type,\n        limit: 25\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        type = _this$props5.type,\n        list = _this$props5.list,\n        fetching = _this$props5.fetching;\n      var updateList = list;\n      if (type === 'open') {\n        updateList = list.filter(function (o) {\n          return o.state === 'wait';\n        });\n      }\n      var emptyMsg = this.props.intl.formatMessage({\n        id: 'page.noDataToShow'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-history-elem \".concat(updateList.length ? '' : 'pg-history-elem-empty'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, fetching && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 59\n        }\n      })), updateList.length ? this.renderContent(updateList) : null, !updateList.length && !fetching ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-history-elem__empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 52\n        }\n      }, emptyMsg) : null);\n    }\n  }]);\n  return OrdersComponent;\n}(React.PureComponent);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    marketsData: selectMarkets(state),\n    pageIndex: selectCurrentPageIndex(state),\n    firstElemIndex: selectOrdersFirstElemIndex(state, 25),\n    list: selectOrdersHistory(state),\n    fetching: selectOrdersHistoryLoading(state),\n    lastElemIndex: selectOrdersLastElemIndex(state, 25),\n    nextPageExists: selectOrdersNextPageExists(state),\n    cancelAllFetching: selectCancelAllFetching(state),\n    cancelFetching: selectCancelFetching(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    ordersHistoryCancelFetch: function ordersHistoryCancelFetch(payload) {\n      return dispatch(_ordersHistoryCancelFetch(payload));\n    },\n    userOrdersHistoryFetch: function userOrdersHistoryFetch(payload) {\n      return dispatch(_userOrdersHistoryFetch(payload));\n    }\n  };\n};\nexport var OrdersElement = compose(injectIntl, connect(mapStateToProps, mapDispatchToProps))(OrdersComponent); // tslint:disable-line","map":{"version":3,"names":["React","Spinner","FormattedMessage","injectIntl","connect","compose","CloseIcon","History","Pagination","Decimal","localeDate","setTradeColor","ordersHistoryCancelFetch","selectCancelAllFetching","selectCancelFetching","selectCurrentPageIndex","selectMarkets","selectOrdersFirstElemIndex","selectOrdersHistory","selectOrdersHistoryLoading","selectOrdersLastElemIndex","selectOrdersNextPageExists","userOrdersHistoryFetch","OrdersComponent","renderContent","list","props","firstElemIndex","lastElemIndex","pageIndex","nextPageExists","renderHeaders","retrieveData","onClickPrevPage","onClickNextPage","type","Number","limit","intl","formatMessage","id","map","item","renderOrdersHistoryRow","executed_volume","market","ord_type","price","avg_price","remaining_volume","origin_volume","side","state","updated_at","created_at","currentMarket","marketsData","find","m","name","price_precision","amount_precision","orderType","getType","marketName","costRemaining","date","status","setOrderStatus","actualPrice","color","toString","handleCancel","cancelAllFetching","cancelFetching","fetching","updateList","filter","o","emptyMsg","length","PureComponent","mapStateToProps","mapDispatchToProps","dispatch","payload","OrdersElement"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/OrdersElement/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { History, Pagination } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { localeDate, setTradeColor } from '../../helpers';\nimport {\n    Market,\n    ordersHistoryCancelFetch,\n    RootState,\n    selectCancelAllFetching,\n    selectCancelFetching,\n    selectCurrentPageIndex,\n    selectMarkets,\n    selectOrdersFirstElemIndex,\n    selectOrdersHistory,\n    selectOrdersHistoryLoading,\n    selectOrdersLastElemIndex,\n    selectOrdersNextPageExists,\n    userOrdersHistoryFetch,\n} from '../../modules';\nimport { OrderCommon } from '../../modules/types';\n\ninterface OrdersProps {\n    type: string;\n}\n\ninterface ReduxProps {\n    marketsData: Market[];\n    pageIndex: number;\n    firstElemIndex: number;\n    list: OrderCommon[];\n    fetching: boolean;\n    lastElemIndex: number;\n    nextPageExists: boolean;\n    cancelAllFetching: boolean;\n    cancelFetching: boolean;\n}\n\ninterface DispatchProps {\n    ordersHistoryCancelFetch: typeof ordersHistoryCancelFetch;\n    userOrdersHistoryFetch: typeof userOrdersHistoryFetch;\n}\n\ninterface OrdersState {\n    orderType: boolean;\n}\n\n\ntype Props = OrdersProps & ReduxProps & DispatchProps & IntlProps;\n\nclass OrdersComponent extends React.PureComponent<Props, OrdersState>  {\n    public componentDidMount() {\n        const { type } = this.props;\n        this.props.userOrdersHistoryFetch({ pageIndex: 0, type, limit: 25 });\n    }\n\n    public render() {\n        const { type, list, fetching } = this.props;\n        let updateList = list;\n\n        if (type === 'open') {\n            updateList = list.filter(o => o.state === 'wait');\n        }\n\n        const emptyMsg = this.props.intl.formatMessage({id: 'page.noDataToShow'});\n\n        return (\n            <div className={`pg-history-elem ${updateList.length ? '' : 'pg-history-elem-empty'}`}>\n                {fetching && <div className=\"text-center\"><Spinner animation=\"border\" variant=\"primary\" /></div>}\n                {updateList.length ? this.renderContent(updateList) : null}\n                {!updateList.length && !fetching ? <p className=\"pg-history-elem__empty\">{emptyMsg}</p> : null}\n            </div>\n        );\n    }\n\n    public renderContent = list => {\n        const { firstElemIndex, lastElemIndex, pageIndex, nextPageExists } = this.props;\n\n        return (\n            <React.Fragment>\n                <History headers={this.renderHeaders()} data={this.retrieveData(list)}/>\n                <Pagination\n                    firstElemIndex={firstElemIndex}\n                    lastElemIndex={lastElemIndex}\n                    page={pageIndex}\n                    nextPageExists={nextPageExists}\n                    onClickPrevPage={this.onClickPrevPage}\n                    onClickNextPage={this.onClickNextPage}\n                />\n            </React.Fragment>\n        );\n    };\n\n    private onClickPrevPage = () => {\n        const { pageIndex, type } = this.props;\n        this.props.userOrdersHistoryFetch({ pageIndex: Number(pageIndex) - 1, type, limit: 25 });\n    };\n\n    private onClickNextPage = () => {\n        const { pageIndex, type } = this.props;\n        this.props.userOrdersHistoryFetch({ pageIndex: Number(pageIndex) + 1, type, limit: 25 });\n    };\n\n    private renderHeaders = () => {\n        return [\n            this.props.intl.formatMessage({ id: 'page.body.history.deposit.header.date' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.orderType' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.pair' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.price' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.amount' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.executed' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.remaining' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.costRemaining' }),\n            this.props.intl.formatMessage({ id: 'page.body.openOrders.header.status' }),\n            '',\n        ];\n    };\n\n    private retrieveData = list => {\n        return list.map(item => this.renderOrdersHistoryRow(item));\n    };\n\n    private renderOrdersHistoryRow = item => {\n        const {\n            id,\n            executed_volume,\n            market,\n            ord_type,\n            price,\n            avg_price,\n            remaining_volume,\n            origin_volume,\n            side,\n            state,\n            updated_at,\n            created_at,\n        } = item;\n        const currentMarket = this.props.marketsData.find(m => m.id === market)\n            || { name: '', price_precision: 0, amount_precision: 0 };\n\n        const orderType = this.getType(side, ord_type);\n        const marketName = currentMarket ? currentMarket.name : market;\n        const costRemaining = remaining_volume * price; // price or avg_price ???\n        const date = localeDate(updated_at ? updated_at : created_at, 'fullDate');\n        const status = this.setOrderStatus(state);\n        const actualPrice = ord_type === 'market' || status === 'done' ? avg_price : price;\n\n        return [\n            date,\n            <span style={{ color: setTradeColor(side).color }} key={id}>{orderType}</span>,\n            marketName,\n            <Decimal key={id} fixed={currentMarket.price_precision} thousSep=\",\">{actualPrice}</Decimal>,\n            <Decimal key={id} fixed={currentMarket.amount_precision} thousSep=\",\">{origin_volume}</Decimal>,\n            <Decimal key={id} fixed={currentMarket.amount_precision} thousSep=\",\">{executed_volume}</Decimal>,\n            <Decimal key={id} fixed={currentMarket.amount_precision} thousSep=\",\">{remaining_volume}</Decimal>,\n            <Decimal key={id} fixed={currentMarket.amount_precision} thousSep=\",\">{costRemaining.toString()}</Decimal>,\n            status,\n            state === 'wait' && <CloseIcon key={id} onClick={this.handleCancel(id)} />,\n        ];\n    };\n\n    private getType = (side: string, orderType: string) => {\n        if (!side || !orderType) {\n            return '';\n        }\n\n        return this.props.intl.formatMessage({ id: `page.body.openOrders.header.orderType.${side}.${orderType}` });\n    };\n\n    private setOrderStatus = (status: string) => {\n        switch (status) {\n            case 'done':\n                return (\n                    <span className=\"pg-history-elem-executed\">\n                        <FormattedMessage id={`page.body.openOrders.content.status.done`} />\n                    </span>\n                );\n            case 'cancel':\n                return (\n                    <span className=\"pg-history-elem-canceled\">\n                        <FormattedMessage id={`page.body.openOrders.content.status.cancel`} />\n                    </span>\n                );\n            case 'wait':\n                return (\n                    <span className=\"pg-history-elem-opened\">\n                        <FormattedMessage id={`page.body.openOrders.content.status.wait`} />\n                    </span>\n                );\n            default:\n                return status;\n        }\n    };\n\n    private handleCancel = (id: number) => () => {\n        const { cancelAllFetching, cancelFetching, type, list } = this.props;\n        if (cancelAllFetching || cancelFetching) {\n            return;\n        }\n        this.props.ordersHistoryCancelFetch({ id, type, list });\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    marketsData: selectMarkets(state),\n    pageIndex: selectCurrentPageIndex(state),\n    firstElemIndex: selectOrdersFirstElemIndex(state, 25),\n    list: selectOrdersHistory(state),\n    fetching: selectOrdersHistoryLoading(state),\n    lastElemIndex: selectOrdersLastElemIndex(state, 25),\n    nextPageExists: selectOrdersNextPageExists(state),\n    cancelAllFetching: selectCancelAllFetching(state),\n    cancelFetching: selectCancelFetching(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        ordersHistoryCancelFetch: payload => dispatch(ordersHistoryCancelFetch(payload)),\n        userOrdersHistoryFetch: payload => dispatch(userOrdersHistoryFetch(payload)),\n    });\n\nexport const OrdersElement = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(OrdersComponent) as any; // tslint:disable-line\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,YAAY;AACzD,SAASC,OAAO,QAAoC,aAAa;AACjE,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,SAAS,QAAQ,+BAA+B;AACzD,SAASC,OAAO,EAAEC,UAAU,QAAQ,kBAAkB;AACtD,SAASC,OAAO,QAAQ,0BAA0B;AAClD,SAASC,UAAU,EAAEC,aAAa,QAAQ,eAAe;AACzD,SAEIC,wBAAwB,IAAxBA,yBAAwB,EAExBC,uBAAuB,EACvBC,oBAAoB,EACpBC,sBAAsB,EACtBC,aAAa,EACbC,0BAA0B,EAC1BC,mBAAmB,EACnBC,0BAA0B,EAC1BC,yBAAyB,EACzBC,0BAA0B,EAC1BC,sBAAsB,IAAtBA,uBAAsB,QACnB,eAAe;AAAC,IA+BjBC,eAAe;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAyBVC,aAAa,GAAG,UAAAC,IAAI,EAAI;MAC3B,kBAAqE,MAAKC,KAAK;QAAvEC,cAAc,eAAdA,cAAc;QAAEC,aAAa,eAAbA,aAAa;QAAEC,SAAS,eAATA,SAAS;QAAEC,cAAc,eAAdA,cAAc;MAEhE,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACX,oBAAC,OAAO;QAAC,OAAO,EAAE,MAAKC,aAAa,EAAG;QAAC,IAAI,EAAE,MAAKC,YAAY,CAACP,IAAI,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,eACxE,oBAAC,UAAU;QACP,cAAc,EAAEE,cAAe;QAC/B,aAAa,EAAEC,aAAc;QAC7B,IAAI,EAAEC,SAAU;QAChB,cAAc,EAAEC,cAAe;QAC/B,eAAe,EAAE,MAAKG,eAAgB;QACtC,eAAe,EAAE,MAAKC,eAAgB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxC,CACW;IAEzB,CAAC;IAAA,MAEOD,eAAe,GAAG,YAAM;MAC5B,mBAA4B,MAAKP,KAAK;QAA9BG,SAAS,gBAATA,SAAS;QAAEM,IAAI,gBAAJA,IAAI;MACvB,MAAKT,KAAK,CAACJ,sBAAsB,CAAC;QAAEO,SAAS,EAAEO,MAAM,CAACP,SAAS,CAAC,GAAG,CAAC;QAAEM,IAAI,EAAJA,IAAI;QAAEE,KAAK,EAAE;MAAG,CAAC,CAAC;IAC5F,CAAC;IAAA,MAEOH,eAAe,GAAG,YAAM;MAC5B,mBAA4B,MAAKR,KAAK;QAA9BG,SAAS,gBAATA,SAAS;QAAEM,IAAI,gBAAJA,IAAI;MACvB,MAAKT,KAAK,CAACJ,sBAAsB,CAAC;QAAEO,SAAS,EAAEO,MAAM,CAACP,SAAS,CAAC,GAAG,CAAC;QAAEM,IAAI,EAAJA,IAAI;QAAEE,KAAK,EAAE;MAAG,CAAC,CAAC;IAC5F,CAAC;IAAA,MAEON,aAAa,GAAG,YAAM;MAC1B,OAAO,CACH,MAAKL,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAwC,CAAC,CAAC,EAC9E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAwC,CAAC,CAAC,EAC9E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAmC,CAAC,CAAC,EACzE,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAoC,CAAC,CAAC,EAC1E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAqC,CAAC,CAAC,EAC3E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAuC,CAAC,CAAC,EAC7E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAwC,CAAC,CAAC,EAC9E,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAA4C,CAAC,CAAC,EAClF,MAAKd,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,EAAE;MAAqC,CAAC,CAAC,EAC3E,EAAE,CACL;IACL,CAAC;IAAA,MAEOR,YAAY,GAAG,UAAAP,IAAI,EAAI;MAC3B,OAAOA,IAAI,CAACgB,GAAG,CAAC,UAAAC,IAAI;QAAA,OAAI,MAAKC,sBAAsB,CAACD,IAAI,CAAC;MAAA,EAAC;IAC9D,CAAC;IAAA,MAEOC,sBAAsB,GAAG,UAAAD,IAAI,EAAI;MACrC,IACIF,EAAE,GAYFE,IAAI,CAZJF,EAAE;QACFI,eAAe,GAWfF,IAAI,CAXJE,eAAe;QACfC,MAAM,GAUNH,IAAI,CAVJG,MAAM;QACNC,QAAQ,GASRJ,IAAI,CATJI,QAAQ;QACRC,KAAK,GAQLL,IAAI,CARJK,KAAK;QACLC,SAAS,GAOTN,IAAI,CAPJM,SAAS;QACTC,gBAAgB,GAMhBP,IAAI,CANJO,gBAAgB;QAChBC,aAAa,GAKbR,IAAI,CALJQ,aAAa;QACbC,IAAI,GAIJT,IAAI,CAJJS,IAAI;QACJC,KAAK,GAGLV,IAAI,CAHJU,KAAK;QACLC,UAAU,GAEVX,IAAI,CAFJW,UAAU;QACVC,UAAU,GACVZ,IAAI,CADJY,UAAU;MAEd,IAAMC,aAAa,GAAG,MAAK7B,KAAK,CAAC8B,WAAW,CAACC,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAClB,EAAE,KAAKK,MAAM;MAAA,EAAC,IAChE;QAAEc,IAAI,EAAE,EAAE;QAAEC,eAAe,EAAE,CAAC;QAAEC,gBAAgB,EAAE;MAAE,CAAC;MAE5D,IAAMC,SAAS,GAAG,MAAKC,OAAO,CAACZ,IAAI,EAAEL,QAAQ,CAAC;MAC9C,IAAMkB,UAAU,GAAGT,aAAa,GAAGA,aAAa,CAACI,IAAI,GAAGd,MAAM;MAC9D,IAAMoB,aAAa,GAAGhB,gBAAgB,GAAGF,KAAK,CAAC,CAAC;MAChD,IAAMmB,IAAI,GAAGxD,UAAU,CAAC2C,UAAU,GAAGA,UAAU,GAAGC,UAAU,EAAE,UAAU,CAAC;MACzE,IAAMa,MAAM,GAAG,MAAKC,cAAc,CAAChB,KAAK,CAAC;MACzC,IAAMiB,WAAW,GAAGvB,QAAQ,KAAK,QAAQ,IAAIqB,MAAM,KAAK,MAAM,GAAGnB,SAAS,GAAGD,KAAK;MAElF,OAAO,CACHmB,IAAI,eACJ;QAAM,KAAK,EAAE;UAAEI,KAAK,EAAE3D,aAAa,CAACwC,IAAI,CAAC,CAACmB;QAAM,CAAE;QAAC,GAAG,EAAE9B,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEsB,SAAS,CAAQ,EAC9EE,UAAU,eACV,oBAAC,OAAO;QAAC,GAAG,EAAExB,EAAG;QAAC,KAAK,EAAEe,aAAa,CAACK,eAAgB;QAAC,QAAQ,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAES,WAAW,CAAW,eAC5F,oBAAC,OAAO;QAAC,GAAG,EAAE7B,EAAG;QAAC,KAAK,EAAEe,aAAa,CAACM,gBAAiB;QAAC,QAAQ,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEX,aAAa,CAAW,eAC/F,oBAAC,OAAO;QAAC,GAAG,EAAEV,EAAG;QAAC,KAAK,EAAEe,aAAa,CAACM,gBAAiB;QAAC,QAAQ,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEjB,eAAe,CAAW,eACjG,oBAAC,OAAO;QAAC,GAAG,EAAEJ,EAAG;QAAC,KAAK,EAAEe,aAAa,CAACM,gBAAiB;QAAC,QAAQ,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEZ,gBAAgB,CAAW,eAClG,oBAAC,OAAO;QAAC,GAAG,EAAET,EAAG;QAAC,KAAK,EAAEe,aAAa,CAACM,gBAAiB;QAAC,QAAQ,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEI,aAAa,CAACM,QAAQ,EAAE,CAAW,EAC1GJ,MAAM,EACNf,KAAK,KAAK,MAAM,iBAAI,oBAAC,SAAS;QAAC,GAAG,EAAEZ,EAAG;QAAC,OAAO,EAAE,MAAKgC,YAAY,CAAChC,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAC7E;IACL,CAAC;IAAA,MAEOuB,OAAO,GAAG,UAACZ,IAAY,EAAEW,SAAiB,EAAK;MACnD,IAAI,CAACX,IAAI,IAAI,CAACW,SAAS,EAAE;QACrB,OAAO,EAAE;MACb;MAEA,OAAO,MAAKpC,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAAEC,EAAE,kDAA2CW,IAAI,cAAIW,SAAS;MAAG,CAAC,CAAC;IAC9G,CAAC;IAAA,MAEOM,cAAc,GAAG,UAACD,MAAc,EAAK;MACzC,QAAQA,MAAM;QACV,KAAK,MAAM;UACP,oBACI;YAAM,SAAS,EAAC,0BAA0B;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,gBACtC,oBAAC,gBAAgB;YAAC,EAAE,4CAA6C;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EAAG,CACjE;QAEf,KAAK,QAAQ;UACT,oBACI;YAAM,SAAS,EAAC,0BAA0B;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,gBACtC,oBAAC,gBAAgB;YAAC,EAAE,8CAA+C;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EAAG,CACnE;QAEf,KAAK,MAAM;UACP,oBACI;YAAM,SAAS,EAAC,wBAAwB;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,gBACpC,oBAAC,gBAAgB;YAAC,EAAE,4CAA6C;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,EAAG,CACjE;QAEf;UACI,OAAOA,MAAM;MAAC;IAE1B,CAAC;IAAA,MAEOK,YAAY,GAAG,UAAChC,EAAU;MAAA,OAAK,YAAM;QACzC,mBAA0D,MAAKd,KAAK;UAA5D+C,iBAAiB,gBAAjBA,iBAAiB;UAAEC,cAAc,gBAAdA,cAAc;UAAEvC,IAAI,gBAAJA,IAAI;UAAEV,IAAI,gBAAJA,IAAI;QACrD,IAAIgD,iBAAiB,IAAIC,cAAc,EAAE;UACrC;QACJ;QACA,MAAKhD,KAAK,CAACd,wBAAwB,CAAC;UAAE4B,EAAE,EAAFA,EAAE;UAAEL,IAAI,EAAJA,IAAI;UAAEV,IAAI,EAAJA;QAAK,CAAC,CAAC;MAC3D,CAAC;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OArJD,6BAA2B;MACvB,IAAQU,IAAI,GAAK,IAAI,CAACT,KAAK,CAAnBS,IAAI;MACZ,IAAI,CAACT,KAAK,CAACJ,sBAAsB,CAAC;QAAEO,SAAS,EAAE,CAAC;QAAEM,IAAI,EAAJA,IAAI;QAAEE,KAAK,EAAE;MAAG,CAAC,CAAC;IACxE;EAAC;IAAA;IAAA,OAED,kBAAgB;MACZ,mBAAiC,IAAI,CAACX,KAAK;QAAnCS,IAAI,gBAAJA,IAAI;QAAEV,IAAI,gBAAJA,IAAI;QAAEkD,QAAQ,gBAARA,QAAQ;MAC5B,IAAIC,UAAU,GAAGnD,IAAI;MAErB,IAAIU,IAAI,KAAK,MAAM,EAAE;QACjByC,UAAU,GAAGnD,IAAI,CAACoD,MAAM,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAAC1B,KAAK,KAAK,MAAM;QAAA,EAAC;MACrD;MAEA,IAAM2B,QAAQ,GAAG,IAAI,CAACrD,KAAK,CAACY,IAAI,CAACC,aAAa,CAAC;QAACC,EAAE,EAAE;MAAmB,CAAC,CAAC;MAEzE,oBACI;QAAK,SAAS,4BAAqBoC,UAAU,CAACI,MAAM,GAAG,EAAE,GAAG,uBAAuB,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACjFL,QAAQ,iBAAI;QAAK,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAAC,oBAAC,OAAO;QAAC,SAAS,EAAC,QAAQ;QAAC,OAAO,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAAM,EAC/FC,UAAU,CAACI,MAAM,GAAG,IAAI,CAACxD,aAAa,CAACoD,UAAU,CAAC,GAAG,IAAI,EACzD,CAACA,UAAU,CAACI,MAAM,IAAI,CAACL,QAAQ,gBAAG;QAAG,SAAS,EAAC,wBAAwB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEI,QAAQ,CAAK,GAAG,IAAI,CAC5F;IAEd;EAAC;EAAA;AAAA,EAvByB/E,KAAK,CAACiF,aAAa;AAyJjD,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAI9B,KAAgB;EAAA,OAAkB;IACvDI,WAAW,EAAExC,aAAa,CAACoC,KAAK,CAAC;IACjCvB,SAAS,EAAEd,sBAAsB,CAACqC,KAAK,CAAC;IACxCzB,cAAc,EAAEV,0BAA0B,CAACmC,KAAK,EAAE,EAAE,CAAC;IACrD3B,IAAI,EAAEP,mBAAmB,CAACkC,KAAK,CAAC;IAChCuB,QAAQ,EAAExD,0BAA0B,CAACiC,KAAK,CAAC;IAC3CxB,aAAa,EAAER,yBAAyB,CAACgC,KAAK,EAAE,EAAE,CAAC;IACnDtB,cAAc,EAAET,0BAA0B,CAAC+B,KAAK,CAAC;IACjDqB,iBAAiB,EAAE5D,uBAAuB,CAACuC,KAAK,CAAC;IACjDsB,cAAc,EAAE5D,oBAAoB,CAACsC,KAAK;EAC9C,CAAC;AAAA,CAAC;AAEF,IAAM+B,kBAAiE,GACnE,SADEA,kBAAiE,CACnEC,QAAQ;EAAA,OAAK;IACTxE,wBAAwB,EAAE,kCAAAyE,OAAO;MAAA,OAAID,QAAQ,CAACxE,yBAAwB,CAACyE,OAAO,CAAC,CAAC;IAAA;IAChF/D,sBAAsB,EAAE,gCAAA+D,OAAO;MAAA,OAAID,QAAQ,CAAC9D,uBAAsB,CAAC+D,OAAO,CAAC,CAAC;IAAA;EAChF,CAAC;AAAA,CAAC;AAEN,OAAO,IAAMC,aAAa,GAAGjF,OAAO,CAChCF,UAAU,EACVC,OAAO,CAAC8E,eAAe,EAAEC,kBAAkB,CAAC,CAC/C,CAAC5D,eAAe,CAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}