{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\Order\\\\index.tsx\";\nimport * as React from 'react';\nimport { Decimal, OrderForm } from '../';\nimport { TabPanel } from '../../components';\nimport { getAmount, getTotalPrice } from '../../helpers';\nvar defaultOrderTypes = ['Limit', 'Market'];\nvar splitBorder = 449;\nvar defaultWidth = 635;\nexport var Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n  var _super = _createSuper(Order);\n  function Order() {\n    var _this;\n    _classCallCheck(this, Order);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      index: 0,\n      amountSell: '',\n      amountBuy: ''\n    };\n    _this.getPanel = function (type) {\n      var _this$props = _this.props,\n        availableBase = _this$props.availableBase,\n        availableQuote = _this$props.availableQuote,\n        disabled = _this$props.disabled,\n        priceMarketBuy = _this$props.priceMarketBuy,\n        priceMarketSell = _this$props.priceMarketSell,\n        priceLimit = _this$props.priceLimit,\n        from = _this$props.from,\n        to = _this$props.to,\n        currentMarketAskPrecision = _this$props.currentMarketAskPrecision,\n        currentMarketBidPrecision = _this$props.currentMarketBidPrecision,\n        orderTypes = _this$props.orderTypes,\n        orderTypesIndex = _this$props.orderTypesIndex,\n        asks = _this$props.asks,\n        bids = _this$props.bids,\n        currentMarketFilters = _this$props.currentMarketFilters,\n        isMobileDevice = _this$props.isMobileDevice,\n        listenInputPrice = _this$props.listenInputPrice,\n        translate = _this$props.translate;\n      var _this$state = _this.state,\n        amountSell = _this$state.amountSell,\n        amountBuy = _this$state.amountBuy;\n      var proposals = _this.isTypeSell(type) ? bids : asks;\n      var available = _this.isTypeSell(type) ? availableBase : availableQuote;\n      var priceMarket = _this.isTypeSell(type) ? priceMarketSell : priceMarketBuy;\n      var disabledData = _this.isTypeSell(type) ? {} : {\n        disabled: disabled\n      };\n      var amount = _this.isTypeSell(type) ? amountSell : amountBuy;\n      var preLabel = _this.isTypeSell(type) ? translate('page.body.trade.header.newOrder.content.tabs.sell') : translate('page.body.trade.header.newOrder.content.tabs.buy');\n      var label = _this.isTypeSell(type) ? 'Sell' : 'Buy';\n      return {\n        content: /*#__PURE__*/React.createElement(OrderForm, Object.assign({\n          type: type,\n          from: from\n        }, disabledData, {\n          to: to,\n          available: available,\n          priceMarket: priceMarket,\n          priceLimit: priceLimit,\n          onSubmit: _this.props.onSubmit,\n          orderTypes: orderTypes || defaultOrderTypes,\n          orderTypesIndex: orderTypesIndex || defaultOrderTypes,\n          currentMarketAskPrecision: currentMarketAskPrecision,\n          currentMarketBidPrecision: currentMarketBidPrecision,\n          totalPrice: getTotalPrice(amount, priceMarket, proposals),\n          amount: amount,\n          listenInputPrice: listenInputPrice,\n          handleAmountChange: _this.handleAmountChange,\n          handleChangeAmountByButton: _this.handleChangeAmountByButton,\n          currentMarketFilters: currentMarketFilters,\n          isMobileDevice: isMobileDevice,\n          translate: translate,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 17\n          }\n        })),\n        label: preLabel || label\n      };\n    };\n    _this.getPanels = function () {\n      return [_this.getPanel('buy'), _this.getPanel('sell')];\n    };\n    _this.handleChangeTab = function (index, label) {\n      if (_this.props.handleSendType && label) {\n        _this.props.handleSendType(index, label);\n      }\n      _this.setState({\n        index: index\n      });\n    };\n    _this.handleAmountChange = function (amount, type) {\n      if (type === 'sell') {\n        _this.setState({\n          amountSell: amount\n        });\n      } else {\n        _this.setState({\n          amountBuy: amount\n        });\n      }\n    };\n    _this.handleChangeAmountByButton = function (value, orderType, price, type) {\n      var _this$props2 = _this.props,\n        bids = _this$props2.bids,\n        asks = _this$props2.asks,\n        availableBase = _this$props2.availableBase,\n        availableQuote = _this$props2.availableQuote;\n      var proposals = _this.isTypeSell(type) ? bids : asks;\n      var available = _this.isTypeSell(type) ? availableBase : availableQuote;\n      var newAmount = '';\n      switch (type) {\n        case 'buy':\n          switch (orderType) {\n            case 'Limit':\n              newAmount = available && +price ? Decimal.format(available / +price * value, _this.props.currentMarketAskPrecision) : '';\n              break;\n            case 'Market':\n              newAmount = available ? Decimal.format(getAmount(Number(available), proposals, value), _this.props.currentMarketAskPrecision) : '';\n              break;\n            default:\n              break;\n          }\n          break;\n        case 'sell':\n          newAmount = available ? Decimal.format(available * value, _this.props.currentMarketAskPrecision) : '';\n          break;\n        default:\n          break;\n      }\n      if (type === 'sell') {\n        _this.setState({\n          amountSell: newAmount\n        });\n      } else {\n        _this.setState({\n          amountBuy: newAmount\n        });\n      }\n    };\n    _this.isTypeSell = function (type) {\n      return type === 'sell';\n    };\n    return _this;\n  }\n  _createClass(Order, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var defaultTabIndex = this.props.defaultTabIndex;\n      if (defaultTabIndex !== undefined) {\n        this.handleChangeTab(defaultTabIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$width = this.props.width,\n        width = _this$props$width === void 0 ? defaultWidth : _this$props$width;\n      if (width < splitBorder) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"cr-order\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TabPanel, {\n          fixed: true,\n          panels: this.getPanels(),\n          onTabChange: this.handleChangeTab,\n          currentTabIndex: this.state.index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }));\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-order cr-order--extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-order--extended__buy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        fixed: true,\n        panels: [this.getPanel('buy')],\n        onTabChange: this.handleChangeTab,\n        currentTabIndex: this.state.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-order--extended__sell\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        fixed: true,\n        panels: [this.getPanel('sell')],\n        onTabChange: this.handleChangeTab,\n        currentTabIndex: this.state.index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return Order;\n}(React.Component);","map":{"version":3,"names":["React","Decimal","OrderForm","TabPanel","getAmount","getTotalPrice","defaultOrderTypes","splitBorder","defaultWidth","Order","state","index","amountSell","amountBuy","getPanel","type","props","availableBase","availableQuote","disabled","priceMarketBuy","priceMarketSell","priceLimit","from","to","currentMarketAskPrecision","currentMarketBidPrecision","orderTypes","orderTypesIndex","asks","bids","currentMarketFilters","isMobileDevice","listenInputPrice","translate","proposals","isTypeSell","available","priceMarket","disabledData","amount","preLabel","label","content","onSubmit","handleAmountChange","handleChangeAmountByButton","getPanels","handleChangeTab","handleSendType","setState","value","orderType","price","newAmount","format","Number","defaultTabIndex","undefined","width","Component"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/Order/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Decimal, OrderForm } from '../';\nimport { TabPanel } from '../../components';\nimport { FilterPrice } from '../../filters';\nimport { getAmount, getTotalPrice } from '../../helpers';\n\nexport type FormType = 'buy' | 'sell';\n\nexport type DropdownElem = number | string | React.ReactNode;\n\nexport interface OrderProps {\n    type: FormType;\n    orderType: string | React.ReactNode;\n    price: number | string;\n    amount: number | string;\n    available: number;\n}\n\nexport type OnSubmitCallback = (order: OrderProps) => void;\n\nexport interface OrderComponentProps {\n    /**\n     * Amount of money in base currency wallet\n     */\n    availableBase: number;\n    /**\n     * Amount of money in quote currency wallet\n     */\n    availableQuote: number;\n    /**\n     * Callback which is called when a form is submitted\n     */\n    onSubmit: OnSubmitCallback;\n    /**\n     * If orderType is 'Market' this value will be used as price for buy tab\n     */\n    priceMarketBuy: number;\n    /**\n     * If orderType is 'Market' this value will be used as price for sell tab\n     */\n    priceMarketSell: number;\n    /**\n     * If orderType is 'Limit' this value will be used as price\n     */\n    priceLimit?: number;\n    /**\n     * Name of currency for price field\n     */\n    from: string;\n    /**\n     * Name of currency for amount field\n     */\n    to: string;\n    /**\n     * Whether order is disabled to execute\n     */\n    disabled?: boolean;\n    handleSendType?: (index: number, label: string) => void;\n    /**\n     * Index of tab to switch on\n     */\n    /**\n     * Precision of amount, total, available, fee value\n     */\n    currentMarketAskPrecision: number;\n    /**\n     * Precision of price value\n     */\n    currentMarketBidPrecision: number;\n    orderTypes?: DropdownElem[];\n    orderTypesIndex?: DropdownElem[];\n    /**\n     *\n     */\n    width?: number;\n    /**\n     * proposals for buy\n     */\n    bids: string[][];\n    /**\n     * proposals for sell\n     */\n    asks: string[][];\n    /**\n     * start handling change price\n     */\n    listenInputPrice?: () => void;\n    /**\n     * default tab index\n     */\n    defaultTabIndex?: number;\n    isMobileDevice?: boolean;\n    currentMarketFilters: FilterPrice[];\n    translate: (id: string, value?: any) => string;\n}\n\ninterface State {\n    index: number;\n    amountSell: string;\n    amountBuy: string;\n}\n\nconst defaultOrderTypes: DropdownElem[] = [\n    'Limit',\n    'Market',\n];\n\nconst splitBorder = 449;\nconst defaultWidth = 635;\n\nexport class Order extends React.Component<OrderComponentProps, State> {\n    public state = {\n        index: 0,\n        amountSell: '',\n        amountBuy: '',\n    };\n\n    public componentDidMount() {\n        const { defaultTabIndex } = this.props;\n\n        if (defaultTabIndex !== undefined) {\n            this.handleChangeTab(defaultTabIndex);\n        }\n    }\n\n    public render() {\n        const {\n            width = defaultWidth,\n        } = this.props;\n\n        if (width < splitBorder) {\n            return (\n                <div className=\"cr-order\">\n                    <TabPanel\n                        fixed={true}\n                        panels={this.getPanels()}\n                        onTabChange={this.handleChangeTab}\n                        currentTabIndex={this.state.index}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"cr-order cr-order--extended\">\n                <div className=\"cr-order--extended__buy\">\n                    <TabPanel\n                        fixed={true}\n                        panels={[this.getPanel('buy')]}\n                        onTabChange={this.handleChangeTab}\n                        currentTabIndex={this.state.index}\n                    />\n                </div>\n                <div className=\"cr-order--extended__sell\">\n                    <TabPanel\n                        fixed={true}\n                        panels={[this.getPanel('sell')]}\n                        onTabChange={this.handleChangeTab}\n                        currentTabIndex={this.state.index}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    public getPanel = (type: FormType) => {\n        const {\n            availableBase,\n            availableQuote,\n            disabled,\n            priceMarketBuy,\n            priceMarketSell,\n            priceLimit,\n            from,\n            to,\n            currentMarketAskPrecision,\n            currentMarketBidPrecision,\n            orderTypes,\n            orderTypesIndex,\n            asks,\n            bids,\n            currentMarketFilters,\n            isMobileDevice,\n            listenInputPrice,\n            translate,\n        } = this.props;\n        const { amountSell, amountBuy } = this.state;\n\n        const proposals = this.isTypeSell(type) ? bids : asks;\n        const available = this.isTypeSell(type) ? availableBase : availableQuote;\n        const priceMarket = this.isTypeSell(type) ? priceMarketSell : priceMarketBuy;\n        const disabledData = this.isTypeSell(type) ? {} : { disabled };\n        const amount = this.isTypeSell(type) ? amountSell : amountBuy;\n        const preLabel = this.isTypeSell(type) ? (\n            translate('page.body.trade.header.newOrder.content.tabs.sell')\n        ) : (\n            translate('page.body.trade.header.newOrder.content.tabs.buy')\n        );\n        const label = this.isTypeSell(type) ? 'Sell' : 'Buy';\n\n        return {\n            content: (\n                <OrderForm\n                    type={type}\n                    from={from}\n                    {...disabledData}\n                    to={to}\n                    available={available}\n                    priceMarket={priceMarket}\n                    priceLimit={priceLimit}\n                    onSubmit={this.props.onSubmit}\n                    orderTypes={orderTypes || defaultOrderTypes}\n                    orderTypesIndex={orderTypesIndex || defaultOrderTypes}\n                    currentMarketAskPrecision={currentMarketAskPrecision}\n                    currentMarketBidPrecision={currentMarketBidPrecision}\n                    totalPrice={getTotalPrice(amount, priceMarket, proposals)}\n                    amount={amount}\n                    listenInputPrice={listenInputPrice}\n                    handleAmountChange={this.handleAmountChange}\n                    handleChangeAmountByButton={this.handleChangeAmountByButton}\n                    currentMarketFilters={currentMarketFilters}\n                    isMobileDevice={isMobileDevice}\n                    translate={translate}\n                />\n            ),\n            label: preLabel || label,\n        };\n    };\n\n    private getPanels = () => {\n        return [this.getPanel('buy'), this.getPanel('sell')];\n    };\n\n    private handleChangeTab = (index: number, label?: string) => {\n        if (this.props.handleSendType && label) {\n          this.props.handleSendType(index, label);\n        }\n\n        this.setState({\n            index: index,\n        });\n    };\n\n    private handleAmountChange = (amount, type) => {\n        if (type === 'sell') {\n            this.setState({ amountSell: amount });\n        } else {\n            this.setState({ amountBuy: amount });\n        }\n    };\n\n    private handleChangeAmountByButton = (value, orderType, price, type) => {\n        const { bids, asks, availableBase, availableQuote } = this.props;\n        const proposals = this.isTypeSell(type) ? bids : asks;\n        const available = this.isTypeSell(type) ? availableBase : availableQuote;\n        let newAmount = '';\n\n        switch (type) {\n            case 'buy':\n                switch (orderType) {\n                    case 'Limit':\n                        newAmount = available && +price ? (\n                            Decimal.format(available / +price * value, this.props.currentMarketAskPrecision)\n                        ) : '';\n\n                        break;\n                    case 'Market':\n                        newAmount = available ? (\n                            Decimal.format(getAmount(Number(available), proposals, value), this.props.currentMarketAskPrecision)\n                        ) : '';\n\n                        break;\n                    default:\n                        break;\n                }\n                break;\n            case 'sell':\n                newAmount = available ? (\n                    Decimal.format(available * value, this.props.currentMarketAskPrecision)\n                ) : '';\n\n                break;\n            default:\n                break;\n        }\n\n        if (type === 'sell') {\n            this.setState({ amountSell: newAmount });\n        } else {\n            this.setState({ amountBuy: newAmount });\n        }\n    };\n\n    private isTypeSell = (type: string) => type === 'sell';\n}\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,EAAEC,SAAS,QAAQ,KAAK;AACxC,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,SAASC,SAAS,EAAEC,aAAa,QAAQ,eAAe;AAkGxD,IAAMC,iBAAiC,GAAG,CACtC,OAAO,EACP,QAAQ,CACX;AAED,IAAMC,WAAW,GAAG,GAAG;AACvB,IAAMC,YAAY,GAAG,GAAG;AAExB,WAAaC,KAAK;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACPC,KAAK,GAAG;MACXC,KAAK,EAAE,CAAC;MACRC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;IACf,CAAC;IAAA,MAkDMC,QAAQ,GAAG,UAACC,IAAc,EAAK;MAClC,kBAmBI,MAAKC,KAAK;QAlBVC,aAAa,eAAbA,aAAa;QACbC,cAAc,eAAdA,cAAc;QACdC,QAAQ,eAARA,QAAQ;QACRC,cAAc,eAAdA,cAAc;QACdC,eAAe,eAAfA,eAAe;QACfC,UAAU,eAAVA,UAAU;QACVC,IAAI,eAAJA,IAAI;QACJC,EAAE,eAAFA,EAAE;QACFC,yBAAyB,eAAzBA,yBAAyB;QACzBC,yBAAyB,eAAzBA,yBAAyB;QACzBC,UAAU,eAAVA,UAAU;QACVC,eAAe,eAAfA,eAAe;QACfC,IAAI,eAAJA,IAAI;QACJC,IAAI,eAAJA,IAAI;QACJC,oBAAoB,eAApBA,oBAAoB;QACpBC,cAAc,eAAdA,cAAc;QACdC,gBAAgB,eAAhBA,gBAAgB;QAChBC,SAAS,eAATA,SAAS;MAEb,kBAAkC,MAAKxB,KAAK;QAApCE,UAAU,eAAVA,UAAU;QAAEC,SAAS,eAATA,SAAS;MAE7B,IAAMsB,SAAS,GAAG,MAAKC,UAAU,CAACrB,IAAI,CAAC,GAAGe,IAAI,GAAGD,IAAI;MACrD,IAAMQ,SAAS,GAAG,MAAKD,UAAU,CAACrB,IAAI,CAAC,GAAGE,aAAa,GAAGC,cAAc;MACxE,IAAMoB,WAAW,GAAG,MAAKF,UAAU,CAACrB,IAAI,CAAC,GAAGM,eAAe,GAAGD,cAAc;MAC5E,IAAMmB,YAAY,GAAG,MAAKH,UAAU,CAACrB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG;QAAEI,QAAQ,EAARA;MAAS,CAAC;MAC9D,IAAMqB,MAAM,GAAG,MAAKJ,UAAU,CAACrB,IAAI,CAAC,GAAGH,UAAU,GAAGC,SAAS;MAC7D,IAAM4B,QAAQ,GAAG,MAAKL,UAAU,CAACrB,IAAI,CAAC,GAClCmB,SAAS,CAAC,mDAAmD,CAAC,GAE9DA,SAAS,CAAC,kDAAkD,CAC/D;MACD,IAAMQ,KAAK,GAAG,MAAKN,UAAU,CAACrB,IAAI,CAAC,GAAG,MAAM,GAAG,KAAK;MAEpD,OAAO;QACH4B,OAAO,eACH,oBAAC,SAAS;UACN,IAAI,EAAE5B,IAAK;UACX,IAAI,EAAEQ;QAAK,GACPgB,YAAY;UAChB,EAAE,EAAEf,EAAG;UACP,SAAS,EAAEa,SAAU;UACrB,WAAW,EAAEC,WAAY;UACzB,UAAU,EAAEhB,UAAW;UACvB,QAAQ,EAAE,MAAKN,KAAK,CAAC4B,QAAS;UAC9B,UAAU,EAAEjB,UAAU,IAAIrB,iBAAkB;UAC5C,eAAe,EAAEsB,eAAe,IAAItB,iBAAkB;UACtD,yBAAyB,EAAEmB,yBAA0B;UACrD,yBAAyB,EAAEC,yBAA0B;UACrD,UAAU,EAAErB,aAAa,CAACmC,MAAM,EAAEF,WAAW,EAAEH,SAAS,CAAE;UAC1D,MAAM,EAAEK,MAAO;UACf,gBAAgB,EAAEP,gBAAiB;UACnC,kBAAkB,EAAE,MAAKY,kBAAmB;UAC5C,0BAA0B,EAAE,MAAKC,0BAA2B;UAC5D,oBAAoB,EAAEf,oBAAqB;UAC3C,cAAc,EAAEC,cAAe;UAC/B,SAAS,EAAEE,SAAU;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAE5B;QACDQ,KAAK,EAAED,QAAQ,IAAIC;MACvB,CAAC;IACL,CAAC;IAAA,MAEOK,SAAS,GAAG,YAAM;MACtB,OAAO,CAAC,MAAKjC,QAAQ,CAAC,KAAK,CAAC,EAAE,MAAKA,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAAA,MAEOkC,eAAe,GAAG,UAACrC,KAAa,EAAE+B,KAAc,EAAK;MACzD,IAAI,MAAK1B,KAAK,CAACiC,cAAc,IAAIP,KAAK,EAAE;QACtC,MAAK1B,KAAK,CAACiC,cAAc,CAACtC,KAAK,EAAE+B,KAAK,CAAC;MACzC;MAEA,MAAKQ,QAAQ,CAAC;QACVvC,KAAK,EAAEA;MACX,CAAC,CAAC;IACN,CAAC;IAAA,MAEOkC,kBAAkB,GAAG,UAACL,MAAM,EAAEzB,IAAI,EAAK;MAC3C,IAAIA,IAAI,KAAK,MAAM,EAAE;QACjB,MAAKmC,QAAQ,CAAC;UAAEtC,UAAU,EAAE4B;QAAO,CAAC,CAAC;MACzC,CAAC,MAAM;QACH,MAAKU,QAAQ,CAAC;UAAErC,SAAS,EAAE2B;QAAO,CAAC,CAAC;MACxC;IACJ,CAAC;IAAA,MAEOM,0BAA0B,GAAG,UAACK,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEtC,IAAI,EAAK;MACpE,mBAAsD,MAAKC,KAAK;QAAxDc,IAAI,gBAAJA,IAAI;QAAED,IAAI,gBAAJA,IAAI;QAAEZ,aAAa,gBAAbA,aAAa;QAAEC,cAAc,gBAAdA,cAAc;MACjD,IAAMiB,SAAS,GAAG,MAAKC,UAAU,CAACrB,IAAI,CAAC,GAAGe,IAAI,GAAGD,IAAI;MACrD,IAAMQ,SAAS,GAAG,MAAKD,UAAU,CAACrB,IAAI,CAAC,GAAGE,aAAa,GAAGC,cAAc;MACxE,IAAIoC,SAAS,GAAG,EAAE;MAElB,QAAQvC,IAAI;QACR,KAAK,KAAK;UACN,QAAQqC,SAAS;YACb,KAAK,OAAO;cACRE,SAAS,GAAGjB,SAAS,IAAI,CAACgB,KAAK,GAC3BpD,OAAO,CAACsD,MAAM,CAAClB,SAAS,GAAG,CAACgB,KAAK,GAAGF,KAAK,EAAE,MAAKnC,KAAK,CAACS,yBAAyB,CAAC,GAChF,EAAE;cAEN;YACJ,KAAK,QAAQ;cACT6B,SAAS,GAAGjB,SAAS,GACjBpC,OAAO,CAACsD,MAAM,CAACnD,SAAS,CAACoD,MAAM,CAACnB,SAAS,CAAC,EAAEF,SAAS,EAAEgB,KAAK,CAAC,EAAE,MAAKnC,KAAK,CAACS,yBAAyB,CAAC,GACpG,EAAE;cAEN;YACJ;cACI;UAAM;UAEd;QACJ,KAAK,MAAM;UACP6B,SAAS,GAAGjB,SAAS,GACjBpC,OAAO,CAACsD,MAAM,CAAClB,SAAS,GAAGc,KAAK,EAAE,MAAKnC,KAAK,CAACS,yBAAyB,CAAC,GACvE,EAAE;UAEN;QACJ;UACI;MAAM;MAGd,IAAIV,IAAI,KAAK,MAAM,EAAE;QACjB,MAAKmC,QAAQ,CAAC;UAAEtC,UAAU,EAAE0C;QAAU,CAAC,CAAC;MAC5C,CAAC,MAAM;QACH,MAAKJ,QAAQ,CAAC;UAAErC,SAAS,EAAEyC;QAAU,CAAC,CAAC;MAC3C;IACJ,CAAC;IAAA,MAEOlB,UAAU,GAAG,UAACrB,IAAY;MAAA,OAAKA,IAAI,KAAK,MAAM;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAhLtD,6BAA2B;MACvB,IAAQ0C,eAAe,GAAK,IAAI,CAACzC,KAAK,CAA9ByC,eAAe;MAEvB,IAAIA,eAAe,KAAKC,SAAS,EAAE;QAC/B,IAAI,CAACV,eAAe,CAACS,eAAe,CAAC;MACzC;IACJ;EAAC;IAAA;IAAA,OAED,kBAAgB;MACZ,wBAEI,IAAI,CAACzC,KAAK,CADV2C,KAAK;QAALA,KAAK,kCAAGnD,YAAY;MAGxB,IAAImD,KAAK,GAAGpD,WAAW,EAAE;QACrB,oBACI;UAAK,SAAS,EAAC,UAAU;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACrB,oBAAC,QAAQ;UACL,KAAK,EAAE,IAAK;UACZ,MAAM,EAAE,IAAI,CAACwC,SAAS,EAAG;UACzB,WAAW,EAAE,IAAI,CAACC,eAAgB;UAClC,eAAe,EAAE,IAAI,CAACtC,KAAK,CAACC,KAAM;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACpC,CACA;MAEd;MAEA,oBACI;QAAK,SAAS,EAAC,6BAA6B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACxC;QAAK,SAAS,EAAC,yBAAyB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACpC,oBAAC,QAAQ;QACL,KAAK,EAAE,IAAK;QACZ,MAAM,EAAE,CAAC,IAAI,CAACG,QAAQ,CAAC,KAAK,CAAC,CAAE;QAC/B,WAAW,EAAE,IAAI,CAACkC,eAAgB;QAClC,eAAe,EAAE,IAAI,CAACtC,KAAK,CAACC,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACpC,CACA,eACN;QAAK,SAAS,EAAC,0BAA0B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrC,oBAAC,QAAQ;QACL,KAAK,EAAE,IAAK;QACZ,MAAM,EAAE,CAAC,IAAI,CAACG,QAAQ,CAAC,MAAM,CAAC,CAAE;QAChC,WAAW,EAAE,IAAI,CAACkC,eAAgB;QAClC,eAAe,EAAE,IAAI,CAACtC,KAAK,CAACC,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACpC,CACA,CACJ;IAEd;EAAC;EAAA;AAAA,EArDsBX,KAAK,CAAC4D,SAAS"},"metadata":{},"sourceType":"module"}