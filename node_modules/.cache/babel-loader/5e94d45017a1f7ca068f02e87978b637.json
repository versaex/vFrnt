{"ast":null,"code":"import { CONFIGS_DATA, CONFIGS_ERROR, CONFIGS_FETCH } from './constants';\nexport var configsFetch = function configsFetch() {\n  return {\n    type: CONFIGS_FETCH\n  };\n};\nexport var configsData = function configsData(payload) {\n  return {\n    type: CONFIGS_DATA,\n    payload: payload\n  };\n};\nexport var configsError = function configsError(error) {\n  return {\n    type: CONFIGS_ERROR,\n    error: error\n  };\n};","map":{"version":3,"names":["CONFIGS_DATA","CONFIGS_ERROR","CONFIGS_FETCH","configsFetch","type","configsData","payload","configsError","error"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/public/configs/actions.ts"],"sourcesContent":["import { CommonError } from '../../types';\nimport {\n    CONFIGS_DATA,\n    CONFIGS_ERROR,\n    CONFIGS_FETCH,\n} from './constants';\nimport { Configs } from './types';\n\nexport interface ConfigsFetch {\n    type: typeof CONFIGS_FETCH;\n}\n\nexport interface ConfigsData {\n    type: typeof CONFIGS_DATA;\n    payload: Configs;\n}\n\nexport interface ConfigsError {\n    type: typeof CONFIGS_ERROR;\n    error: CommonError;\n}\n\nexport type ConfigsAction =\n    ConfigsFetch\n    | ConfigsData\n    | ConfigsError;\n\nexport const configsFetch = (): ConfigsFetch => ({\n    type: CONFIGS_FETCH,\n});\n\nexport const configsData = (payload: ConfigsData['payload']): ConfigsData => ({\n    type: CONFIGS_DATA,\n    payload,\n});\n\nexport const configsError = (error: CommonError): ConfigsError => ({\n    type: CONFIGS_ERROR,\n    error,\n});\n"],"mappings":"AACA,SACIA,YAAY,EACZC,aAAa,EACbC,aAAa,QACV,aAAa;AAsBpB,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY;EAAA,OAAwB;IAC7CC,IAAI,EAAEF;EACV,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAW,CAAIC,OAA+B;EAAA,OAAmB;IAC1EF,IAAI,EAAEJ,YAAY;IAClBM,OAAO,EAAPA;EACJ,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAkB;EAAA,OAAoB;IAC/DJ,IAAI,EAAEH,aAAa;IACnBO,KAAK,EAALA;EACJ,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module"}