{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\mobile\\\\components\\\\WalletDepositBody\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Blur } from '../../../components/Blur';\nimport { CurrencyInfo } from '../../../components/CurrencyInfo';\nimport { DepositCrypto } from '../../../components/DepositCrypto';\nimport { DepositFiat } from '../../../components/DepositFiat';\nimport { selectCurrencies } from '../../../modules/public/currencies';\nimport { selectUserInfo } from '../../../modules/user/profile';\nvar WalletDepositBodyComponent = function WalletDepositBodyComponent(props) {\n  var intl = useIntl();\n  var currencies = useSelector(selectCurrencies);\n  var user = useSelector(selectUserInfo);\n  var label = React.useMemo(function () {\n    return intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.ccy.message.address'\n    });\n  }, [intl]);\n  var handleOnCopy = function handleOnCopy() {\n    return {};\n  };\n  var renderDeposit = function renderDeposit() {\n    var wallet = props.wallet;\n    var isAccountActivated = wallet.type === 'fiat' || wallet.balance;\n    var currencyItem = currencies && currencies.find(function (item) {\n      return item.id === wallet.currency;\n    }) || {\n      min_confirmations: 6,\n      deposit_enabled: false\n    };\n    var text = intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.ccy.message.submit'\n    }, {\n      confirmations: currencyItem.min_confirmations\n    });\n    var error = intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.ccy.message.pending'\n    });\n    var title = intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.fiat.message1'\n    });\n    var description = intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.fiat.message2'\n    });\n    var blurCryptoClassName = classnames('pg-blur-deposit-crypto', {\n      'pg-blur-deposit-crypto--active': isAccountActivated\n    });\n    var buttonLabel = \"\".concat(intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.ccy.button.generate'\n    }), \" \").concat(wallet.currency.toUpperCase(), \" \").concat(intl.formatMessage({\n      id: 'page.body.wallets.tabs.deposit.ccy.button.address'\n    }));\n    if (wallet.type === 'coin') {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CurrencyInfo, {\n        wallet: wallet,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }), currencyItem && !currencyItem.deposit_enabled ? /*#__PURE__*/React.createElement(Blur, {\n        className: blurCryptoClassName,\n        text: intl.formatMessage({\n          id: 'page.body.wallets.tabs.deposit.disabled.message'\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }) : null, /*#__PURE__*/React.createElement(DepositCrypto, {\n        buttonLabel: buttonLabel,\n        copiableTextFieldText: \"\".concat(wallet.currency.toUpperCase(), \" \").concat(label),\n        copyButtonText: intl.formatMessage({\n          id: 'page.body.wallets.tabs.deposit.ccy.message.button'\n        }),\n        error: error,\n        handleGenerateAddress: props.handleGenerateAddress,\n        handleOnCopy: handleOnCopy,\n        text: text,\n        wallet: wallet,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CurrencyInfo, {\n        wallet: wallet,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }), currencyItem && !currencyItem.deposit_enabled ? /*#__PURE__*/React.createElement(Blur, {\n        className: \"pg-blur-deposit-fiat\",\n        text: intl.formatMessage({\n          id: 'page.body.wallets.tabs.deposit.disabled.message'\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }) : null, /*#__PURE__*/React.createElement(DepositFiat, {\n        title: title,\n        description: description,\n        uid: user ? user.uid : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-mobile-wallet-deposit-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, renderDeposit());\n};\nvar WalletDepositBody = React.memo(WalletDepositBodyComponent);\nexport { WalletDepositBody };","map":{"version":3,"names":["classnames","React","useIntl","useSelector","Blur","CurrencyInfo","DepositCrypto","DepositFiat","selectCurrencies","selectUserInfo","WalletDepositBodyComponent","props","intl","currencies","user","label","useMemo","formatMessage","id","handleOnCopy","renderDeposit","wallet","isAccountActivated","type","balance","currencyItem","find","item","currency","min_confirmations","deposit_enabled","text","confirmations","error","title","description","blurCryptoClassName","buttonLabel","toUpperCase","handleGenerateAddress","uid","WalletDepositBody","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/mobile/components/WalletDepositBody/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Blur } from '../../../components/Blur';\nimport { CurrencyInfo } from '../../../components/CurrencyInfo';\nimport { DepositCrypto } from '../../../components/DepositCrypto';\nimport { DepositFiat } from '../../../components/DepositFiat';\nimport { selectCurrencies } from '../../../modules/public/currencies';\nimport { selectUserInfo } from '../../../modules/user/profile';\n\nconst WalletDepositBodyComponent = props => {\n    const intl = useIntl();\n    const currencies = useSelector(selectCurrencies);\n    const user = useSelector(selectUserInfo);\n    const label = React.useMemo(() => intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.address' }), [intl]);\n    const handleOnCopy = () => ({});\n    const renderDeposit = () => {\n        const { wallet } = props;\n        const isAccountActivated = wallet.type === 'fiat' || wallet.balance;\n        const currencyItem = (currencies && currencies.find(item => item.id === wallet.currency)) || { min_confirmations: 6, deposit_enabled: false };\n        const text = intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.submit' },\n            { confirmations: currencyItem.min_confirmations });\n        const error = intl.formatMessage({id: 'page.body.wallets.tabs.deposit.ccy.message.pending'});\n\n        const title = intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.fiat.message1' });\n        const description = intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.fiat.message2' });\n        const blurCryptoClassName = classnames('pg-blur-deposit-crypto', {\n            'pg-blur-deposit-crypto--active': isAccountActivated,\n        });\n\n        const buttonLabel = `${intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.button.generate' })} ${wallet.currency.toUpperCase()} ${intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.button.address' })}`;\n\n        if (wallet.type === 'coin') {\n            return (\n                <React.Fragment>\n                    <CurrencyInfo wallet={wallet}/>\n                    {currencyItem && !currencyItem.deposit_enabled ? (\n                        <Blur\n                            className={blurCryptoClassName}\n                            text={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.disabled.message' })}\n                        />\n                    ) : null}\n                    <DepositCrypto\n                        buttonLabel={buttonLabel}\n                        copiableTextFieldText={`${wallet.currency.toUpperCase()} ${label}`}\n                        copyButtonText={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.button'} )}\n                        error={error}\n                        handleGenerateAddress={props.handleGenerateAddress}\n                        handleOnCopy={handleOnCopy}\n                        text={text}\n                        wallet={wallet}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <CurrencyInfo wallet={wallet}/>\n                    {currencyItem && !currencyItem.deposit_enabled ? (\n                        <Blur\n                            className=\"pg-blur-deposit-fiat\"\n                            text={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.disabled.message' })}\n                        />\n                    ) : null}\n                    <DepositFiat title={title} description={description} uid={user ? user.uid : ''}/>\n                </React.Fragment>\n            );\n        }\n    };\n\n    return (\n        <div className=\"cr-mobile-wallet-deposit-body\">\n            {renderDeposit()}\n        </div>\n    );\n};\n\nconst WalletDepositBody = React.memo(WalletDepositBodyComponent);\n\nexport {\n    WalletDepositBody,\n};\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,IAAI,QAAQ,0BAA0B;AAC/C,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,aAAa,QAAQ,mCAAmC;AACjE,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,cAAc,QAAQ,+BAA+B;AAE9D,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0B,CAAGC,KAAK,EAAI;EACxC,IAAMC,IAAI,GAAGV,OAAO,EAAE;EACtB,IAAMW,UAAU,GAAGV,WAAW,CAACK,gBAAgB,CAAC;EAChD,IAAMM,IAAI,GAAGX,WAAW,CAACM,cAAc,CAAC;EACxC,IAAMM,KAAK,GAAGd,KAAK,CAACe,OAAO,CAAC;IAAA,OAAMJ,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAqD,CAAC,CAAC;EAAA,GAAE,CAACN,IAAI,CAAC,CAAC;EAC3H,IAAMO,YAAY,GAAG,SAAfA,YAAY;IAAA,OAAU,CAAC,CAAC;EAAA,CAAC;EAC/B,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;IACxB,IAAQC,MAAM,GAAKV,KAAK,CAAhBU,MAAM;IACd,IAAMC,kBAAkB,GAAGD,MAAM,CAACE,IAAI,KAAK,MAAM,IAAIF,MAAM,CAACG,OAAO;IACnE,IAAMC,YAAY,GAAIZ,UAAU,IAAIA,UAAU,CAACa,IAAI,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACT,EAAE,KAAKG,MAAM,CAACO,QAAQ;IAAA,EAAC,IAAK;MAAEC,iBAAiB,EAAE,CAAC;MAAEC,eAAe,EAAE;IAAM,CAAC;IAC7I,IAAMC,IAAI,GAAGnB,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAoD,CAAC,EACvF;MAAEc,aAAa,EAAEP,YAAY,CAACI;IAAkB,CAAC,CAAC;IACtD,IAAMI,KAAK,GAAGrB,IAAI,CAACK,aAAa,CAAC;MAACC,EAAE,EAAE;IAAoD,CAAC,CAAC;IAE5F,IAAMgB,KAAK,GAAGtB,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAA+C,CAAC,CAAC;IACxF,IAAMiB,WAAW,GAAGvB,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAA+C,CAAC,CAAC;IAC9F,IAAMkB,mBAAmB,GAAGpC,UAAU,CAAC,wBAAwB,EAAE;MAC7D,gCAAgC,EAAEsB;IACtC,CAAC,CAAC;IAEF,IAAMe,WAAW,aAAMzB,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAqD,CAAC,CAAC,cAAIG,MAAM,CAACO,QAAQ,CAACU,WAAW,EAAE,cAAI1B,IAAI,CAACK,aAAa,CAAC;MAAEC,EAAE,EAAE;IAAoD,CAAC,CAAC,CAAE;IAE7N,IAAIG,MAAM,CAACE,IAAI,KAAK,MAAM,EAAE;MACxB,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACX,oBAAC,YAAY;QAAC,MAAM,EAAEF,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,EAC9BI,YAAY,IAAI,CAACA,YAAY,CAACK,eAAe,gBAC1C,oBAAC,IAAI;QACD,SAAS,EAAEM,mBAAoB;QAC/B,IAAI,EAAExB,IAAI,CAACK,aAAa,CAAC;UAAEC,EAAE,EAAE;QAAkD,CAAC,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACtF,GACF,IAAI,eACR,oBAAC,aAAa;QACV,WAAW,EAAEmB,WAAY;QACzB,qBAAqB,YAAKhB,MAAM,CAACO,QAAQ,CAACU,WAAW,EAAE,cAAIvB,KAAK,CAAG;QACnE,cAAc,EAAEH,IAAI,CAACK,aAAa,CAAC;UAAEC,EAAE,EAAE;QAAmD,CAAC,CAAG;QAChG,KAAK,EAAEe,KAAM;QACb,qBAAqB,EAAEtB,KAAK,CAAC4B,qBAAsB;QACnD,YAAY,EAAEpB,YAAa;QAC3B,IAAI,EAAEY,IAAK;QACX,MAAM,EAAEV,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACjB,CACW;IAEzB,CAAC,MAAM;MACH,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACX,oBAAC,YAAY;QAAC,MAAM,EAAEA,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,EAC9BI,YAAY,IAAI,CAACA,YAAY,CAACK,eAAe,gBAC1C,oBAAC,IAAI;QACD,SAAS,EAAC,sBAAsB;QAChC,IAAI,EAAElB,IAAI,CAACK,aAAa,CAAC;UAAEC,EAAE,EAAE;QAAkD,CAAC,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACtF,GACF,IAAI,eACR,oBAAC,WAAW;QAAC,KAAK,EAAEgB,KAAM;QAAC,WAAW,EAAEC,WAAY;QAAC,GAAG,EAAErB,IAAI,GAAGA,IAAI,CAAC0B,GAAG,GAAG,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,CACpE;IAEzB;EACJ,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,+BAA+B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzCpB,aAAa,EAAE,CACd;AAEd,CAAC;AAED,IAAMqB,iBAAiB,GAAGxC,KAAK,CAACyC,IAAI,CAAChC,0BAA0B,CAAC;AAEhE,SACI+B,iBAAiB"},"metadata":{},"sourceType":"module"}