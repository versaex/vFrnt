{"ast":null,"code":"import { PartitionDateTimePattern } from './PartitionDateTimePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetime\n * @param dtf DateTimeFormat\n * @param x\n */\nexport function FormatDateTime(dtf, x, implDetails) {\n  var parts = PartitionDateTimePattern(dtf, x, implDetails);\n  var result = '';\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result += part.value;\n  }\n  return result;\n}","map":{"version":3,"names":["PartitionDateTimePattern","FormatDateTime","dtf","x","implDetails","parts","result","_i","parts_1","length","part","value"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTime.js"],"sourcesContent":["import { PartitionDateTimePattern } from './PartitionDateTimePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatdatetime\n * @param dtf DateTimeFormat\n * @param x\n */\nexport function FormatDateTime(dtf, x, implDetails) {\n    var parts = PartitionDateTimePattern(dtf, x, implDetails);\n    var result = '';\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result += part.value;\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,GAAG,EAAEC,CAAC,EAAEC,WAAW,EAAE;EAChD,IAAIC,KAAK,GAAGL,wBAAwB,CAACE,GAAG,EAAEC,CAAC,EAAEC,WAAW,CAAC;EACzD,IAAIE,MAAM,GAAG,EAAE;EACf,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAGH,KAAK,EAAEE,EAAE,GAAGC,OAAO,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IACzD,IAAIG,IAAI,GAAGF,OAAO,CAACD,EAAE,CAAC;IACtBD,MAAM,IAAII,IAAI,CAACC,KAAK;EACxB;EACA,OAAOL,MAAM;AACjB"},"metadata":{},"sourceType":"module"}