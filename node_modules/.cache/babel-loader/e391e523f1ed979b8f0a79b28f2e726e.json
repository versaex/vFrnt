{"ast":null,"code":"import { EMAIL_VERIFICATION_DATA, EMAIL_VERIFICATION_ERROR, EMAIL_VERIFICATION_FETCH } from './constants';\nexport var emailVerificationFetch = function emailVerificationFetch(payload) {\n  return {\n    type: EMAIL_VERIFICATION_FETCH,\n    payload: payload\n  };\n};\nexport var emailVerificationData = function emailVerificationData() {\n  return {\n    type: EMAIL_VERIFICATION_DATA\n  };\n};\nexport var emailVerificationError = function emailVerificationError(error) {\n  return {\n    type: EMAIL_VERIFICATION_ERROR,\n    error: error\n  };\n};","map":{"version":3,"names":["EMAIL_VERIFICATION_DATA","EMAIL_VERIFICATION_ERROR","EMAIL_VERIFICATION_FETCH","emailVerificationFetch","payload","type","emailVerificationData","emailVerificationError","error"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/emailVerification/actions.ts"],"sourcesContent":["import { CommonError } from '../../types';\nimport { GeetestCaptchaResponse } from '../auth';\nimport { EMAIL_VERIFICATION_DATA, EMAIL_VERIFICATION_ERROR, EMAIL_VERIFICATION_FETCH } from './constants';\n\nexport interface EmailVerificationData {\n    type: typeof EMAIL_VERIFICATION_DATA;\n}\n\nexport interface EmailVerificationError {\n    type: typeof EMAIL_VERIFICATION_ERROR;\n    error: CommonError;\n}\n\nexport interface EmailVerificationFetch {\n    type: typeof EMAIL_VERIFICATION_FETCH;\n    payload: {\n      email: string;\n      captcha_response?: string | GeetestCaptchaResponse;\n    };\n}\n\nexport type EmailVerificationAction =\n    EmailVerificationData\n    | EmailVerificationError\n    | EmailVerificationFetch;\n\nexport const emailVerificationFetch = (payload: EmailVerificationFetch['payload']): EmailVerificationFetch => ({\n    type: EMAIL_VERIFICATION_FETCH,\n    payload,\n});\n\nexport const emailVerificationData = (): EmailVerificationData => ({\n    type: EMAIL_VERIFICATION_DATA,\n});\n\nexport const emailVerificationError = (error: CommonError): EmailVerificationError => ({\n    type: EMAIL_VERIFICATION_ERROR,\n    error,\n});\n"],"mappings":"AAEA,SAASA,uBAAuB,EAAEC,wBAAwB,EAAEC,wBAAwB,QAAQ,aAAa;AAwBzG,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,OAA0C;EAAA,OAA8B;IAC3GC,IAAI,EAAEH,wBAAwB;IAC9BE,OAAO,EAAPA;EACJ,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAqB;EAAA,OAAiC;IAC/DD,IAAI,EAAEL;EACV,CAAC;AAAA,CAAC;AAEF,OAAO,IAAMO,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIC,KAAkB;EAAA,OAA8B;IACnFH,IAAI,EAAEJ,wBAAwB;IAC9BO,KAAK,EAALA;EACJ,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module"}