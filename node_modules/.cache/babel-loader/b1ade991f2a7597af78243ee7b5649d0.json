{"ast":null,"code":"/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\nmodule.exports = {\n  ValidationError: ValidationError,\n  validate: validate\n};","map":{"version":3,"names":["ValidationError","message","error","Error","name","stack","prototype","Object","create","validate","condition","module","exports"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/cashaddrjs/src/validation.js"],"sourcesContent":["/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n'use strict';\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nfunction ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nfunction validate(condition, message) {\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n\nmodule.exports = {\n  ValidationError: ValidationError,\n  validate: validate,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAe,CAACC,OAAO,EAAE;EAChC,IAAIC,KAAK,GAAG,IAAIC,KAAK,EAAE;EACvB,IAAI,CAACC,IAAI,GAAGF,KAAK,CAACE,IAAI,GAAG,iBAAiB;EAC1C,IAAI,CAACH,OAAO,GAAGC,KAAK,CAACD,OAAO,GAAGA,OAAO;EACtC,IAAI,CAACI,KAAK,GAAGH,KAAK,CAACG,KAAK;AAC1B;AAEAL,eAAe,CAACM,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACL,KAAK,CAACG,SAAS,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQ,CAACC,SAAS,EAAET,OAAO,EAAE;EACpC,IAAI,CAACS,SAAS,EAAE;IACd,MAAM,IAAIV,eAAe,CAACC,OAAO,CAAC;EACpC;AACF;AAEAU,MAAM,CAACC,OAAO,GAAG;EACfZ,eAAe,EAAEA,eAAe;EAChCS,QAAQ,EAAEA;AACZ,CAAC"},"metadata":{},"sourceType":"script"}