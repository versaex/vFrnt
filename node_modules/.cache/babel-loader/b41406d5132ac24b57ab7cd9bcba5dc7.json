{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\Dropdown\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { ChevronIcon } from '../../assets/images/ChevronIcon';\n/**\n *  Cryptobase Dropdown that overrides default dropdown with list of options.\n */\nvar DropdownComponent = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(DropdownComponent, _React$PureComponent);\n  var _super = _createSuper(DropdownComponent);\n  function DropdownComponent(props) {\n    var _this;\n    _classCallCheck(this, DropdownComponent);\n    _this = _super.call(this, props);\n    _this.renderElem = function (elem, index) {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: index,\n        onSelect: function onSelect(eventKey, e) {\n          return _this.handleSelect(elem, index);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, elem);\n    };\n    _this.handleSelect = function (elem, index) {\n      _this.props.onSelect && _this.props.onSelect(index);\n      _this.setState({\n        selected: _this.convertToString(elem),\n        selectedIndex: index.toString()\n      });\n    };\n    _this.convertToString = function (elem) {\n      if (elem !== undefined && elem !== null) {\n        return elem.toString();\n      }\n      return '';\n    };\n    var selectedValue = _this.props.placeholder || _this.convertToString(_this.props.list[0]);\n    _this.state = {\n      selected: selectedValue,\n      selectedIndex: '0'\n    };\n    return _this;\n  }\n  _createClass(DropdownComponent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var placeholder = this.props.placeholder;\n      if (placeholder && placeholder !== prevProps.placeholder) {\n        this.setState({\n          selected: placeholder,\n          selectedIndex: '0'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var list = this.props.list;\n      var selected = this.state.selected;\n      var cx = classnames('cr-dropdown', this.props.className, {\n        'cr-dropdown--default': selected === this.props.placeholder\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n        variant: \"primary\",\n        id: \"dropdown-basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, selected, /*#__PURE__*/React.createElement(ChevronIcon, {\n        className: \"cr-dropdown__arrow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, list.map(function (elem, index) {\n        return _this2.renderElem(elem, index);\n      }))));\n    }\n  }]);\n  return DropdownComponent;\n}(React.PureComponent);\nexport { DropdownComponent };","map":{"version":3,"names":["classnames","React","Dropdown","ChevronIcon","DropdownComponent","props","renderElem","elem","index","eventKey","e","handleSelect","onSelect","setState","selected","convertToString","selectedIndex","toString","undefined","selectedValue","placeholder","list","state","prevProps","cx","className","map","PureComponent"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/Dropdown/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport { ChevronIcon } from '../../assets/images/ChevronIcon';\n\ntype DropdownElem = number | string | React.ReactNode;\n\nexport interface DropdownComponentProps {\n    /**\n     * List of options\n     */\n    list: DropdownElem[];\n    /**\n     * Selection callback function\n     * @default empty\n     */\n    onSelect?: (index: number) => void;\n    /**\n     *  By default class name 'cr-dropwdown'\n     *  This property gives an additional class name\n     *  @default empty\n     */\n    className?: string;\n    /**\n     * Value for placeholder of Dropdown components\n     * @default empty\n     */\n    placeholder?: string;\n    /**\n     * Value for disabling contentEditable property\n     * @default false\n     */\n    disableContentEditable?: boolean;\n}\n\ninterface DropdownComponentState {\n    selected: string;\n    selectedIndex: string;\n}\n\n/**\n *  Cryptobase Dropdown that overrides default dropdown with list of options.\n */\nclass DropdownComponent extends React.PureComponent<DropdownComponentProps & {}, DropdownComponentState> {\n    constructor(props: DropdownComponentProps) {\n        super(props);\n        const selectedValue = this.props.placeholder || this.convertToString(this.props.list[0]);\n        this.state = {\n            selected: selectedValue,\n            selectedIndex: '0',\n        };\n    }\n\n    public componentDidUpdate(prevProps: DropdownComponentProps) {\n        const { placeholder } = this.props;\n\n        if (placeholder && placeholder !== prevProps.placeholder) {\n            this.setState({\n                selected: placeholder,\n                selectedIndex: '0',\n            });\n        }\n    }\n\n    public render() {\n        const { list } = this.props;\n        const { selected } = this.state;\n        const cx = classnames('cr-dropdown', this.props.className, {\n            'cr-dropdown--default': selected === this.props.placeholder,\n        });\n\n        return (\n            <div className={cx}>\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                        {selected}\n                        <ChevronIcon className=\"cr-dropdown__arrow\" />\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {list.map((elem, index) => this.renderElem(elem, index))}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        );\n    }\n\n    private renderElem = (elem: DropdownElem, index: number) => {\n        return  (\n            <Dropdown.Item\n                key={index}\n                onSelect={ (eventKey: any, e?: React.SyntheticEvent<unknown>) => this.handleSelect(elem, index)}\n            >\n                {elem}\n            </Dropdown.Item>\n        );\n    };\n\n    private handleSelect = (elem: DropdownElem, index: number) => {\n        this.props.onSelect && this.props.onSelect(index);\n        this.setState({\n            selected: this.convertToString(elem),\n            selectedIndex: index.toString(),\n        });\n    };\n\n    private convertToString = (elem: DropdownElem) => {\n        if (elem !== undefined && elem !== null) {\n            return elem.toString();\n        }\n\n        return '';\n    };\n}\n\nexport {\n    DropdownComponent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}