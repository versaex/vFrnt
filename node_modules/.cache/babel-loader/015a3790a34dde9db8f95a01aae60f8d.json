{"ast":null,"code":"var componentToHex = function componentToHex(c) {\n  var hex = (+c).toString(16);\n  return hex.length === 1 ? \"0\".concat(hex) : hex;\n};\nexport var convertRgbToHex = function convertRgbToHex(rgb) {\n  var colorCodes = rgb.replace(' ', '').split(',');\n  if (colorCodes.length > 2) {\n    return \"#\".concat(componentToHex(colorCodes[0])).concat(componentToHex(colorCodes[1])).concat(componentToHex(colorCodes[2]));\n  }\n  return '';\n};","map":{"version":3,"names":["componentToHex","c","hex","toString","length","convertRgbToHex","rgb","colorCodes","replace","split"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/convertRgbToHex.ts"],"sourcesContent":["const componentToHex = (c: string) => {\n  const hex = (+c).toString(16);\n\n  return hex.length === 1 ? `0${hex}` : hex;\n};\n\nexport const convertRgbToHex = (rgb: string): string => {\n    const colorCodes = rgb.replace(' ', '').split(',');\n\n    if (colorCodes.length > 2) {\n        return `#${componentToHex(colorCodes[0])}${componentToHex(colorCodes[1])}${componentToHex(colorCodes[2])}`;\n    }\n\n    return '';\n};\n\n"],"mappings":"AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAIC,CAAS,EAAK;EACpC,IAAMC,GAAG,GAAG,CAAC,CAACD,CAAC,EAAEE,QAAQ,CAAC,EAAE,CAAC;EAE7B,OAAOD,GAAG,CAACE,MAAM,KAAK,CAAC,cAAOF,GAAG,IAAKA,GAAG;AAC3C,CAAC;AAED,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAe,CAAIC,GAAW,EAAa;EACpD,IAAMC,UAAU,GAAGD,GAAG,CAACE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAElD,IAAIF,UAAU,CAACH,MAAM,GAAG,CAAC,EAAE;IACvB,kBAAWJ,cAAc,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC,SAAGP,cAAc,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC,SAAGP,cAAc,CAACO,UAAU,CAAC,CAAC,CAAC,CAAC;EAC5G;EAEA,OAAO,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module"}