{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\Table\\\\index.tsx\";\nimport classNames from 'classnames';\nimport * as React from 'react';\n/**\n * Cryptobase Table overrides default table\n */\nvar Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n  var _super = _createSuper(Table);\n  function Table(props) {\n    var _this;\n    _classCallCheck(this, Table);\n    _this = _super.call(this, props);\n    _this.handleSelect = function (key) {\n      return function () {\n        var onSelect = _this.props.onSelect;\n        if (onSelect) {\n          _this.setState({\n            selectedRowKey: key\n          }, function () {\n            if (onSelect) {\n              onSelect(key);\n            }\n          });\n        }\n      };\n    };\n    _this.state = {\n      activeFilter: undefined,\n      resultData: undefined,\n      selectedRowKey: props.selectedKey\n    };\n    return _this;\n  }\n  _createClass(Table, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var filters = this.props.filters;\n      if (filters && filters.length > 0) {\n        this.handleFilter(filters[0]);\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (this.state.selectedRowKey !== next.selectedKey) {\n        this.setState({\n          selectedRowKey: next.selectedKey\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      if (prevProps.data !== this.props.data && this.props.filters) {\n        var activeFilter = this.props.filters.find(function (filter) {\n          return filter.name === _this2.state.activeFilter;\n        });\n        if (activeFilter) {\n          this.handleFilter(activeFilter);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        data = _this$props.data,\n        header = _this$props.header,\n        titleComponent = _this$props.titleComponent,\n        _this$props$filters = _this$props.filters,\n        filters = _this$props$filters === void 0 ? [] : _this$props$filters,\n        rowKeyIndex = _this$props.rowKeyIndex;\n      this.ensureDataIsValid(data);\n      var cn = classNames('cr-table-header__content', {\n        'cr-table-header__content-empty': !titleComponent && filters.length === 0\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: cn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, titleComponent ? this.renderTitleComponent() : null, filters.length ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table__filters\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, this.renderFilters()) : null), /*#__PURE__*/React.createElement(\"table\", {\n        className: 'cr-table',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, header && header.length && this.renderHead(header), this.renderBody(data, rowKeyIndex)), this.renderBackground(data));\n    }\n  }, {\n    key: \"renderTitleComponent\",\n    value: function renderTitleComponent() {\n      var titleComponent = this.props.titleComponent;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'cr-title-component',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }\n      }, titleComponent);\n    }\n  }, {\n    key: \"renderRowCells\",\n    value: function renderRowCells(row) {\n      var _this3 = this;\n      return row && row.length ? row.map(function (c, index) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: index,\n          colSpan: row.length === 1 ? _this3.props.colSpan : undefined,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }\n        }, c);\n      }) : [];\n    }\n  }, {\n    key: \"handleFilter\",\n    value: function handleFilter(item) {\n      var data = this.props.data;\n      if (!item.filter) {\n        this.setState({\n          resultData: data\n        });\n        return;\n      }\n      var resultData = _toConsumableArray(data).filter(item.filter);\n      this.setState({\n        activeFilter: item.name,\n        resultData: resultData\n      });\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters() {\n      var _this4 = this;\n      var _this$props$filters2 = this.props.filters,\n        filters = _this$props$filters2 === void 0 ? [] : _this$props$filters2;\n      var activeFilter = this.state.activeFilter;\n      var cn = function cn(filterName) {\n        return classNames('cr-table__filter', {\n          'cr-table__filter--active': activeFilter === filterName\n        });\n      };\n      return filters.map(function (item) {\n        var handleFilterClick = function handleFilterClick() {\n          _this4.handleFilter(item);\n        };\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: cn(item.name),\n          key: item.name,\n          onClick: handleFilterClick,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }\n        }, item.name);\n      });\n    }\n  }, {\n    key: \"renderHead\",\n    value: function renderHead(row) {\n      var _this5 = this;\n      var cells = row.map(function (c, index) {\n        return c ? /*#__PURE__*/React.createElement(\"th\", {\n          key: index,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 50\n          }\n        }, c) : /*#__PURE__*/React.createElement(\"th\", {\n          key: index,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 77\n          }\n        }, \"\\xA0\");\n      });\n      return /*#__PURE__*/React.createElement(\"thead\", {\n        className: 'cr-table__head',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: 'cr-table__head-row',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, cells));\n    }\n  }, {\n    key: \"renderRowBackground\",\n    value: function renderRowBackground(i) {\n      var _this$props2 = this.props,\n        rowBackground = _this$props2.rowBackground,\n        _this$props2$rowBackg = _this$props2.rowBackgroundColor,\n        rowBackgroundColor = _this$props2$rowBackg === void 0 ? 'rgba(184, 233, 245, 0.7)' : _this$props2$rowBackg;\n      var rowBackgroundResult = rowBackground ? rowBackground(i) : {};\n      var style = _objectSpread(_objectSpread({}, rowBackgroundResult), {}, {\n        backgroundColor: rowBackgroundColor\n      });\n      return rowBackground ? /*#__PURE__*/React.createElement(\"span\", {\n        key: i,\n        style: style,\n        className: \"cr-table-background__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }) : null;\n    }\n  }, {\n    key: \"renderBackground\",\n    value: function renderBackground(rows) {\n      var _this6 = this;\n      var resultData = this.state.resultData;\n      var _this$props3 = this.props,\n        rowBackground = _this$props3.rowBackground,\n        side = _this$props3.side;\n      var dataToBeMapped = resultData || rows;\n      var renderBackgroundRow = function renderBackgroundRow(r, i) {\n        return _this6.renderRowBackground(i);\n      };\n      var className = classNames('cr-table-background', {\n        'cr-table-background--left': side === 'left',\n        'cr-table-background--right': side === 'right'\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, rowBackground && dataToBeMapped.map(renderBackgroundRow));\n    }\n  }, {\n    key: \"renderBody\",\n    value: function renderBody(rows, rowKeyIndex) {\n      var _this7 = this;\n      var _this$state = this.state,\n        resultData = _this$state.resultData,\n        selectedRowKey = _this$state.selectedRowKey;\n      var rowClassName = function rowClassName(key) {\n        return classNames({\n          'cr-table__row--selected': selectedRowKey === key\n        });\n      };\n      var dataToBeMapped = resultData || rows;\n      var rowElements = dataToBeMapped.map(function (r, i) {\n        var rowKey = String(rowKeyIndex !== undefined ? r[rowKeyIndex] : i);\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: rowClassName(rowKey),\n          key: rowKey,\n          onClick: _this7.handleSelect(rowKey),\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }\n        }, _this7.renderRowCells(r));\n      });\n      return /*#__PURE__*/React.createElement(\"tbody\", {\n        className: 'cr-table__body',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }\n      }, rowElements);\n    }\n  }, {\n    key: \"ensureDataIsValid\",\n    value: function ensureDataIsValid(data) {\n      var length = data[0].length;\n      var len = data.length;\n      for (var i = 0; i < len; i += 1) {\n        if (data[i].length !== length) {\n          throw Error('Array elements must have the same length');\n        }\n      }\n    }\n  }]);\n  return Table;\n}(React.Component);\nexport { Table };","map":{"version":3,"names":["classNames","React","Table","props","handleSelect","key","onSelect","setState","selectedRowKey","state","activeFilter","undefined","resultData","selectedKey","filters","length","handleFilter","next","prevProps","data","find","filter","name","header","titleComponent","rowKeyIndex","ensureDataIsValid","cn","renderTitleComponent","renderFilters","renderHead","renderBody","renderBackground","row","map","c","index","colSpan","item","filterName","handleFilterClick","cells","i","rowBackground","rowBackgroundColor","rowBackgroundResult","style","backgroundColor","rows","side","dataToBeMapped","renderBackgroundRow","r","renderRowBackground","className","rowClassName","rowElements","rowKey","String","renderRowCells","len","Error","Component"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/Table/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\n\nexport type CellData = string | number | React.ReactNode | undefined;\n\nexport interface Filter {\n    name: string;\n    filter: (cell: CellData[]) => boolean;\n}\n\nexport interface TableState {\n    /**\n     * Selected filter\n     */\n    activeFilter?: string;\n    /**\n     * Filtered data\n     */\n    resultData?: CellData[][];\n    /**\n     * Key of selected row\n     */\n    selectedRowKey?: string;\n}\n\ninterface TableProps {\n    /**\n     * Data which is used to render Table. The first element\n     * of array is used to render table head unless `noHead`\n     * is true. the rest is used to render Table body.\n     *\n     * All the elements of an array should have the same length.\n     */\n    data: CellData[][];\n    /**\n     * Renders table head.\n     */\n    header?: React.ReactNode[];\n    /**\n     *  Pair name & filter is used to filter table data depending on a filter\n     */\n    filters?: Filter[];\n    /**\n     * Row's unique key, could be a number - element's index in data\n     */\n    rowKeyIndex?: number;\n    /**\n     * Key of selected row, could be a string\n     */\n    selectedKey?: string;\n    /**\n     * Callback called when a row is selected\n     */\n    onSelect?: (key: string) => void;\n    /**\n     * Header which is displayed above the table\n     */\n    titleComponent?: React.ReactNode;\n    /**\n     * Defines whether row background shows or not, and calculates width of it\n     */\n    rowBackground?: (row: number) => React.CSSProperties;\n    /**\n     * Defines from what side row background starts `(left, right)`\n     * @default 'left'\n     */\n    side?: 'left' | 'right';\n    /**\n     * Sets row background color\n     */\n    rowBackgroundColor?: string;\n    /**\n     * Sets colspan count for empty table\n     */\n    colSpan?: number;\n}\n\n/**\n * Cryptobase Table overrides default table\n */\nclass Table extends React.Component<TableProps, TableState> {\n    constructor(props: TableProps) {\n        super(props);\n\n        this.state = {\n            activeFilter: undefined,\n            resultData: undefined,\n            selectedRowKey: props.selectedKey,\n        };\n    }\n\n    public componentDidMount() {\n        const { filters } = this.props;\n        if (filters && filters.length > 0) {\n            this.handleFilter(filters[0]);\n        }\n    }\n\n    public componentWillReceiveProps(next: TableProps) {\n        if (this.state.selectedRowKey !== next.selectedKey) {\n            this.setState({selectedRowKey: next.selectedKey});\n        }\n    }\n\n    public componentDidUpdate(prevProps: TableProps) {\n        if (prevProps.data !== this.props.data && this.props.filters) {\n            const activeFilter = this.props.filters.find(\n                filter => filter.name === this.state.activeFilter,\n            );\n\n            if (activeFilter) {\n                this.handleFilter(activeFilter);\n            }\n        }\n    }\n\n    public render() {\n        const { data, header, titleComponent, filters = [], rowKeyIndex } = this.props;\n\n        this.ensureDataIsValid(data);\n\n        const cn = classNames('cr-table-header__content', {\n            'cr-table-header__content-empty': !titleComponent && filters.length === 0,\n        });\n\n        return (\n            <div className=\"cr-table-container\">\n                <div className={cn}>\n                    {titleComponent ? this.renderTitleComponent() : null}\n                    {filters.length\n                        ?\n                        <div className=\"cr-table__filters\">{this.renderFilters()}</div>\n                        : null}\n                </div>\n                <table className={'cr-table'}>\n                    {header && header.length && this.renderHead(header)}\n                    {this.renderBody(data, rowKeyIndex)}\n                </table>\n                {this.renderBackground(data)}\n            </div>\n        );\n    }\n\n    private renderTitleComponent() {\n        const { titleComponent } = this.props;\n\n        return <div className={'cr-title-component'}>{titleComponent}</div>;\n    }\n\n    private renderRowCells(row: CellData[]) {\n\n        return row && row.length ?\n            row.map((c, index: number) =>\n                <td key={index} colSpan={row.length === 1 ? this.props.colSpan : undefined}>{c}</td>) : [];\n    }\n\n    private handleFilter(item: Filter) {\n        const { data } = this.props;\n\n        if (!item.filter) {\n            this.setState({\n                resultData: data,\n            });\n\n            return;\n        }\n        const resultData: CellData[][] = [...data].filter(item.filter);\n        this.setState({\n            activeFilter: item.name,\n            resultData: resultData,\n        });\n    }\n\n    private handleSelect = (key: string) => () => {\n        const { onSelect } = this.props;\n\n        if (onSelect) {\n            this.setState({\n                selectedRowKey: key,\n            }, () => {\n                if (onSelect) {\n                    onSelect(key);\n                }\n            });\n        }\n    };\n\n    private renderFilters() {\n        const { filters = [] } = this.props;\n        const { activeFilter } = this.state;\n\n        const cn = (filterName: string) => classNames('cr-table__filter', {\n            'cr-table__filter--active': activeFilter === filterName,\n        });\n\n        return filters.map((item: Filter) => {\n            const handleFilterClick = () => {\n                this.handleFilter(item);\n            };\n\n            return (\n                <div\n                    className={cn(item.name)}\n                    key={item.name}\n                    onClick={handleFilterClick}\n                >\n                    {item.name}\n                </div>\n            );\n        });\n    }\n\n    private renderHead(row: CellData[]) {\n        const cells = row.map((c, index) => c ?  <th key={index}>{c}</th> : <th key={index}>&nbsp;</th>);\n\n        return (\n            <thead className={'cr-table__head'}>\n                <tr className={'cr-table__head-row'}>{cells}</tr>\n            </thead>\n        );\n    }\n\n    private renderRowBackground(i: number) {\n        const { rowBackground, rowBackgroundColor = 'rgba(184, 233, 245, 0.7)' } = this.props;\n        const rowBackgroundResult = rowBackground ? rowBackground(i) : {};\n        const style = {\n            ...rowBackgroundResult,\n            backgroundColor: rowBackgroundColor,\n        };\n\n        return (rowBackground\n            ? <span key={i} style={style} className=\"cr-table-background__row\" />\n            : null);\n    }\n\n    private renderBackground(rows: CellData[][]) {\n        const { resultData } = this.state;\n        const { rowBackground, side } = this.props;\n        const dataToBeMapped = resultData || rows;\n        const renderBackgroundRow = (r: CellData[], i: number) => this.renderRowBackground(i);\n\n        const className = classNames('cr-table-background', {\n            'cr-table-background--left': side === 'left',\n            'cr-table-background--right': side === 'right',\n        });\n\n        return (\n            <div className={className}>\n                {rowBackground && dataToBeMapped.map(renderBackgroundRow)}\n            </div>\n        );\n    }\n\n    private renderBody(rows: CellData[][], rowKeyIndex: number | undefined) {\n        const { resultData, selectedRowKey } = this.state;\n\n        const rowClassName = (key: string) => classNames({\n            'cr-table__row--selected': selectedRowKey === key,\n        });\n\n        const dataToBeMapped = resultData || rows;\n        const rowElements = dataToBeMapped.map((r, i) => {\n            const rowKey = String((rowKeyIndex !== undefined) ? r[rowKeyIndex] : i);\n\n            return (\n                <tr\n                    className={rowClassName(rowKey)}\n                    key={rowKey}\n                    onClick={this.handleSelect(rowKey)}\n                >\n                    {this.renderRowCells(r)}\n                </tr>\n            );\n        });\n\n        return (\n            <tbody className={'cr-table__body'}>\n            {rowElements}\n            </tbody>\n        );\n    }\n\n    private ensureDataIsValid(data: CellData[][]) {\n        const length = data[0].length;\n        const len = data.length;\n        for (let i = 0; i < len; i += 1) {\n            if (data[i].length !== length) {\n                throw Error('Array elements must have the same length');\n            }\n        }\n    }\n}\n\nexport {\n    Table,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}