{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\MarketDepths\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Area, AreaChart, CartesianGrid, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { colors } from '../../constants';\nimport { convertRgbToHex, getStylesValueByKey } from '../../helpers';\nvar getColorSettings = function getColorSettings(colorTheme) {\n  if (colorTheme === 'light') {\n    return {\n      strokeAreaAskColor: colors.light.depth.strokeAreaAsk,\n      strokeAreaBidColor: colors.light.depth.strokeAreaBid,\n      strokeAxisColor: colors.light.depth.strokeAxis,\n      strokeGridColor: colors.light.depth.strokeGrid,\n      fillAreaAskColor: colors.light.depth.fillAreaAsk,\n      fillAreaBidColor: colors.light.depth.fillAreaBid,\n      gridBackgroundStartColor: colors.light.depth.gridBackgroundStart,\n      gridBackgroundEndColor: colors.light.depth.gridBackgroundEnd\n    };\n  }\n  return {\n    strokeAreaAskColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAreaAsk)),\n    strokeAreaBidColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAreaBid)),\n    strokeAxisColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAxis)),\n    strokeGridColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeGrid)),\n    fillAreaAskColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.fillAreaAsk)),\n    fillAreaBidColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.fillAreaBid)),\n    gridBackgroundStartColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.gridBackgroundStart)),\n    gridBackgroundEndColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.gridBackgroundEnd))\n  };\n};\nvar CustomTooltip = function CustomTooltip(props) {\n  var defaultToolTipColors = {\n    backgroundColor: 'rgba(255, 255, 255, 0.4)',\n    color: 'black',\n    border: '1px solid #ccc'\n  };\n  var active = props.active,\n    payload = props.payload,\n    external = props.external,\n    _props$toolTipColors = props.toolTipColors,\n    toolTipColors = _props$toolTipColors === void 0 ? defaultToolTipColors : _props$toolTipColors;\n  var backgroundColor = toolTipColors.backgroundColor,\n    color = toolTipColors.color,\n    border = toolTipColors.border;\n  var renderPayload = function renderPayload() {\n    if (!payload || !payload[0]) {\n      return '';\n    }\n    var _payload$ = payload[0],\n      name = _payload$.name,\n      value = _payload$.value;\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 16\n      }\n    }, \"\".concat(name, \" : \"), /*#__PURE__*/React.createElement(\"em\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, value));\n  };\n  if (active) {\n    var style = {\n      padding: 6,\n      backgroundColor: backgroundColor,\n      border: border,\n      color: color,\n      fontSize: 13,\n      boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)'\n    };\n    var payloadData = payload && payload[0] ? payload[0].payload : null;\n    var currData = payloadData ? external.find(function (entry) {\n      return entry.name === payloadData.name;\n    }) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"area-chart-tooltip\",\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, !currData ? renderPayload() : null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, currData ? currData.name : null));\n  }\n  return null;\n};\n\n/**\n * Component to display MarketDepths component.\n * It gives a visualization of demand or supply of a particular stock or commodity or a cryptocurrency.\n */\nexport var MarketDepths = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MarketDepths, _React$PureComponent);\n  var _super = _createSuper(MarketDepths);\n  function MarketDepths() {\n    var _this2;\n    _classCallCheck(this, MarketDepths);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this2 = _super.call.apply(_super, [this].concat(args));\n    _this2.defaultSettings = {\n      dataKeyX: 'ask',\n      dataKeyY: 'bid',\n      tooltip: true,\n      height: '100%',\n      activeDot: {\n        stroke: 'rgba(31,42,52,1)',\n        strokeWidth: 1,\n        r: 4,\n        fill: 'rgba(91,165,132,1)'\n      }\n    };\n    _this2.defineGradient = function (colorSettings, value) {\n      if (value) {\n        return /*#__PURE__*/React.createElement(\"defs\", {\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n          id: \"bidChartColor\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"stop\", {\n          stopColor: colorSettings.fillAreaBidColor,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n          id: \"askChartColor\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"stop\", {\n          stopColor: colorSettings.fillAreaAskColor,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 25\n          }\n        })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n          id: \"fillGrid\",\n          x1: \"0\",\n          y1: \"0\",\n          x2: \"0\",\n          y2: \"1\",\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"stop\", {\n          offset: \"5%\",\n          stopColor: colorSettings.gridBackgroundStartColor,\n          stopOpacity: 0,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"stop\", {\n          offset: \"95%\",\n          stopColor: colorSettings.gridBackgroundEndColor,\n          stopOpacity: 1,\n          __self: _assertThisInitialized(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        })));\n      }\n      return /*#__PURE__*/React.createElement(\"defs\", {\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n        id: \"bidChartColor\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: colorSettings.fillAreaBidColor,\n        stopOpacity: 1,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: colorSettings.fillAreaBidColor,\n        stopOpacity: 0,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n        id: \"askChartColor\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: colorSettings.fillAreaAskColor,\n        stopOpacity: 1,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: colorSettings.fillAreaAskColor,\n        stopOpacity: 0,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n        id: \"fillGrid\",\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"0\",\n        y2: \"1\",\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"5%\",\n        stopColor: colorSettings.gridBackgroundStartColor,\n        stopOpacity: 0,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"95%\",\n        stopColor: colorSettings.gridBackgroundEndColor,\n        stopOpacity: 1,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }\n      })));\n    };\n    return _this2;\n  }\n  _createClass(MarketDepths, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        chartType = _this$props.chartType,\n        colorTheme = _this$props.colorTheme,\n        className = _this$props.className,\n        data = _this$props.data,\n        hideCartesianGrid = _this$props.hideCartesianGrid,\n        intervalX = _this$props.intervalX,\n        intervalY = _this$props.intervalY,\n        toolTipColors = _this$props.toolTipColors,\n        _this$props$settings = _this$props.settings,\n        settings = _this$props$settings === void 0 ? this.defaultSettings : _this$props$settings,\n        orientation = _this$props.orientation,\n        gradientHide = _this$props.gradientHide;\n      var cx = classnames('cr-market-depths', className);\n      var colorSettings = getColorSettings(colorTheme);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        height: settings.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AreaChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 0,\n          bottom: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      }, this.defineGradient(colorSettings, gradientHide), hideCartesianGrid ? null : /*#__PURE__*/React.createElement(CartesianGrid, {\n        stroke: colorSettings.strokeGridColor,\n        strokeDasharray: \"1 1\",\n        fill: \"url(#fillGrid)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 54\n        }\n      }), /*#__PURE__*/React.createElement(XAxis, {\n        dataKey: settings.dataKeyX || 'ask',\n        interval: intervalX || 'preserveStartEnd',\n        stroke: colorSettings.strokeAxisColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(YAxis, {\n        orientation: orientation ? orientation : 'left',\n        dataKey: settings.dataKeyY || 'bid',\n        interval: intervalY || 'preserveStartEnd',\n        stroke: colorSettings.strokeAxisColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }), settings.tooltip ? /*#__PURE__*/React.createElement(Tooltip, {\n        content: /*#__PURE__*/React.createElement(CustomTooltip, {\n          toolTipColors: toolTipColors,\n          external: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 42\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 29\n        }\n      }) : null, /*#__PURE__*/React.createElement(Area, {\n        type: chartType ? chartType : 'step',\n        dataKey: \"bid\",\n        stroke: colorSettings.strokeAreaBidColor,\n        fill: \"url(#bidChartColor)\",\n        activeDot: settings.activeDot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Area, {\n        type: chartType ? chartType : 'step',\n        dataKey: \"ask\",\n        stroke: colorSettings.strokeAreaAskColor,\n        fill: \"url(#askChartColor)\",\n        activeDot: settings.activeDot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n  return MarketDepths;\n}(React.PureComponent);","map":{"version":3,"names":["classnames","React","Area","AreaChart","CartesianGrid","ResponsiveContainer","Tooltip","XAxis","YAxis","colors","convertRgbToHex","getStylesValueByKey","getColorSettings","colorTheme","strokeAreaAskColor","light","depth","strokeAreaAsk","strokeAreaBidColor","strokeAreaBid","strokeAxisColor","strokeAxis","strokeGridColor","strokeGrid","fillAreaAskColor","fillAreaAsk","fillAreaBidColor","fillAreaBid","gridBackgroundStartColor","gridBackgroundStart","gridBackgroundEndColor","gridBackgroundEnd","dark","CustomTooltip","props","defaultToolTipColors","backgroundColor","color","border","active","payload","external","toolTipColors","renderPayload","name","value","style","padding","fontSize","boxShadow","payloadData","currData","find","entry","MarketDepths","defaultSettings","dataKeyX","dataKeyY","tooltip","height","activeDot","stroke","strokeWidth","r","fill","defineGradient","colorSettings","chartType","className","data","hideCartesianGrid","intervalX","intervalY","settings","orientation","gradientHide","cx","top","right","left","bottom","PureComponent"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/MarketDepths/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\n\nimport {\n    Area,\n    AreaChart,\n    CartesianGrid,\n    ResponsiveContainer,\n    Tooltip,\n    TooltipPayload,\n    XAxis,\n    YAxis,\n} from 'recharts';\nimport { colors } from '../../constants';\nimport { convertRgbToHex, getStylesValueByKey } from '../../helpers';\n\nexport interface KeyValuePairMarketDepths {\n    x: string | number;\n    amt?: number;\n    ask?: number;\n    bid?: number;\n    name?: string | number;\n}\n\nexport interface TooltipColors {\n    backgroundColor: string;\n    color: string;\n    border: string;\n}\n\ntype TooltipPayloadProp = TooltipPayload & { payload?: TooltipPayload };\n\ninterface CustomToolTipProps {\n    toolTipColors?: TooltipColors;\n    active?: boolean;\n    external: KeyValuePairMarketDepths[];\n    payload?: TooltipPayloadProp[];\n}\n\ninterface CustomActiveDotProps {\n    stroke: string;\n    strokeWidth: number;\n    r: number;\n    fill: string;\n}\n\nexport interface MarketDepthsProps {\n    /**\n     * Additional class name for styling. By default element receives `cr-market-depths`\n     * class\n     * @default empty\n     */\n    className?: string;\n    /**\n     * MarketDepths details data for building the plot\n     */\n    data: KeyValuePairMarketDepths[];\n    /**\n     * Defines colors of tooltip\n     */\n    toolTipColors?: TooltipColors;\n    /**\n     * Settings to be applied to a chart\n     */\n    settings?: MarketDepthsSettings;\n    /**\n     * If true, grid will be hidden\n     * @default false\n     */\n    hideCartesianGrid?: boolean;\n    /**\n     * Defines interval of values that should be displayed on x-axis\n     */\n    intervalX?: number | 'preserveStartEnd' | 'preserveStart' | 'preserveEnd' | undefined;\n    /**\n     * Defines interval of values that should be displayed on y-axis\n     */\n    intervalY?: number | 'preserveStartEnd' | 'preserveStart' | 'preserveEnd' | undefined;\n    /**\n     * Orientation for y-axis\n     * @default 'left'\n     */\n    orientation?: 'left' | 'right';\n    /**\n     * Chart type\n     * @default 'step'\n     */\n    chartType?: 'basis' | 'basisClosed' | 'basisOpen' | 'linear' | 'linearClosed' | 'natural' | 'monotoneX' | 'monotoneY' | 'monotone' | 'step' | 'stepBefore' | 'stepAfter';\n    /**\n     * Property for gradient of background of ask or bid\n     * @default false\n     */\n    gradientHide?: boolean;\n    /**\n     * Current color theme mode\n     *  @default 'dark'\n     */\n    colorTheme?: string;\n}\n\nexport interface MarketDepthsSettings {\n    /**\n     * Defines what value should be displayed on x-axis\n     */\n    dataKeyX?: string;\n    /**\n     * Defines what value should be displayed on y-axis\n     */\n    dataKeyY?: string;\n    /**\n     * Defines whether tooltip is shown or nor\n     * @default true\n     */\n    tooltip?: boolean;\n    /**\n     * Defines height of chart\n     * @default 100%\n     */\n    height?: string;\n    /**\n     * Defines properties for active dot\n     */\n    activeDot?: CustomActiveDotProps;\n}\n\nconst getColorSettings = (colorTheme?: string) => {\n    if (colorTheme === 'light') {\n        return {\n            strokeAreaAskColor: colors.light.depth.strokeAreaAsk,\n            strokeAreaBidColor: colors.light.depth.strokeAreaBid,\n            strokeAxisColor: colors.light.depth.strokeAxis,\n            strokeGridColor: colors.light.depth.strokeGrid,\n            fillAreaAskColor: colors.light.depth.fillAreaAsk,\n            fillAreaBidColor: colors.light.depth.fillAreaBid,\n            gridBackgroundStartColor: colors.light.depth.gridBackgroundStart,\n            gridBackgroundEndColor: colors.light.depth.gridBackgroundEnd,\n        };\n    }\n\n    return {\n        strokeAreaAskColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAreaAsk)),\n        strokeAreaBidColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAreaBid)),\n        strokeAxisColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeAxis)),\n        strokeGridColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.strokeGrid)),\n        fillAreaAskColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.fillAreaAsk)),\n        fillAreaBidColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.fillAreaBid)),\n        gridBackgroundStartColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.gridBackgroundStart)),\n        gridBackgroundEndColor: convertRgbToHex(getStylesValueByKey(colors.dark.depth.gridBackgroundEnd)),\n    };\n};\n\nconst CustomTooltip = (props: CustomToolTipProps) => {\n    const defaultToolTipColors = {\n        backgroundColor: 'rgba(255, 255, 255, 0.4)',\n        color: 'black',\n        border: '1px solid #ccc',\n    };\n    const { active, payload, external, toolTipColors = defaultToolTipColors} = props;\n    const { backgroundColor, color, border } = toolTipColors;\n    const renderPayload = () => {\n        if (!payload || !payload[0]) {\n            return '';\n        }\n\n        const { name, value } = payload[0];\n\n        return <p>{`${name} : `}<em>{value}</em></p>;\n    };\n\n    if (active) {\n        const style = {\n            padding: 6,\n            backgroundColor,\n            border,\n            color,\n            fontSize: 13,\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n        };\n        const payloadData = payload && payload[0] ? payload[0].payload : null;\n        const currData = payloadData ?\n            external.find((entry: KeyValuePairMarketDepths) => (entry.name === payloadData.name)) :\n            null;\n\n        return (\n            <div className=\"area-chart-tooltip\" style={style}>\n                {!currData ? renderPayload() : null}\n                <p>{currData ? currData.name : null}</p>\n            </div>\n        );\n    }\n\n    return null;\n};\n\n/**\n * Component to display MarketDepths component.\n * It gives a visualization of demand or supply of a particular stock or commodity or a cryptocurrency.\n */\nexport class MarketDepths extends React.PureComponent<MarketDepthsProps> {\n    public defaultSettings = {\n        dataKeyX: 'ask',\n        dataKeyY: 'bid',\n        tooltip: true,\n        height: '100%',\n        activeDot: {\n            stroke: 'rgba(31,42,52,1)',\n            strokeWidth: 1,\n            r: 4,\n            fill: 'rgba(91,165,132,1)',\n        },\n    };\n\n    public render() {\n        const {\n            chartType,\n            colorTheme,\n            className,\n            data,\n            hideCartesianGrid,\n            intervalX,\n            intervalY,\n            toolTipColors,\n            settings = this.defaultSettings,\n            orientation,\n            gradientHide,\n        } = this.props;\n        const cx = classnames('cr-market-depths', className);\n        const colorSettings = getColorSettings(colorTheme);\n\n        return (\n            <div className={cx}>\n                <ResponsiveContainer\n                    width=\"100%\"\n                    height={settings.height}\n                >\n                    <AreaChart\n                        data={data}\n                        margin={{ top: 20, right: 30, left: 0, bottom: 20 }}\n                    >\n                        {this.defineGradient(colorSettings, gradientHide)}\n                        {hideCartesianGrid ? null : (<CartesianGrid stroke={colorSettings.strokeGridColor} strokeDasharray=\"1 1\" fill=\"url(#fillGrid)\" />)}\n                        <XAxis\n                            dataKey={settings.dataKeyX || 'ask'}\n                            interval={intervalX || 'preserveStartEnd'}\n                            stroke={colorSettings.strokeAxisColor}\n                        />\n                        <YAxis\n                            orientation={orientation ? orientation : 'left'}\n                            dataKey={settings.dataKeyY || 'bid'}\n                            interval={intervalY || 'preserveStartEnd'}\n                            stroke={colorSettings.strokeAxisColor}\n                        />\n                        {settings.tooltip ?\n                            <Tooltip\n                                content={<CustomTooltip toolTipColors={toolTipColors} external={data} />}\n                            /> : null}\n                        <Area\n                            type={chartType ? chartType : 'step'}\n                            dataKey=\"bid\"\n                            stroke={colorSettings.strokeAreaBidColor}\n                            fill=\"url(#bidChartColor)\"\n                            activeDot={settings.activeDot}\n                        />\n                        <Area\n                            type={chartType ? chartType : 'step'}\n                            dataKey=\"ask\"\n                            stroke={colorSettings.strokeAreaAskColor}\n                            fill=\"url(#askChartColor)\"\n                            activeDot={settings.activeDot}\n                        />\n                    </AreaChart>\n                </ResponsiveContainer>\n            </div>\n        );\n    }\n\n    public defineGradient = (colorSettings, value?: boolean) => {\n        if (value) {\n            return (\n                <defs>\n                    <linearGradient id=\"bidChartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop stopColor={colorSettings.fillAreaBidColor} />\n                    </linearGradient>\n                    <linearGradient id=\"askChartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop stopColor={colorSettings.fillAreaAskColor} />\n                    </linearGradient>\n                    <linearGradient id=\"fillGrid\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor={colorSettings.gridBackgroundStartColor} stopOpacity={0} />\n                        <stop offset=\"95%\" stopColor={colorSettings.gridBackgroundEndColor} stopOpacity={1} />\n                    </linearGradient>\n                </defs>\n            );\n        }\n\n        return (\n            <defs>\n                <linearGradient id=\"bidChartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor={colorSettings.fillAreaBidColor} stopOpacity={1} />\n                    <stop offset=\"95%\" stopColor={colorSettings.fillAreaBidColor} stopOpacity={0} />\n                </linearGradient>\n                <linearGradient id=\"askChartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor={colorSettings.fillAreaAskColor} stopOpacity={1} />\n                    <stop offset=\"95%\" stopColor={colorSettings.fillAreaAskColor} stopOpacity={0} />\n                </linearGradient>\n                <linearGradient id=\"fillGrid\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor={colorSettings.gridBackgroundStartColor} stopOpacity={0} />\n                    <stop offset=\"95%\" stopColor={colorSettings.gridBackgroundEndColor} stopOpacity={1} />\n                </linearGradient>\n            </defs>\n        );\n    };\n}\n\n"],"mappings":";;;;;;;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SACIC,IAAI,EACJC,SAAS,EACTC,aAAa,EACbC,mBAAmB,EACnBC,OAAO,EAEPC,KAAK,EACLC,KAAK,QACF,UAAU;AACjB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,eAAe,EAAEC,mBAAmB,QAAQ,eAAe;AA+GpE,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,UAAmB,EAAK;EAC9C,IAAIA,UAAU,KAAK,OAAO,EAAE;IACxB,OAAO;MACHC,kBAAkB,EAAEL,MAAM,CAACM,KAAK,CAACC,KAAK,CAACC,aAAa;MACpDC,kBAAkB,EAAET,MAAM,CAACM,KAAK,CAACC,KAAK,CAACG,aAAa;MACpDC,eAAe,EAAEX,MAAM,CAACM,KAAK,CAACC,KAAK,CAACK,UAAU;MAC9CC,eAAe,EAAEb,MAAM,CAACM,KAAK,CAACC,KAAK,CAACO,UAAU;MAC9CC,gBAAgB,EAAEf,MAAM,CAACM,KAAK,CAACC,KAAK,CAACS,WAAW;MAChDC,gBAAgB,EAAEjB,MAAM,CAACM,KAAK,CAACC,KAAK,CAACW,WAAW;MAChDC,wBAAwB,EAAEnB,MAAM,CAACM,KAAK,CAACC,KAAK,CAACa,mBAAmB;MAChEC,sBAAsB,EAAErB,MAAM,CAACM,KAAK,CAACC,KAAK,CAACe;IAC/C,CAAC;EACL;EAEA,OAAO;IACHjB,kBAAkB,EAAEJ,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACC,aAAa,CAAC,CAAC;IACzFC,kBAAkB,EAAER,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACG,aAAa,CAAC,CAAC;IACzFC,eAAe,EAAEV,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACK,UAAU,CAAC,CAAC;IACnFC,eAAe,EAAEZ,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACO,UAAU,CAAC,CAAC;IACnFC,gBAAgB,EAAEd,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACS,WAAW,CAAC,CAAC;IACrFC,gBAAgB,EAAEhB,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACW,WAAW,CAAC,CAAC;IACrFC,wBAAwB,EAAElB,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACa,mBAAmB,CAAC,CAAC;IACrGC,sBAAsB,EAAEpB,eAAe,CAACC,mBAAmB,CAACF,MAAM,CAACuB,IAAI,CAAChB,KAAK,CAACe,iBAAiB,CAAC;EACpG,CAAC;AACL,CAAC;AAED,IAAME,aAAa,GAAG,SAAhBA,aAAa,CAAIC,KAAyB,EAAK;EACjD,IAAMC,oBAAoB,GAAG;IACzBC,eAAe,EAAE,0BAA0B;IAC3CC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACZ,CAAC;EACD,IAAQC,MAAM,GAA6DL,KAAK,CAAxEK,MAAM;IAAEC,OAAO,GAAoDN,KAAK,CAAhEM,OAAO;IAAEC,QAAQ,GAA0CP,KAAK,CAAvDO,QAAQ;IAAA,uBAA0CP,KAAK,CAA7CQ,aAAa;IAAbA,aAAa,qCAAGP,oBAAoB;EACvE,IAAQC,eAAe,GAAoBM,aAAa,CAAhDN,eAAe;IAAEC,KAAK,GAAaK,aAAa,CAA/BL,KAAK;IAAEC,MAAM,GAAKI,aAAa,CAAxBJ,MAAM;EACtC,IAAMK,aAAa,GAAG,SAAhBA,aAAa,GAAS;IACxB,IAAI,CAACH,OAAO,IAAI,CAACA,OAAO,CAAC,CAAC,CAAC,EAAE;MACzB,OAAO,EAAE;IACb;IAEA,gBAAwBA,OAAO,CAAC,CAAC,CAAC;MAA1BI,IAAI,aAAJA,IAAI;MAAEC,KAAK,aAALA,KAAK;IAEnB,oBAAO;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,aAAOD,IAAI,uBAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAKC,KAAK,CAAM,CAAI;EAChD,CAAC;EAED,IAAIN,MAAM,EAAE;IACR,IAAMO,KAAK,GAAG;MACVC,OAAO,EAAE,CAAC;MACVX,eAAe,EAAfA,eAAe;MACfE,MAAM,EAANA,MAAM;MACND,KAAK,EAALA,KAAK;MACLW,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACf,CAAC;IACD,IAAMC,WAAW,GAAGV,OAAO,IAAIA,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,CAACA,OAAO,GAAG,IAAI;IACrE,IAAMW,QAAQ,GAAGD,WAAW,GACxBT,QAAQ,CAACW,IAAI,CAAC,UAACC,KAA+B;MAAA,OAAMA,KAAK,CAACT,IAAI,KAAKM,WAAW,CAACN,IAAI;IAAA,CAAC,CAAC,GACrF,IAAI;IAER,oBACI;MAAK,SAAS,EAAC,oBAAoB;MAAC,KAAK,EAAEE,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5C,CAACK,QAAQ,GAAGR,aAAa,EAAE,GAAG,IAAI,eACnC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAIQ,QAAQ,GAAGA,QAAQ,CAACP,IAAI,GAAG,IAAI,CAAK,CACtC;EAEd;EAEA,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAaU,YAAY;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,OACdC,eAAe,GAAG;MACrBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,WAAW,EAAE,CAAC;QACdC,CAAC,EAAE,CAAC;QACJC,IAAI,EAAE;MACV;IACJ,CAAC;IAAA,OAkEMC,cAAc,GAAG,UAACC,aAAa,EAAErB,KAAe,EAAK;MACxD,IAAIA,KAAK,EAAE;QACP,oBACI;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACI;UAAgB,EAAE,EAAC,eAAe;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAC1D;UAAM,SAAS,EAAEqB,aAAa,CAACxC,gBAAiB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CACtC,eACjB;UAAgB,EAAE,EAAC,eAAe;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAC1D;UAAM,SAAS,EAAEwC,aAAa,CAAC1C,gBAAiB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CACtC,eACjB;UAAgB,EAAE,EAAC,UAAU;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAC,EAAE,EAAC,GAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACrD;UAAM,MAAM,EAAC,IAAI;UAAC,SAAS,EAAE0C,aAAa,CAACtC,wBAAyB;UAAC,WAAW,EAAE,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,eACvF;UAAM,MAAM,EAAC,KAAK;UAAC,SAAS,EAAEsC,aAAa,CAACpC,sBAAuB;UAAC,WAAW,EAAE,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CACzE,CACd;MAEf;MAEA,oBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAgB,EAAE,EAAC,eAAe;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC1D;QAAM,MAAM,EAAC,IAAI;QAAC,SAAS,EAAEoC,aAAa,CAACxC,gBAAiB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eAC/E;QAAM,MAAM,EAAC,KAAK;QAAC,SAAS,EAAEwC,aAAa,CAACxC,gBAAiB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACnE,eACjB;QAAgB,EAAE,EAAC,eAAe;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC1D;QAAM,MAAM,EAAC,IAAI;QAAC,SAAS,EAAEwC,aAAa,CAAC1C,gBAAiB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eAC/E;QAAM,MAAM,EAAC,KAAK;QAAC,SAAS,EAAE0C,aAAa,CAAC1C,gBAAiB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACnE,eACjB;QAAgB,EAAE,EAAC,UAAU;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAC,EAAE,EAAC,GAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrD;QAAM,MAAM,EAAC,IAAI;QAAC,SAAS,EAAE0C,aAAa,CAACtC,wBAAyB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eACvF;QAAM,MAAM,EAAC,KAAK;QAAC,SAAS,EAAEsC,aAAa,CAACpC,sBAAuB;QAAC,WAAW,EAAE,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACzE,CACd;IAEf,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAlGD,kBAAgB;MACZ,kBAYI,IAAI,CAACI,KAAK;QAXViC,SAAS,eAATA,SAAS;QACTtD,UAAU,eAAVA,UAAU;QACVuD,SAAS,eAATA,SAAS;QACTC,IAAI,eAAJA,IAAI;QACJC,iBAAiB,eAAjBA,iBAAiB;QACjBC,SAAS,eAATA,SAAS;QACTC,SAAS,eAATA,SAAS;QACT9B,aAAa,eAAbA,aAAa;QAAA,mCACb+B,QAAQ;QAARA,QAAQ,qCAAG,IAAI,CAAClB,eAAe;QAC/BmB,WAAW,eAAXA,WAAW;QACXC,YAAY,eAAZA,YAAY;MAEhB,IAAMC,EAAE,GAAG5E,UAAU,CAAC,kBAAkB,EAAEoE,SAAS,CAAC;MACpD,IAAMF,aAAa,GAAGtD,gBAAgB,CAACC,UAAU,CAAC;MAElD,oBACI;QAAK,SAAS,EAAE+D,EAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACf,oBAAC,mBAAmB;QAChB,KAAK,EAAC,MAAM;QACZ,MAAM,EAAEH,QAAQ,CAACd,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAExB,oBAAC,SAAS;QACN,IAAI,EAAEU,IAAK;QACX,MAAM,EAAE;UAAEQ,GAAG,EAAE,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEnD,IAAI,CAACf,cAAc,CAACC,aAAa,EAAES,YAAY,CAAC,EAChDL,iBAAiB,GAAG,IAAI,gBAAI,oBAAC,aAAa;QAAC,MAAM,EAAEJ,aAAa,CAAC5C,eAAgB;QAAC,eAAe,EAAC,KAAK;QAAC,IAAI,EAAC,gBAAgB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAI,eAClI,oBAAC,KAAK;QACF,OAAO,EAAEmD,QAAQ,CAACjB,QAAQ,IAAI,KAAM;QACpC,QAAQ,EAAEe,SAAS,IAAI,kBAAmB;QAC1C,MAAM,EAAEL,aAAa,CAAC9C,eAAgB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxC,eACF,oBAAC,KAAK;QACF,WAAW,EAAEsD,WAAW,GAAGA,WAAW,GAAG,MAAO;QAChD,OAAO,EAAED,QAAQ,CAAChB,QAAQ,IAAI,KAAM;QACpC,QAAQ,EAAEe,SAAS,IAAI,kBAAmB;QAC1C,MAAM,EAAEN,aAAa,CAAC9C,eAAgB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACxC,EACDqD,QAAQ,CAACf,OAAO,gBACb,oBAAC,OAAO;QACJ,OAAO,eAAE,oBAAC,aAAa;UAAC,aAAa,EAAEhB,aAAc;UAAC,QAAQ,EAAE2B,IAAK;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC3E,GAAG,IAAI,eACb,oBAAC,IAAI;QACD,IAAI,EAAEF,SAAS,GAAGA,SAAS,GAAG,MAAO;QACrC,OAAO,EAAC,KAAK;QACb,MAAM,EAAED,aAAa,CAAChD,kBAAmB;QACzC,IAAI,EAAC,qBAAqB;QAC1B,SAAS,EAAEuD,QAAQ,CAACb,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChC,eACF,oBAAC,IAAI;QACD,IAAI,EAAEO,SAAS,GAAGA,SAAS,GAAG,MAAO;QACrC,OAAO,EAAC,KAAK;QACb,MAAM,EAAED,aAAa,CAACpD,kBAAmB;QACzC,IAAI,EAAC,qBAAqB;QAC1B,SAAS,EAAE2D,QAAQ,CAACb,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChC,CACM,CACM,CACpB;IAEd;EAAC;EAAA;AAAA,EA5E6B3D,KAAK,CAACgF,aAAa"},"metadata":{},"sourceType":"module"}