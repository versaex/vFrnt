{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar buffer = require('buffer');\nvar bufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\nvar $ = require('../util/preconditions');\nvar errors = require('../errors');\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n  }\n});\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._satoshis;\n  },\n  set: function set(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(JSUtil.isNaturalNumber(num), 'Output satoshis is not a natural number');\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(JSUtil.isNaturalNumber(this._satoshis), 'Output satoshis is not a natural number');\n  }\n});\nOutput.prototype.invalidSatoshis = function () {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\nObject.defineProperty(Output.prototype, 'satoshisBN', {\n  configurable: false,\n  enumerable: true,\n  get: function get() {\n    return this._satoshisBN;\n  },\n  set: function set(num) {\n    this._satoshisBN = num;\n    this._satoshis = num.toNumber();\n    $.checkState(JSUtil.isNaturalNumber(this._satoshis), 'Output satoshis is not a natural number');\n  }\n});\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\nOutput.fromObject = function (data) {\n  return new Output(data);\n};\nOutput.prototype.setScriptFromBuffer = function (buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\nOutput.prototype.setScript = function (script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\nOutput.prototype.inspect = function () {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\nOutput.fromBufferReader = function (br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\nOutput.prototype.toBufferWriter = function (writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\nmodule.exports = Output;","map":{"version":3,"names":["_","require","BN","buffer","bufferUtil","JSUtil","BufferWriter","Script","$","errors","MAX_SAFE_INTEGER","Output","args","isObject","satoshis","isBuffer","script","_scriptBuffer","isString","isHexa","Buffer","setScript","TypeError","Object","defineProperty","prototype","configurable","enumerable","get","_script","setScriptFromBuffer","_satoshis","set","num","_satoshisBN","toNumber","parseInt","fromNumber","checkArgument","isNaturalNumber","checkState","invalidSatoshis","toObject","toJSON","obj","toString","fromObject","data","fromBuffer","_isOutput","e","InvalidBuffer","toBuffer","fromString","inspect","scriptStr","fromBufferReader","br","readUInt64LEBN","size","readVarintNum","read","toBufferWriter","writer","writeUInt64LEBN","writeVarintNum","length","write","module","exports"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/transaction/output.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar buffer = require('buffer');\nvar bufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\nvar $ = require('../util/preconditions');\nvar errors = require('../errors');\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = new buffer.Buffer(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\n\nObject.defineProperty(Output.prototype, 'satoshisBN', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshisBN;\n  },\n  set: function(num) {\n    this._satoshisBN = num;\n    this._satoshis = num.toNumber();\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = new buffer.Buffer([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}