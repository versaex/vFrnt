{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\SignIn\\\\index.tsx\";\nimport cr from 'classnames';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput } from '../';\nimport { captchaLogin } from '../../api';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\nvar SignIn = function SignIn(_ref) {\n  var email = _ref.email,\n    emailError = _ref.emailError,\n    emailPlaceholder = _ref.emailPlaceholder,\n    password = _ref.password,\n    passwordError = _ref.passwordError,\n    passwordPlaceholder = _ref.passwordPlaceholder,\n    isLoading = _ref.isLoading,\n    onSignUp = _ref.onSignUp,\n    image = _ref.image,\n    labelSignIn = _ref.labelSignIn,\n    labelSignUp = _ref.labelSignUp,\n    emailLabel = _ref.emailLabel,\n    passwordLabel = _ref.passwordLabel,\n    emailFocused = _ref.emailFocused,\n    passwordFocused = _ref.passwordFocused,\n    onForgotPassword = _ref.onForgotPassword,\n    forgotPasswordLabel = _ref.forgotPasswordLabel,\n    refreshError = _ref.refreshError,\n    onSignIn = _ref.onSignIn,\n    isFormValid = _ref.isFormValid,\n    handleChangeFocusField = _ref.handleChangeFocusField,\n    changePassword = _ref.changePassword,\n    changeEmail = _ref.changeEmail,\n    captchaType = _ref.captchaType,\n    geetestCaptchaSuccess = _ref.geetestCaptchaSuccess,\n    reCaptchaSuccess = _ref.reCaptchaSuccess,\n    renderCaptcha = _ref.renderCaptcha;\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var history = useHistory();\n  var _useIntl = useIntl(),\n    formatMessage = _useIntl.formatMessage;\n  var isValidForm = React.useCallback(function () {\n    var isEmailValid = email.match(EMAIL_REGEX);\n    return email && isEmailValid && password;\n  }, [email, password]);\n  var handleChangeEmail = React.useCallback(function (value) {\n    changeEmail(value);\n  }, [changeEmail]);\n  var handleChangePassword = React.useCallback(function (value) {\n    changePassword(value);\n  }, [changePassword]);\n  var handleFieldFocus = React.useCallback(function (field) {\n    handleChangeFocusField(field);\n  }, [handleChangeFocusField]);\n  var isButtonDisabled = function isButtonDisabled() {\n    return captchaLogin() && captchaType !== 'none' && !reCaptchaSuccess && !geetestCaptchaSuccess ? true : false;\n  };\n  var handleSubmitForm = React.useCallback(function () {\n    refreshError();\n    onSignIn();\n  }, [onSignIn, refreshError]);\n  var handleValidateForm = React.useCallback(function () {\n    isFormValid();\n  }, [isFormValid]);\n  var handleClick = React.useCallback(function (e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (!isValidForm()) {\n      handleValidateForm();\n    } else {\n      handleSubmitForm();\n    }\n  }, [handleSubmitForm, handleValidateForm, isValidForm]);\n  var handleEnterPress = React.useCallback(function (event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      handleClick();\n    }\n  }, [handleClick]);\n  var renderForgotButton = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-sign-in-form__bottom-section\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-sign-in-form__bottom-section-password\",\n      onClick: function onClick() {\n        return onForgotPassword(email);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, forgotPasswordLabel || 'Forgot your password?'));\n  }, [forgotPasswordLabel, onForgotPassword, email]);\n  var renderRegister = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-sign-in-screen__register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, formatMessage({\n      id: 'page.header.signIN.noAccountYet'\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: function onClick() {\n        return history.push('/signup');\n      },\n      className: \"pg-sign-in-screen__register-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, formatMessage({\n      id: 'page.body.landing.header.button3'\n    }))));\n  }, [formatMessage, history]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form\",\n    onKeyPress: handleEnterPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, !isMobileDevice && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__options-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option-inner __selected\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, labelSignIn ? labelSignIn : 'Sign In')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\",\n    onClick: onSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, labelSignUp ? labelSignUp : 'Sign Up'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__form-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, image ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"cr-sign-in-form__title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"cr-sign-in-form__image\",\n    src: image,\n    alt: \"logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-in-form__group', {\n      'cr-sign-in-form__group--focused': emailFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"email\",\n    label: emailLabel || 'Email',\n    placeholder: emailPlaceholder,\n    defaultLabel: \"Email\",\n    handleChangeInput: handleChangeEmail,\n    inputValue: email,\n    handleFocusInput: function handleFocusInput() {\n      return handleFieldFocus('email');\n    },\n    classNameLabel: \"cr-sign-in-form__label\",\n    autoFocus: !isMobileDevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }), emailError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cr-sign-in-form__error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 40\n    }\n  }, emailError)), /*#__PURE__*/React.createElement(\"div\", {\n    className: cr('cr-sign-in-form__group', {\n      'cr-sign-in-form__group--focused': passwordFocused\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"password\",\n    label: passwordLabel || 'Password',\n    placeholder: passwordPlaceholder,\n    defaultLabel: \"Password\",\n    handleChangeInput: handleChangePassword,\n    inputValue: password,\n    handleFocusInput: function handleFocusInput() {\n      return handleFieldFocus('password');\n    },\n    classNameLabel: \"cr-sign-in-form__label\",\n    autoFocus: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }), passwordError && /*#__PURE__*/React.createElement(\"div\", {\n    className: 'cr-sign-in-form__error',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 43\n    }\n  }, passwordError)), captchaLogin() && renderCaptcha, isMobileDevice && renderForgotButton, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-sign-in-form__button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"button\",\n    disabled: isLoading || !email.match(EMAIL_REGEX) || !password || isButtonDisabled(),\n    onClick: handleClick,\n    size: \"lg\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, isLoading ? 'Loading...' : labelSignIn ? labelSignIn : 'Sign in')), !isMobileDevice && renderForgotButton, isMobileDevice && renderRegister)));\n};\nexport var SignInComponent = React.memo(SignIn);","map":{"version":3,"names":["cr","React","Button","useIntl","useSelector","useHistory","CustomInput","captchaLogin","EMAIL_REGEX","selectMobileDeviceState","SignIn","email","emailError","emailPlaceholder","password","passwordError","passwordPlaceholder","isLoading","onSignUp","image","labelSignIn","labelSignUp","emailLabel","passwordLabel","emailFocused","passwordFocused","onForgotPassword","forgotPasswordLabel","refreshError","onSignIn","isFormValid","handleChangeFocusField","changePassword","changeEmail","captchaType","geetestCaptchaSuccess","reCaptchaSuccess","renderCaptcha","isMobileDevice","history","formatMessage","isValidForm","useCallback","isEmailValid","match","handleChangeEmail","value","handleChangePassword","handleFieldFocus","field","isButtonDisabled","handleSubmitForm","handleValidateForm","handleClick","e","preventDefault","handleEnterPress","event","key","renderForgotButton","useMemo","renderRegister","id","push","SignInComponent","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/SignIn/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CustomInput } from '../';\nimport { captchaLogin } from '../../api';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { GeetestCaptchaResponse } from '../../modules';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\n\nexport interface SignInProps {\n    labelSignIn?: string;\n    labelSignUp?: string;\n    emailLabel?: string;\n    passwordLabel?: string;\n    receiveConfirmationLabel?: string;\n    forgotPasswordLabel?: string;\n    isLoading?: boolean;\n    title?: string;\n    onForgotPassword: (email?: string) => void;\n    onConfirmationResend?: (email?: string) => void;\n    onSignUp: () => void;\n    onSignIn: () => void;\n    className?: string;\n    image?: string;\n    email: string;\n    emailError: string;\n    password: string;\n    passwordError: string;\n    emailFocused: boolean;\n    emailPlaceholder: string;\n    passwordFocused: boolean;\n    passwordPlaceholder: string;\n    isFormValid: () => void;\n    refreshError: () => void;\n    handleChangeFocusField: (value: string) => void;\n    changePassword: (value: string) => void;\n    changeEmail: (value: string) => void;\n    captchaType?: 'recaptcha' | 'geetest' | 'none';\n    renderCaptcha?: JSX.Element | null;\n    reCaptchaSuccess?: boolean;\n    geetestCaptchaSuccess?: boolean;\n    captcha_response?: string | GeetestCaptchaResponse;\n}\n\nconst SignIn: React.FC<SignInProps> = ({\n    email,\n    emailError,\n    emailPlaceholder,\n    password,\n    passwordError,\n    passwordPlaceholder,\n    isLoading,\n    onSignUp,\n    image,\n    labelSignIn,\n    labelSignUp,\n    emailLabel,\n    passwordLabel,\n    emailFocused,\n    passwordFocused,\n    onForgotPassword,\n    forgotPasswordLabel,\n    refreshError,\n    onSignIn,\n    isFormValid,\n    handleChangeFocusField,\n    changePassword,\n    changeEmail,\n    captchaType,\n    geetestCaptchaSuccess,\n    reCaptchaSuccess,\n    renderCaptcha,\n}) => {\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n    const history = useHistory();\n    const { formatMessage } = useIntl();\n\n    const isValidForm = React.useCallback(() => {\n        const isEmailValid = email.match(EMAIL_REGEX);\n\n        return email && isEmailValid && password;\n    }, [email, password]);\n\n    const handleChangeEmail = React.useCallback(\n        (value: string) => {\n            changeEmail(value);\n        },\n        [changeEmail]\n    );\n\n    const handleChangePassword = React.useCallback(\n        (value: string) => {\n            changePassword(value);\n        },\n        [changePassword]\n    );\n\n    const handleFieldFocus = React.useCallback(\n        (field: string) => {\n            handleChangeFocusField(field);\n        },\n        [handleChangeFocusField]\n    );\n\n    const isButtonDisabled = (): boolean => {\n        return ((captchaLogin() && captchaType !== 'none' && !reCaptchaSuccess && !geetestCaptchaSuccess)) ? true : false;\n    };\n\n    const handleSubmitForm = React.useCallback(() => {\n        refreshError();\n        onSignIn();\n    }, [onSignIn, refreshError]);\n\n    const handleValidateForm = React.useCallback(() => {\n        isFormValid();\n    }, [isFormValid]);\n\n    const handleClick = React.useCallback(\n        (e?: MouseEvent) => {\n            if (e) {\n                e.preventDefault();\n            }\n            if (!isValidForm()) {\n                handleValidateForm();\n            } else {\n                handleSubmitForm();\n            }\n        },\n        [handleSubmitForm, handleValidateForm, isValidForm]\n    );\n\n    const handleEnterPress = React.useCallback(\n        (event: React.KeyboardEvent<HTMLInputElement>) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n\n                handleClick();\n            }\n        },\n        [handleClick]\n    );\n\n    const renderForgotButton = React.useMemo(\n        () => (\n            <div className=\"cr-sign-in-form__bottom-section\">\n                <div className=\"cr-sign-in-form__bottom-section-password\" onClick={() => onForgotPassword(email)}>\n                    {forgotPasswordLabel || 'Forgot your password?'}\n                </div>\n            </div>\n        ),\n        [forgotPasswordLabel, onForgotPassword, email]\n    );\n\n    const renderRegister = React.useMemo(\n        () => (\n            <div className=\"pg-sign-in-screen__register\">\n                <span>\n                    {formatMessage({ id: 'page.header.signIN.noAccountYet' })}\n                    <span onClick={() => history.push('/signup')} className=\"pg-sign-in-screen__register-button\">\n                        {formatMessage({ id: 'page.body.landing.header.button3' })}\n                    </span>\n                </span>\n            </div>\n        ),\n        [formatMessage, history]\n    );\n\n    return (\n        <form>\n            <div className=\"cr-sign-in-form\" onKeyPress={handleEnterPress}>\n                {!isMobileDevice && (\n                    <div className=\"cr-sign-in-form__options-group\">\n                        <div className=\"cr-sign-in-form__option\">\n                            <div className=\"cr-sign-in-form__option-inner __selected\">\n                                {labelSignIn ? labelSignIn : 'Sign In'}\n                            </div>\n                        </div>\n                        <div className=\"cr-sign-in-form__option\">\n                            <div\n                                className=\"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\"\n                                onClick={onSignUp}>\n                                {labelSignUp ? labelSignUp : 'Sign Up'}\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className=\"cr-sign-in-form__form-content\">\n                    {image ? (\n                        <h1 className=\"cr-sign-in-form__title\">\n                            <img className=\"cr-sign-in-form__image\" src={image} alt=\"logo\" />\n                        </h1>\n                    ) : null}\n                    <div\n                        className={cr('cr-sign-in-form__group', {\n                            'cr-sign-in-form__group--focused': emailFocused,\n                        })}>\n                        <CustomInput\n                            type=\"email\"\n                            label={emailLabel || 'Email'}\n                            placeholder={emailPlaceholder}\n                            defaultLabel=\"Email\"\n                            handleChangeInput={handleChangeEmail}\n                            inputValue={email}\n                            handleFocusInput={() => handleFieldFocus('email')}\n                            classNameLabel=\"cr-sign-in-form__label\"\n                            autoFocus={!isMobileDevice}\n                        />\n                        {emailError && <div className={'cr-sign-in-form__error'}>{emailError}</div>}\n                    </div>\n                    <div\n                        className={cr('cr-sign-in-form__group', {\n                            'cr-sign-in-form__group--focused': passwordFocused,\n                        })}>\n                        <CustomInput\n                            type=\"password\"\n                            label={passwordLabel || 'Password'}\n                            placeholder={passwordPlaceholder}\n                            defaultLabel=\"Password\"\n                            handleChangeInput={handleChangePassword}\n                            inputValue={password}\n                            handleFocusInput={() => handleFieldFocus('password')}\n                            classNameLabel=\"cr-sign-in-form__label\"\n                            autoFocus={false}\n                        />\n                        {passwordError && <div className={'cr-sign-in-form__error'}>{passwordError}</div>}\n                    </div>\n                    {captchaLogin() && renderCaptcha}\n                    {isMobileDevice && renderForgotButton}\n                    <div className=\"cr-sign-in-form__button-wrapper\">\n                        <Button\n                            block={true}\n                            type=\"button\"\n                            disabled={isLoading || !email.match(EMAIL_REGEX) || !password || isButtonDisabled()}\n                            onClick={handleClick as any}\n                            size=\"lg\"\n                            variant=\"primary\">\n                            {isLoading ? 'Loading...' : labelSignIn ? labelSignIn : 'Sign in'}\n                        </Button>\n                    </div>\n                    {!isMobileDevice && renderForgotButton}\n                    {isMobileDevice && renderRegister}\n                </div>\n            </div>\n        </form>\n    );\n};\n\nexport const SignInComponent = React.memo(SignIn);\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,WAAW,QAAQ,KAAK;AACjC,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,WAAW,QAAQ,eAAe;AAE3C,SAASC,uBAAuB,QAAQ,qCAAqC;AAqC7E,IAAMC,MAA6B,GAAG,SAAhCA,MAA6B,OA4B7B;EAAA,IA3BFC,KAAK,QAALA,KAAK;IACLC,UAAU,QAAVA,UAAU;IACVC,gBAAgB,QAAhBA,gBAAgB;IAChBC,QAAQ,QAARA,QAAQ;IACRC,aAAa,QAAbA,aAAa;IACbC,mBAAmB,QAAnBA,mBAAmB;IACnBC,SAAS,QAATA,SAAS;IACTC,QAAQ,QAARA,QAAQ;IACRC,KAAK,QAALA,KAAK;IACLC,WAAW,QAAXA,WAAW;IACXC,WAAW,QAAXA,WAAW;IACXC,UAAU,QAAVA,UAAU;IACVC,aAAa,QAAbA,aAAa;IACbC,YAAY,QAAZA,YAAY;IACZC,eAAe,QAAfA,eAAe;IACfC,gBAAgB,QAAhBA,gBAAgB;IAChBC,mBAAmB,QAAnBA,mBAAmB;IACnBC,YAAY,QAAZA,YAAY;IACZC,QAAQ,QAARA,QAAQ;IACRC,WAAW,QAAXA,WAAW;IACXC,sBAAsB,QAAtBA,sBAAsB;IACtBC,cAAc,QAAdA,cAAc;IACdC,WAAW,QAAXA,WAAW;IACXC,WAAW,QAAXA,WAAW;IACXC,qBAAqB,QAArBA,qBAAqB;IACrBC,gBAAgB,QAAhBA,gBAAgB;IAChBC,aAAa,QAAbA,aAAa;EAEb,IAAMC,cAAc,GAAGlC,WAAW,CAACK,uBAAuB,CAAC;EAC3D,IAAM8B,OAAO,GAAGlC,UAAU,EAAE;EAC5B,eAA0BF,OAAO,EAAE;IAA3BqC,aAAa,YAAbA,aAAa;EAErB,IAAMC,WAAW,GAAGxC,KAAK,CAACyC,WAAW,CAAC,YAAM;IACxC,IAAMC,YAAY,GAAGhC,KAAK,CAACiC,KAAK,CAACpC,WAAW,CAAC;IAE7C,OAAOG,KAAK,IAAIgC,YAAY,IAAI7B,QAAQ;EAC5C,CAAC,EAAE,CAACH,KAAK,EAAEG,QAAQ,CAAC,CAAC;EAErB,IAAM+B,iBAAiB,GAAG5C,KAAK,CAACyC,WAAW,CACvC,UAACI,KAAa,EAAK;IACfb,WAAW,CAACa,KAAK,CAAC;EACtB,CAAC,EACD,CAACb,WAAW,CAAC,CAChB;EAED,IAAMc,oBAAoB,GAAG9C,KAAK,CAACyC,WAAW,CAC1C,UAACI,KAAa,EAAK;IACfd,cAAc,CAACc,KAAK,CAAC;EACzB,CAAC,EACD,CAACd,cAAc,CAAC,CACnB;EAED,IAAMgB,gBAAgB,GAAG/C,KAAK,CAACyC,WAAW,CACtC,UAACO,KAAa,EAAK;IACflB,sBAAsB,CAACkB,KAAK,CAAC;EACjC,CAAC,EACD,CAAClB,sBAAsB,CAAC,CAC3B;EAED,IAAMmB,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAkB;IACpC,OAAS3C,YAAY,EAAE,IAAI2B,WAAW,KAAK,MAAM,IAAI,CAACE,gBAAgB,IAAI,CAACD,qBAAqB,GAAK,IAAI,GAAG,KAAK;EACrH,CAAC;EAED,IAAMgB,gBAAgB,GAAGlD,KAAK,CAACyC,WAAW,CAAC,YAAM;IAC7Cd,YAAY,EAAE;IACdC,QAAQ,EAAE;EACd,CAAC,EAAE,CAACA,QAAQ,EAAED,YAAY,CAAC,CAAC;EAE5B,IAAMwB,kBAAkB,GAAGnD,KAAK,CAACyC,WAAW,CAAC,YAAM;IAC/CZ,WAAW,EAAE;EACjB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAMuB,WAAW,GAAGpD,KAAK,CAACyC,WAAW,CACjC,UAACY,CAAc,EAAK;IAChB,IAAIA,CAAC,EAAE;MACHA,CAAC,CAACC,cAAc,EAAE;IACtB;IACA,IAAI,CAACd,WAAW,EAAE,EAAE;MAChBW,kBAAkB,EAAE;IACxB,CAAC,MAAM;MACHD,gBAAgB,EAAE;IACtB;EACJ,CAAC,EACD,CAACA,gBAAgB,EAAEC,kBAAkB,EAAEX,WAAW,CAAC,CACtD;EAED,IAAMe,gBAAgB,GAAGvD,KAAK,CAACyC,WAAW,CACtC,UAACe,KAA4C,EAAK;IAC9C,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBD,KAAK,CAACF,cAAc,EAAE;MAEtBF,WAAW,EAAE;IACjB;EACJ,CAAC,EACD,CAACA,WAAW,CAAC,CAChB;EAED,IAAMM,kBAAkB,GAAG1D,KAAK,CAAC2D,OAAO,CACpC;IAAA,oBACI;MAAK,SAAS,EAAC,iCAAiC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAC5C;MAAK,SAAS,EAAC,0CAA0C;MAAC,OAAO,EAAE;QAAA,OAAMlC,gBAAgB,CAACf,KAAK,CAAC;MAAA,CAAC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAC5FgB,mBAAmB,IAAI,uBAAuB,CAC7C,CACJ;EAAA,CACT,EACD,CAACA,mBAAmB,EAAED,gBAAgB,EAAEf,KAAK,CAAC,CACjD;EAED,IAAMkD,cAAc,GAAG5D,KAAK,CAAC2D,OAAO,CAChC;IAAA,oBACI;MAAK,SAAS,EAAC,6BAA6B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACKpB,aAAa,CAAC;MAAEsB,EAAE,EAAE;IAAkC,CAAC,CAAC,eACzD;MAAM,OAAO,EAAE;QAAA,OAAMvB,OAAO,CAACwB,IAAI,CAAC,SAAS,CAAC;MAAA,CAAC;MAAC,SAAS,EAAC,oCAAoC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACvFvB,aAAa,CAAC;MAAEsB,EAAE,EAAE;IAAmC,CAAC,CAAC,CACvD,CACJ,CACL;EAAA,CACT,EACD,CAACtB,aAAa,EAAED,OAAO,CAAC,CAC3B;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,iBAAiB;IAAC,UAAU,EAAEiB,gBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzD,CAAClB,cAAc,iBACZ;IAAK,SAAS,EAAC,gCAAgC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3C;IAAK,SAAS,EAAC,yBAAyB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpC;IAAK,SAAS,EAAC,0CAA0C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpDlB,WAAW,GAAGA,WAAW,GAAG,SAAS,CACpC,CACJ,eACN;IAAK,SAAS,EAAC,yBAAyB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACpC;IACI,SAAS,EAAC,2DAA2D;IACrE,OAAO,EAAEF,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjBG,WAAW,GAAGA,WAAW,GAAG,SAAS,CACpC,CACJ,CAEb,eACD;IAAK,SAAS,EAAC,+BAA+B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACzCF,KAAK,gBACF;IAAI,SAAS,EAAC,wBAAwB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClC;IAAK,SAAS,EAAC,wBAAwB;IAAC,GAAG,EAAEA,KAAM;IAAC,GAAG,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAChE,GACL,IAAI,eACR;IACI,SAAS,EAAEnB,EAAE,CAAC,wBAAwB,EAAE;MACpC,iCAAiC,EAAEwB;IACvC,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACH,oBAAC,WAAW;IACR,IAAI,EAAC,OAAO;IACZ,KAAK,EAAEF,UAAU,IAAI,OAAQ;IAC7B,WAAW,EAAET,gBAAiB;IAC9B,YAAY,EAAC,OAAO;IACpB,iBAAiB,EAAEgC,iBAAkB;IACrC,UAAU,EAAElC,KAAM;IAClB,gBAAgB,EAAE;MAAA,OAAMqC,gBAAgB,CAAC,OAAO,CAAC;IAAA,CAAC;IAClD,cAAc,EAAC,wBAAwB;IACvC,SAAS,EAAE,CAACV,cAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC7B,EACD1B,UAAU,iBAAI;IAAK,SAAS,EAAE,wBAAyB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,UAAU,CAAO,CACzE,eACN;IACI,SAAS,EAAEZ,EAAE,CAAC,wBAAwB,EAAE;MACpC,iCAAiC,EAAEyB;IACvC,CAAC,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACH,oBAAC,WAAW;IACR,IAAI,EAAC,UAAU;IACf,KAAK,EAAEF,aAAa,IAAI,UAAW;IACnC,WAAW,EAAEP,mBAAoB;IACjC,YAAY,EAAC,UAAU;IACvB,iBAAiB,EAAE+B,oBAAqB;IACxC,UAAU,EAAEjC,QAAS;IACrB,gBAAgB,EAAE;MAAA,OAAMkC,gBAAgB,CAAC,UAAU,CAAC;IAAA,CAAC;IACrD,cAAc,EAAC,wBAAwB;IACvC,SAAS,EAAE,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACnB,EACDjC,aAAa,iBAAI;IAAK,SAAS,EAAE,wBAAyB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEA,aAAa,CAAO,CAC/E,EACLR,YAAY,EAAE,IAAI8B,aAAa,EAC/BC,cAAc,IAAIqB,kBAAkB,eACrC;IAAK,SAAS,EAAC,iCAAiC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC5C,oBAAC,MAAM;IACH,KAAK,EAAE,IAAK;IACZ,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAE1C,SAAS,IAAI,CAACN,KAAK,CAACiC,KAAK,CAACpC,WAAW,CAAC,IAAI,CAACM,QAAQ,IAAIoC,gBAAgB,EAAG;IACpF,OAAO,EAAEG,WAAmB;IAC5B,IAAI,EAAC,IAAI;IACT,OAAO,EAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAChBpC,SAAS,GAAG,YAAY,GAAGG,WAAW,GAAGA,WAAW,GAAG,SAAS,CAC5D,CACP,EACL,CAACkB,cAAc,IAAIqB,kBAAkB,EACrCrB,cAAc,IAAIuB,cAAc,CAC/B,CACJ,CACH;AAEf,CAAC;AAED,OAAO,IAAMG,eAAe,GAAG/D,KAAK,CAACgE,IAAI,CAACvD,MAAM,CAAC"},"metadata":{},"sourceType":"module"}