{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport var formatDate = function formatDate(date) {\n  var _date$split = date.split('/'),\n    _date$split2 = _slicedToArray(_date$split, 3),\n    day = _date$split2[0],\n    month = _date$split2[1],\n    year = _date$split2[2];\n  var formatDay = day ? day : '';\n  formatDay = formatDay === '' || parseFloat(formatDay) <= 31 && formatDay !== '00' ? formatDay : '31';\n  var formatMonth = month ? month : '';\n  formatMonth = formatMonth === '' || parseFloat(formatMonth) <= 12 && formatMonth !== '00' ? formatMonth : '12';\n  var formatYear = year ? parseFloat(year) : '';\n  if (formatDay && formatMonth && formatYear) {\n    return \"\".concat(formatDay, \"/\").concat(formatMonth, \"/\").concat(formatYear);\n  } else if (formatDay && formatMonth) {\n    return \"\".concat(formatDay, \"/\").concat(formatMonth);\n  } else {\n    return \"\".concat(formatDay);\n  }\n};","map":{"version":3,"names":["formatDate","date","split","day","month","year","formatDay","parseFloat","formatMonth","formatYear"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/formatDate.ts"],"sourcesContent":["export const formatDate = (date: string) => {\n    const [day, month, year] = date.split('/');\n\n    let formatDay = day ? day : '';\n    formatDay = formatDay === '' || (parseFloat(formatDay) <= 31 && formatDay !== '00') ? formatDay : '31';\n    let formatMonth = month ? month : '';\n    formatMonth = formatMonth === '' || (parseFloat(formatMonth) <= 12 && formatMonth !== '00') ? formatMonth : '12';\n    const formatYear = year ? parseFloat(year) : '';\n\n    if (formatDay && formatMonth && formatYear) {\n        return `${formatDay}/${formatMonth}/${formatYear}`;\n    } else if (formatDay && formatMonth) {\n        return `${formatDay}/${formatMonth}`;\n    } else {\n        return `${formatDay}`;\n    }\n};\n"],"mappings":";AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAY,EAAK;EACxC,kBAA2BA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;IAAA;IAAnCC,GAAG;IAAEC,KAAK;IAAEC,IAAI;EAEvB,IAAIC,SAAS,GAAGH,GAAG,GAAGA,GAAG,GAAG,EAAE;EAC9BG,SAAS,GAAGA,SAAS,KAAK,EAAE,IAAKC,UAAU,CAACD,SAAS,CAAC,IAAI,EAAE,IAAIA,SAAS,KAAK,IAAK,GAAGA,SAAS,GAAG,IAAI;EACtG,IAAIE,WAAW,GAAGJ,KAAK,GAAGA,KAAK,GAAG,EAAE;EACpCI,WAAW,GAAGA,WAAW,KAAK,EAAE,IAAKD,UAAU,CAACC,WAAW,CAAC,IAAI,EAAE,IAAIA,WAAW,KAAK,IAAK,GAAGA,WAAW,GAAG,IAAI;EAChH,IAAMC,UAAU,GAAGJ,IAAI,GAAGE,UAAU,CAACF,IAAI,CAAC,GAAG,EAAE;EAE/C,IAAIC,SAAS,IAAIE,WAAW,IAAIC,UAAU,EAAE;IACxC,iBAAUH,SAAS,cAAIE,WAAW,cAAIC,UAAU;EACpD,CAAC,MAAM,IAAIH,SAAS,IAAIE,WAAW,EAAE;IACjC,iBAAUF,SAAS,cAAIE,WAAW;EACtC,CAAC,MAAM;IACH,iBAAUF,SAAS;EACvB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}