{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n  return r;\n};\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton } from 'intl-messageformat-parser';\nvar FormatError = /** @class */function (_super) {\n  __extends(FormatError, _super);\n  function FormatError(msg, variableId) {\n    var _this = _super.call(this, msg) || this;\n    _this.variableId = variableId;\n    return _this;\n  }\n  return FormatError;\n}(Error);\nfunction mergeLiteral(parts) {\n  if (parts.length < 2) {\n    return parts;\n  }\n  return parts.reduce(function (all, part) {\n    var lastPart = all[all.length - 1];\n    if (!lastPart || lastPart.type !== 0 /* literal */ || part.type !== 0 /* literal */) {\n      all.push(part);\n    } else {\n      lastPart.value += part.value;\n    }\n    return all;\n  }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue,\n// For debugging\noriginalMessage) {\n  // Hot path for straight simple msg translations\n  if (els.length === 1 && isLiteralElement(els[0])) {\n    return [{\n      type: 0 /* literal */,\n      value: els[0].value\n    }];\n  }\n  var result = [];\n  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n    var el = els_1[_i];\n    // Exit early for string parts.\n    if (isLiteralElement(el)) {\n      result.push({\n        type: 0 /* literal */,\n        value: el.value\n      });\n      continue;\n    }\n    // TODO: should this part be literal type?\n    // Replace `#` in plural rules with the actual numeric value.\n    if (isPoundElement(el)) {\n      if (typeof currentPluralValue === 'number') {\n        result.push({\n          type: 0 /* literal */,\n          value: formatters.getNumberFormat(locales).format(currentPluralValue)\n        });\n      }\n      continue;\n    }\n    var varName = el.value;\n    // Enforce that all required values are provided by the caller.\n    if (!(values && varName in values)) {\n      throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n    }\n    var value = values[varName];\n    if (isArgumentElement(el)) {\n      if (!value || typeof value === 'string' || typeof value === 'number') {\n        value = typeof value === 'string' || typeof value === 'number' ? String(value) : '';\n      }\n      result.push({\n        type: 1 /* argument */,\n        value: value\n      });\n      continue;\n    }\n    // Recursively format plural and select parts' option â€” which can be a\n    // nested pattern structure. The choosing of the option to use is\n    // abstracted-by and delegated-to the part helper object.\n    if (isDateElement(el)) {\n      var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n      result.push({\n        type: 0 /* literal */,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isTimeElement(el)) {\n      var style = typeof el.style === 'string' ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? parseDateTimeSkeleton(el.style.pattern) : undefined;\n      result.push({\n        type: 0 /* literal */,\n        value: formatters.getDateTimeFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isNumberElement(el)) {\n      var style = typeof el.style === 'string' ? formats.number[el.style] : isNumberSkeleton(el.style) ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens) : undefined;\n      result.push({\n        type: 0 /* literal */,\n        value: formatters.getNumberFormat(locales, style).format(value)\n      });\n      continue;\n    }\n    if (isSelectElement(el)) {\n      var opt = el.options[value] || el.options.other;\n      if (!opt) {\n        throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n      }\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n      continue;\n    }\n    if (isPluralElement(el)) {\n      var opt = el.options[\"=\" + value];\n      if (!opt) {\n        if (!Intl.PluralRules) {\n          throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n        }\n        var rule = formatters.getPluralRules(locales, {\n          type: el.pluralType\n        }).select(value - (el.offset || 0));\n        opt = el.options[rule] || el.options.other;\n      }\n      if (!opt) {\n        throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n      }\n      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n      continue;\n    }\n  }\n  return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values,\n// For debugging\noriginalMessage) {\n  var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n  // Hot path for straight simple msg translations\n  if (parts.length === 1) {\n    return parts[0].value;\n  }\n  return parts.reduce(function (all, part) {\n    return all += part.value;\n  }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n  return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n  return text.split(TOKEN_REGEX).filter(Boolean).map(function (c) {\n    return objectParts[c] != null ? objectParts[c] : c;\n  }).reduce(function (all, c) {\n    if (!all.length) {\n      all.push(c);\n    } else if (typeof c === 'string' && typeof all[all.length - 1] === 'string') {\n      all[all.length - 1] += c;\n    } else {\n      all.push(c);\n    }\n    return all;\n  }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\nfunction formatHTMLElement(el, objectParts, values) {\n  var tagName = el.tagName;\n  var outerHTML = el.outerHTML,\n    textContent = el.textContent,\n    childNodes = el.childNodes;\n  // Regular text\n  if (!tagName) {\n    return restoreRichPlaceholderMessage(textContent || '', objectParts);\n  }\n  tagName = tagName.toLowerCase();\n  var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n  var formatFnOrValue = values[tagName];\n  if (formatFnOrValue && isVoidElement) {\n    throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n  }\n  if (!childNodes.length) {\n    return [outerHTML];\n  }\n  var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n    return all.concat(formatHTMLElement(child, objectParts, values));\n  }, []);\n  // Legacy HTML\n  if (!formatFnOrValue) {\n    return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n  }\n  // HTML Tag replacement\n  if (typeof formatFnOrValue === 'function') {\n    return [formatFnOrValue.apply(void 0, chunks)];\n  }\n  return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values,\n// For debugging\noriginalMessage) {\n  var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n  var objectParts = {};\n  var formattedMessage = parts.reduce(function (all, part) {\n    if (part.type === 0 /* literal */) {\n      return all += part.value;\n    }\n    var id = generateId();\n    objectParts[id] = part.value;\n    return all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER;\n  }, '');\n  // Not designed to filter out aggressively\n  if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n    return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n  }\n  if (!values) {\n    throw new FormatError('Message has placeholders but no values was given');\n  }\n  if (typeof DOMParser === 'undefined') {\n    throw new FormatError('Cannot format XML message without DOMParser');\n  }\n  if (!domParser) {\n    domParser = new DOMParser();\n  }\n  var content = domParser.parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html').getElementById(TEMPLATE_ID);\n  if (!content) {\n    throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n  }\n  var tagsToFormat = Object.keys(values).filter(function (varName) {\n    return !!content.getElementsByTagName(varName).length;\n  });\n  // No tags to format\n  if (!tagsToFormat.length) {\n    return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n  }\n  var caseSensitiveTags = tagsToFormat.filter(function (tagName) {\n    return tagName !== tagName.toLowerCase();\n  });\n  if (caseSensitiveTags.length) {\n    throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n  }\n  // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n  return Array.prototype.slice.call(content.childNodes).reduce(function (all, child) {\n    return all.concat(formatHTMLElement(child, objectParts, values));\n  }, []);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","convertNumberSkeletonToNumberFormatOptions","isArgumentElement","isDateElement","isDateTimeSkeleton","isLiteralElement","isNumberElement","isNumberSkeleton","isPluralElement","isPoundElement","isSelectElement","isTimeElement","parseDateTimeSkeleton","FormatError","_super","msg","variableId","_this","call","Error","mergeLiteral","parts","reduce","all","part","lastPart","type","push","value","formatToParts","els","locales","formatters","formats","values","currentPluralValue","originalMessage","result","_i","els_1","el","getNumberFormat","format","varName","String","style","date","undefined","getDateTimeFormat","time","pattern","number","tokens","opt","options","other","RangeError","keys","join","apply","Intl","PluralRules","rule","getPluralRules","pluralType","select","offset","formatToString","domParser","TOKEN_DELIMITER","TOKEN_REGEX","counter","generateId","Date","now","restoreRichPlaceholderMessage","text","objectParts","split","filter","Boolean","map","c","SIMPLE_XML_REGEX","TEMPLATE_ID","VOID_ELEMENTS","formatHTMLElement","tagName","outerHTML","textContent","childNodes","toLowerCase","isVoidElement","indexOf","formatFnOrValue","chunks","slice","child","concat","formatHTMLMessage","formattedMessage","id","test","DOMParser","content","parseFromString","getElementById","tagsToFormat","getElementsByTagName","caseSensitiveTags"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/intl-messageformat/lib/formatters.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, } from 'intl-messageformat-parser';\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, variableId) {\n        var _this = _super.call(this, msg) || this;\n        _this.variableId = variableId;\n        return _this;\n    }\n    return FormatError;\n}(Error));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new FormatError(\"The intl string context variable \\\"\" + varName + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\");\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: 1 /* argument */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option â€” which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string' ? formats.date[el.style] : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\");\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new RangeError(\"Invalid values for \\\"\" + el.value + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(el.options).join('\", \"') + \"\\\"\");\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\nexport function formatToString(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    // Hot path for straight simple msg translations\n    if (parts.length === 1) {\n        return parts[0].value;\n    }\n    return parts.reduce(function (all, part) { return (all += part.value); }, '');\n}\n// Singleton\nvar domParser;\nvar TOKEN_DELIMITER = '@@';\nvar TOKEN_REGEX = /@@(\\d+_\\d+)@@/g;\nvar counter = 0;\nfunction generateId() {\n    return Date.now() + \"_\" + ++counter;\n}\nfunction restoreRichPlaceholderMessage(text, objectParts) {\n    return text\n        .split(TOKEN_REGEX)\n        .filter(Boolean)\n        .map(function (c) { return (objectParts[c] != null ? objectParts[c] : c); })\n        .reduce(function (all, c) {\n        if (!all.length) {\n            all.push(c);\n        }\n        else if (typeof c === 'string' &&\n            typeof all[all.length - 1] === 'string') {\n            all[all.length - 1] += c;\n        }\n        else {\n            all.push(c);\n        }\n        return all;\n    }, []);\n}\n/**\n * Not exhaustive, just for sanity check\n */\nvar SIMPLE_XML_REGEX = /(<([0-9a-zA-Z-_]*?)>(.*?)<\\/([0-9a-zA-Z-_]*?)>)|(<[0-9a-zA-Z-_]*?\\/>)/;\nvar TEMPLATE_ID = Date.now() + '@@';\nvar VOID_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr',\n];\nfunction formatHTMLElement(el, objectParts, values) {\n    var tagName = el.tagName;\n    var outerHTML = el.outerHTML, textContent = el.textContent, childNodes = el.childNodes;\n    // Regular text\n    if (!tagName) {\n        return restoreRichPlaceholderMessage(textContent || '', objectParts);\n    }\n    tagName = tagName.toLowerCase();\n    var isVoidElement = ~VOID_ELEMENTS.indexOf(tagName);\n    var formatFnOrValue = values[tagName];\n    if (formatFnOrValue && isVoidElement) {\n        throw new FormatError(tagName + \" is a self-closing tag and can not be used, please use another tag name.\");\n    }\n    if (!childNodes.length) {\n        return [outerHTML];\n    }\n    var chunks = Array.prototype.slice.call(childNodes).reduce(function (all, child) {\n        return all.concat(formatHTMLElement(child, objectParts, values));\n    }, []);\n    // Legacy HTML\n    if (!formatFnOrValue) {\n        return __spreadArrays([\"<\" + tagName + \">\"], chunks, [\"</\" + tagName + \">\"]);\n    }\n    // HTML Tag replacement\n    if (typeof formatFnOrValue === 'function') {\n        return [formatFnOrValue.apply(void 0, chunks)];\n    }\n    return [formatFnOrValue];\n}\nexport function formatHTMLMessage(els, locales, formatters, formats, values, \n// For debugging\noriginalMessage) {\n    var parts = formatToParts(els, locales, formatters, formats, values, undefined, originalMessage);\n    var objectParts = {};\n    var formattedMessage = parts.reduce(function (all, part) {\n        if (part.type === 0 /* literal */) {\n            return (all += part.value);\n        }\n        var id = generateId();\n        objectParts[id] = part.value;\n        return (all += \"\" + TOKEN_DELIMITER + id + TOKEN_DELIMITER);\n    }, '');\n    // Not designed to filter out aggressively\n    if (!SIMPLE_XML_REGEX.test(formattedMessage)) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    if (!values) {\n        throw new FormatError('Message has placeholders but no values was given');\n    }\n    if (typeof DOMParser === 'undefined') {\n        throw new FormatError('Cannot format XML message without DOMParser');\n    }\n    if (!domParser) {\n        domParser = new DOMParser();\n    }\n    var content = domParser\n        .parseFromString(\"<formatted-message id=\\\"\" + TEMPLATE_ID + \"\\\">\" + formattedMessage + \"</formatted-message>\", 'text/html')\n        .getElementById(TEMPLATE_ID);\n    if (!content) {\n        throw new FormatError(\"Malformed HTML message \" + formattedMessage);\n    }\n    var tagsToFormat = Object.keys(values).filter(function (varName) { return !!content.getElementsByTagName(varName).length; });\n    // No tags to format\n    if (!tagsToFormat.length) {\n        return restoreRichPlaceholderMessage(formattedMessage, objectParts);\n    }\n    var caseSensitiveTags = tagsToFormat.filter(function (tagName) { return tagName !== tagName.toLowerCase(); });\n    if (caseSensitiveTags.length) {\n        throw new FormatError(\"HTML tag must be lowercased but the following tags are not: \" + caseSensitiveTags.join(', '));\n    }\n    // We're doing this since top node is `<formatted-message/>` which does not have a formatter\n    return Array.prototype.slice\n        .call(content.childNodes)\n        .reduce(function (all, child) { return all.concat(formatHTMLElement(child, objectParts, values)); }, []);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}