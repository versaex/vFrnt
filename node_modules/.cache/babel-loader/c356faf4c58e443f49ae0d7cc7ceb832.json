{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function FormattedPlural(props) {\n  var value = props.value,\n    other = props.other,\n    children = props.children,\n    _props$intl = props.intl,\n    formatPlural = _props$intl.formatPlural,\n    Text = _props$intl.textComponent;\n  var pluralCategory = formatPlural(value, props);\n  var formattedPlural = props[pluralCategory] || other;\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  }\n  // Work around @types/react where React.FC cannot return string\n  return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n  type: 'cardinal'\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);","map":{"version":3,"names":["React","withIntl","FormattedPlural","props","value","other","children","intl","formatPlural","Text","textComponent","pluralCategory","formattedPlural","createElement","defaultProps","type","displayName"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/react-intl/lib/components/plural.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nconst FormattedPlural = props => {\n    const { value, other, children, intl: { formatPlural, textComponent: Text }, } = props;\n    const pluralCategory = formatPlural(value, props);\n    const formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default withIntl(FormattedPlural);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,QAAQ,MAAM,cAAc;AACnC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,KAAK,EAAI;EAC7B,IAAQC,KAAK,GAAoED,KAAK,CAA9EC,KAAK;IAAEC,KAAK,GAA6DF,KAAK,CAAvEE,KAAK;IAAEC,QAAQ,GAAmDH,KAAK,CAAhEG,QAAQ;IAAA,cAAmDH,KAAK,CAAtDI,IAAI;IAAIC,YAAY,eAAZA,YAAY;IAAiBC,IAAI,eAAnBC,aAAa;EACnE,IAAMC,cAAc,GAAGH,YAAY,CAACJ,KAAK,EAAED,KAAK,CAAC;EACjD,IAAMS,eAAe,GAAGT,KAAK,CAACQ,cAAc,CAAC,IAAIN,KAAK;EACtD,IAAI,OAAOC,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAACM,eAAe,CAAC;EACpC;EACA,IAAIH,IAAI,EAAE;IACN,OAAOT,KAAK,CAACa,aAAa,CAACJ,IAAI,EAAE,IAAI,EAAEG,eAAe,CAAC;EAC3D;EACA;EACA,OAAOA,eAAe;AAC1B,CAAC;AACDV,eAAe,CAACY,YAAY,GAAG;EAC3BC,IAAI,EAAE;AACV,CAAC;AACDb,eAAe,CAACc,WAAW,GAAG,iBAAiB;AAC/C,eAAef,QAAQ,CAACC,eAAe,CAAC"},"metadata":{},"sourceType":"module"}