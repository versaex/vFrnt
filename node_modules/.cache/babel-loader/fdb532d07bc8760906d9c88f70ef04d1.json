{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\screens\\\\WalletsScreen\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { Blur, CurrencyInfo, DepositCrypto, DepositFiat, TabPanel, WalletList } from '../../components';\nimport { DEFAULT_CCY_PRECISION } from '../../constants';\nimport { Withdraw } from '../../containers';\nimport { ModalWithdrawConfirmation } from '../../containers/ModalWithdrawConfirmation';\nimport { ModalWithdrawSubmit } from '../../containers/ModalWithdrawSubmit';\nimport { EstimatedValue } from '../../containers/Wallets/EstimatedValue';\nimport { WalletHistory } from '../../containers/Wallets/History';\nimport { setDocumentTitle } from '../../helpers';\nimport { alertPush, beneficiariesFetch, currenciesFetch as _currenciesFetch, selectBeneficiariesActivateSuccess, selectBeneficiariesCreateSuccess, selectBeneficiariesDeleteSuccess, selectCurrencies, selectHistory, selectMobileWalletUi, selectUserInfo, selectWallets, selectWalletsLoading, selectWithdrawSuccess, setMobileWalletUi as _setMobileWalletUi, walletsAddressFetch, walletsData, walletsFetch, walletsWithdrawCcyFetch } from '../../modules';\nvar defaultBeneficiary = {\n  id: 0,\n  currency: '',\n  name: '',\n  state: '',\n  data: {\n    address: ''\n  }\n};\nvar defaultWallet = {\n  name: '',\n  currency: '',\n  balance: '',\n  type: 'coin',\n  fixed: 0,\n  fee: 0\n};\nvar WalletsComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(WalletsComponent, _React$Component);\n  var _super = _createSuper(WalletsComponent);\n  function WalletsComponent(props) {\n    var _this;\n    _classCallCheck(this, WalletsComponent);\n    _this = _super.call(this, props);\n    _this.translate = function (id) {\n      return _this.props.intl.formatMessage({\n        id: id\n      });\n    };\n    _this.title = _this.translate('page.body.wallets.tabs.deposit.fiat.message1');\n    _this.description = _this.translate('page.body.wallets.tabs.deposit.fiat.message2');\n    _this.onTabChange = function (label) {\n      return _this.setState({\n        tab: label\n      });\n    };\n    _this.onActiveIndexChange = function (index) {\n      return _this.setState({\n        activeIndex: index\n      });\n    };\n    _this.onCurrentTabChange = function (index) {\n      return _this.setState({\n        currentTabIndex: index\n      });\n    };\n    _this.toggleSubmitModal = function () {\n      _this.setState(function (state) {\n        return {\n          withdrawSubmitModal: !state.withdrawSubmitModal,\n          withdrawDone: true\n        };\n      });\n    };\n    _this.toggleConfirmModal = function (amount, total, beneficiary, otpCode) {\n      _this.setState(function (state) {\n        return {\n          amount: amount || '',\n          beneficiary: beneficiary ? beneficiary : defaultBeneficiary,\n          otpCode: otpCode ? otpCode : '',\n          withdrawConfirmModal: !state.withdrawConfirmModal,\n          total: total || '',\n          withdrawDone: false\n        };\n      });\n    };\n    _this.handleWithdraw = function () {\n      var _this$state = _this.state,\n        selectedWalletIndex = _this$state.selectedWalletIndex,\n        otpCode = _this$state.otpCode,\n        amount = _this$state.amount,\n        beneficiary = _this$state.beneficiary;\n      if (selectedWalletIndex === -1) {\n        return;\n      }\n      var currency = _this.props.wallets[selectedWalletIndex].currency;\n      var withdrawRequest = {\n        amount: amount,\n        currency: currency.toLowerCase(),\n        otp: otpCode,\n        beneficiary_id: String(beneficiary.id)\n      };\n      _this.props.walletsWithdrawCcy(withdrawRequest);\n      _this.toggleConfirmModal();\n    };\n    _this.handleOnCopy = function () {\n      _this.props.fetchSuccess({\n        message: ['page.body.wallets.tabs.deposit.ccy.message.success'],\n        type: 'success'\n      });\n    };\n    _this.handleGenerateAddress = function () {\n      var selectedWalletIndex = _this.state.selectedWalletIndex;\n      var wallets = _this.props.wallets;\n      var wallet = wallets[selectedWalletIndex] || defaultWallet;\n      if (!wallet.deposit_address && wallets.length && wallet.type !== 'fiat') {\n        _this.props.fetchAddress({\n          currency: wallets[selectedWalletIndex].currency\n        });\n      }\n    };\n    _this.renderDeposit = function (isAccountActivated) {\n      var _this$props = _this.props,\n        currencies = _this$props.currencies,\n        user = _this$props.user,\n        wallets = _this$props.wallets;\n      var selectedWalletIndex = _this.state.selectedWalletIndex;\n      var wallet = wallets[selectedWalletIndex] || defaultWallet;\n      var currencyItem = currencies && currencies.find(function (item) {\n        return item.id === wallet.currency;\n      }) || {\n        min_confirmations: 6,\n        deposit_enabled: false\n      };\n      var text = _this.props.intl.formatMessage({\n        id: 'page.body.wallets.tabs.deposit.ccy.message.submit'\n      }, {\n        confirmations: currencyItem.min_confirmations\n      });\n      var error = _this.props.intl.formatMessage({\n        id: 'page.body.wallets.tabs.deposit.ccy.message.pending'\n      });\n      var blurCryptoClassName = classnames('pg-blur-deposit-crypto', {\n        'pg-blur-deposit-crypto--active': isAccountActivated\n      });\n      var buttonLabel = \"\".concat(_this.translate('page.body.wallets.tabs.deposit.ccy.button.generate'), \" \").concat(wallet.currency.toUpperCase(), \" \").concat(_this.translate('page.body.wallets.tabs.deposit.ccy.button.address'));\n      if (wallets[selectedWalletIndex].type === 'coin') {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CurrencyInfo, {\n          wallet: wallets[selectedWalletIndex],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }\n        }), currencyItem && !currencyItem.deposit_enabled ? /*#__PURE__*/React.createElement(Blur, {\n          className: blurCryptoClassName,\n          text: _this.translate('page.body.wallets.tabs.deposit.disabled.message'),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }\n        }) : null, /*#__PURE__*/React.createElement(DepositCrypto, {\n          buttonLabel: buttonLabel,\n          copiableTextFieldText: _this.translate('page.body.wallets.tabs.deposit.ccy.message.address'),\n          copyButtonText: _this.translate('page.body.wallets.tabs.deposit.ccy.message.button'),\n          error: error,\n          handleGenerateAddress: _this.handleGenerateAddress,\n          handleOnCopy: _this.handleOnCopy,\n          text: text,\n          wallet: wallet,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 21\n          }\n        }), wallet.currency && /*#__PURE__*/React.createElement(WalletHistory, {\n          label: \"deposit\",\n          type: \"deposits\",\n          currency: wallet.currency,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 41\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CurrencyInfo, {\n          wallet: wallets[selectedWalletIndex],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 21\n          }\n        }), currencyItem && !currencyItem.deposit_enabled ? /*#__PURE__*/React.createElement(Blur, {\n          className: \"pg-blur-deposit-fiat\",\n          text: _this.translate('page.body.wallets.tabs.deposit.disabled.message'),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }\n        }) : null, /*#__PURE__*/React.createElement(DepositFiat, {\n          title: _this.title,\n          description: _this.description,\n          uid: user ? user.uid : '',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }\n        }), wallet.currency && /*#__PURE__*/React.createElement(WalletHistory, {\n          label: \"deposit\",\n          type: \"deposits\",\n          currency: wallet.currency,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 41\n          }\n        }));\n      }\n    };\n    _this.renderWithdraw = function () {\n      var _this$props2 = _this.props,\n        currencies = _this$props2.currencies,\n        user = _this$props2.user,\n        wallets = _this$props2.wallets,\n        walletsError = _this$props2.walletsError;\n      var selectedWalletIndex = _this.state.selectedWalletIndex;\n      var wallet = wallets[selectedWalletIndex] || defaultWallet;\n      var currencyItem = currencies && currencies.find(function (item) {\n        return item.id === wallet.currency;\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CurrencyInfo, {\n        wallet: wallets[selectedWalletIndex],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 17\n        }\n      }), walletsError && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-wallet__error\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 34\n        }\n      }, walletsError.message), currencyItem && !currencyItem.withdrawal_enabled ? /*#__PURE__*/React.createElement(Blur, {\n        className: \"pg-blur-withdraw\",\n        text: _this.translate('page.body.wallets.tabs.withdraw.disabled.message'),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }\n      }) : null, _this.renderWithdrawContent(), user.otp && wallet.currency && /*#__PURE__*/React.createElement(WalletHistory, {\n        label: \"withdraw\",\n        type: \"withdraws\",\n        currency: wallet.currency,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 49\n        }\n      }));\n    };\n    _this.renderWithdrawContent = function () {\n      var _this$state2 = _this.state,\n        withdrawDone = _this$state2.withdrawDone,\n        selectedWalletIndex = _this$state2.selectedWalletIndex;\n      if (selectedWalletIndex === -1) {\n        return [{\n          content: null,\n          label: ''\n        }];\n      }\n      var _this$props3 = _this.props,\n        _this$props3$user = _this$props3.user,\n        level = _this$props3$user.level,\n        otp = _this$props3$user.otp,\n        wallets = _this$props3.wallets;\n      var wallet = wallets[selectedWalletIndex];\n      var currency = wallet.currency,\n        fee = wallet.fee,\n        type = wallet.type;\n      var fixed = (wallet || {\n        fixed: 0\n      }).fixed;\n      var withdrawProps = {\n        withdrawDone: withdrawDone,\n        currency: currency,\n        fee: fee,\n        onClick: _this.toggleConfirmModal,\n        twoFactorAuthRequired: _this.isTwoFactorAuthRequired(level, otp),\n        fixed: fixed,\n        type: type,\n        withdrawAmountLabel: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.tabs.withdraw.content.amount'\n        }),\n        withdraw2faLabel: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.tabs.withdraw.content.code2fa'\n        }),\n        withdrawFeeLabel: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.tabs.withdraw.content.fee'\n        }),\n        withdrawTotalLabel: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.tabs.withdraw.content.total'\n        }),\n        withdrawButtonLabel: _this.props.intl.formatMessage({\n          id: 'page.body.wallets.tabs.withdraw.content.button'\n        })\n      };\n      return otp ? /*#__PURE__*/React.createElement(Withdraw, Object.assign({}, withdrawProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 22\n        }\n      })) : _this.isOtpDisabled();\n    };\n    _this.isOtpDisabled = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-wallet__enable-2fa-message\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }, _this.translate('page.body.wallets.tabs.withdraw.content.enable2fa')), /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        onClick: _this.redirectToEnable2fa,\n        size: \"lg\",\n        variant: \"primary\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }\n      }, _this.translate('page.body.wallets.tabs.withdraw.content.enable2faButton')));\n    };\n    _this.redirectToEnable2fa = function () {\n      return _this.props.history.push('/security/2fa', {\n        enable2fa: true\n      });\n    };\n    _this.onWalletSelectionChange = function (value) {\n      var wallets = _this.props.wallets;\n      var nextWalletIndex = _this.props.wallets.findIndex(function (wallet) {\n        return wallet.currency.toLowerCase() === value.currency.toLowerCase();\n      });\n      _this.setState({\n        selectedWalletIndex: nextWalletIndex,\n        withdrawDone: false\n      });\n      _this.props.fetchBeneficiaries({\n        currency_id: value.currency.toLowerCase()\n      });\n      _this.props.setMobileWalletUi(wallets[nextWalletIndex].name);\n    };\n    _this.state = {\n      activeIndex: 0,\n      selectedWalletIndex: -1,\n      withdrawSubmitModal: false,\n      withdrawConfirmModal: false,\n      otpCode: '',\n      amount: '',\n      beneficiary: defaultBeneficiary,\n      tab: _this.translate('page.body.wallets.tabs.deposit'),\n      withdrawDone: false,\n      total: '',\n      currentTabIndex: 0\n    };\n    return _this;\n  }\n\n  //tslint:disable member-ordering\n  _createClass(WalletsComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setDocumentTitle('Wallets');\n      var wallets = this.props.wallets;\n      var selectedWalletIndex = this.state.selectedWalletIndex;\n      if (this.props.wallets.length === 0) {\n        this.props.fetchWallets();\n      }\n      if (selectedWalletIndex === -1 && wallets.length) {\n        var _wallets$;\n        this.setState({\n          selectedWalletIndex: 0\n        });\n        ((_wallets$ = wallets[0]) === null || _wallets$ === void 0 ? void 0 : _wallets$.currency) && this.props.fetchBeneficiaries({\n          currency_id: wallets[0].currency.toLowerCase()\n        });\n      }\n      if (!this.props.currencies.length) {\n        this.props.currenciesFetch();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearWallets();\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      var _this$props4 = this.props,\n        wallets = _this$props4.wallets,\n        beneficiariesActivateSuccess = _this$props4.beneficiariesActivateSuccess,\n        beneficiariesDeleteSuccess = _this$props4.beneficiariesDeleteSuccess,\n        withdrawSuccess = _this$props4.withdrawSuccess,\n        beneficiariesAddSuccess = _this$props4.beneficiariesAddSuccess;\n      var selectedWalletIndex = this.state.selectedWalletIndex;\n      if (!wallets.length && next.wallets.length) {\n        var _next$wallets$;\n        this.setState({\n          selectedWalletIndex: 0\n        });\n        ((_next$wallets$ = next.wallets[0]) === null || _next$wallets$ === void 0 ? void 0 : _next$wallets$.currency) && this.props.fetchBeneficiaries({\n          currency_id: next.wallets[0].currency.toLowerCase()\n        });\n      }\n      if (!withdrawSuccess && next.withdrawSuccess) {\n        this.toggleSubmitModal();\n      }\n      if (next.beneficiariesActivateSuccess && !beneficiariesActivateSuccess || next.beneficiariesDeleteSuccess && !beneficiariesDeleteSuccess || next.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n        var selectedCurrency = (next.wallets[selectedWalletIndex] || {\n          currency: ''\n        }).currency;\n        this.props.fetchBeneficiaries({\n          currency_id: selectedCurrency.toLowerCase()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props5 = this.props,\n        wallets = _this$props5.wallets,\n        historyList = _this$props5.historyList,\n        mobileWalletChosen = _this$props5.mobileWalletChosen,\n        walletsLoading = _this$props5.walletsLoading;\n      var _this$state3 = this.state,\n        beneficiary = _this$state3.beneficiary,\n        total = _this$state3.total,\n        selectedWalletIndex = _this$state3.selectedWalletIndex,\n        filteredWallets = _this$state3.filteredWallets,\n        withdrawSubmitModal = _this$state3.withdrawSubmitModal,\n        withdrawConfirmModal = _this$state3.withdrawConfirmModal,\n        currentTabIndex = _this$state3.currentTabIndex;\n      var formattedWallets = wallets.map(function (wallet) {\n        return _objectSpread(_objectSpread({}, wallet), {}, {\n          currency: wallet.currency.toUpperCase(),\n          iconUrl: wallet.iconUrl ? wallet.iconUrl : ''\n        });\n      });\n      var selectedCurrency = (wallets[selectedWalletIndex] || {\n        currency: ''\n      }).currency;\n      var confirmationAddress = '';\n      var selectedWalletPrecision = DEFAULT_CCY_PRECISION;\n      if (wallets[selectedWalletIndex]) {\n        selectedWalletPrecision = wallets[selectedWalletIndex].fixed;\n        confirmationAddress = wallets[selectedWalletIndex].type === 'fiat' ? beneficiary.name : beneficiary.data ? beneficiary.data.address : '';\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, wallets.length && /*#__PURE__*/React.createElement(EstimatedValue, {\n        wallets: wallets,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 36\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-container pg-wallet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      }, walletsLoading && /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 44\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row no-gutters pg-wallet__tabs-content \".concat(!historyList.length && 'pg-wallet__tabs-content-height'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-5 col-sm-12 col-12 \".concat(mobileWalletChosen && 'd-none d-md-block'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(WalletList, {\n        onWalletSelectionChange: this.onWalletSelectionChange,\n        walletItems: filteredWallets || formattedWallets,\n        activeIndex: this.state.activeIndex,\n        onActiveIndexChange: this.onActiveIndexChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-wallet__tabs col-md-7 col-sm-12 col-12 \".concat(!mobileWalletChosen && 'd-none d-md-block'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TabPanel, {\n        panels: this.renderTabs(),\n        onTabChange: function onTabChange(_, label) {\n          return _this2.onTabChange(label);\n        },\n        currentTabIndex: currentTabIndex,\n        onCurrentTabChange: this.onCurrentTabChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(ModalWithdrawSubmit, {\n        show: withdrawSubmitModal,\n        currency: selectedCurrency,\n        onSubmit: this.toggleSubmitModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(ModalWithdrawConfirmation, {\n        show: withdrawConfirmModal,\n        amount: total,\n        currency: selectedCurrency,\n        rid: confirmationAddress,\n        onSubmit: this.handleWithdraw,\n        onDismiss: this.toggleConfirmModal,\n        precision: selectedWalletPrecision,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      })));\n    }\n  }, {\n    key: \"renderTabs\",\n    value: function renderTabs() {\n      var _this$state4 = this.state,\n        tab = _this$state4.tab,\n        selectedWalletIndex = _this$state4.selectedWalletIndex;\n      var wallets = this.props.wallets;\n      if (selectedWalletIndex === -1) {\n        return [{\n          content: null,\n          label: ''\n        }];\n      }\n      var showWithdraw = wallets[selectedWalletIndex].type === 'fiat' || wallets[selectedWalletIndex].balance;\n      return [{\n        content: tab === this.translate('page.body.wallets.tabs.deposit') ? this.renderDeposit(!!showWithdraw) : null,\n        label: this.translate('page.body.wallets.tabs.deposit')\n      }, {\n        content: tab === this.translate('page.body.wallets.tabs.withdraw') ? this.renderWithdraw() : null,\n        label: this.translate('page.body.wallets.tabs.withdraw'),\n        disabled: !showWithdraw\n      }];\n    }\n  }, {\n    key: \"isTwoFactorAuthRequired\",\n    value: function isTwoFactorAuthRequired(level, is2faEnabled) {\n      return level > 1 || level === 1 && is2faEnabled;\n    }\n  }]);\n  return WalletsComponent;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state),\n    wallets: selectWallets(state),\n    walletsLoading: selectWalletsLoading(state),\n    withdrawSuccess: selectWithdrawSuccess(state),\n    historyList: selectHistory(state),\n    mobileWalletChosen: selectMobileWalletUi(state),\n    beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n    beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n    currencies: selectCurrencies(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchBeneficiaries: function fetchBeneficiaries(params) {\n      return dispatch(beneficiariesFetch(params));\n    },\n    fetchWallets: function fetchWallets() {\n      return dispatch(walletsFetch());\n    },\n    fetchAddress: function fetchAddress(_ref) {\n      var currency = _ref.currency;\n      return dispatch(walletsAddressFetch({\n        currency: currency\n      }));\n    },\n    walletsWithdrawCcy: function walletsWithdrawCcy(params) {\n      return dispatch(walletsWithdrawCcyFetch(params));\n    },\n    clearWallets: function clearWallets() {\n      return dispatch(walletsData([]));\n    },\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    },\n    setMobileWalletUi: function setMobileWalletUi(payload) {\n      return dispatch(_setMobileWalletUi(payload));\n    },\n    currenciesFetch: function currenciesFetch() {\n      return dispatch(_currenciesFetch());\n    }\n  };\n};\nexport var WalletsScreen = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(WalletsComponent);","map":{"version":3,"names":["classnames","React","Button","Spinner","injectIntl","connect","withRouter","compose","Blur","CurrencyInfo","DepositCrypto","DepositFiat","TabPanel","WalletList","DEFAULT_CCY_PRECISION","Withdraw","ModalWithdrawConfirmation","ModalWithdrawSubmit","EstimatedValue","WalletHistory","setDocumentTitle","alertPush","beneficiariesFetch","currenciesFetch","selectBeneficiariesActivateSuccess","selectBeneficiariesCreateSuccess","selectBeneficiariesDeleteSuccess","selectCurrencies","selectHistory","selectMobileWalletUi","selectUserInfo","selectWallets","selectWalletsLoading","selectWithdrawSuccess","setMobileWalletUi","walletsAddressFetch","walletsData","walletsFetch","walletsWithdrawCcyFetch","defaultBeneficiary","id","currency","name","state","data","address","defaultWallet","balance","type","fixed","fee","WalletsComponent","props","translate","intl","formatMessage","title","description","onTabChange","label","setState","tab","onActiveIndexChange","index","activeIndex","onCurrentTabChange","currentTabIndex","toggleSubmitModal","withdrawSubmitModal","withdrawDone","toggleConfirmModal","amount","total","beneficiary","otpCode","withdrawConfirmModal","handleWithdraw","selectedWalletIndex","wallets","withdrawRequest","toLowerCase","otp","beneficiary_id","String","walletsWithdrawCcy","handleOnCopy","fetchSuccess","message","handleGenerateAddress","wallet","deposit_address","length","fetchAddress","renderDeposit","isAccountActivated","currencies","user","currencyItem","find","item","min_confirmations","deposit_enabled","text","confirmations","error","blurCryptoClassName","buttonLabel","toUpperCase","uid","renderWithdraw","walletsError","withdrawal_enabled","renderWithdrawContent","content","level","withdrawProps","onClick","twoFactorAuthRequired","isTwoFactorAuthRequired","withdrawAmountLabel","withdraw2faLabel","withdrawFeeLabel","withdrawTotalLabel","withdrawButtonLabel","isOtpDisabled","redirectToEnable2fa","history","push","enable2fa","onWalletSelectionChange","value","nextWalletIndex","findIndex","fetchBeneficiaries","currency_id","fetchWallets","clearWallets","next","beneficiariesActivateSuccess","beneficiariesDeleteSuccess","withdrawSuccess","beneficiariesAddSuccess","selectedCurrency","historyList","mobileWalletChosen","walletsLoading","filteredWallets","formattedWallets","map","iconUrl","confirmationAddress","selectedWalletPrecision","renderTabs","_","showWithdraw","disabled","is2faEnabled","Component","mapStateToProps","mapDispatchToProps","dispatch","params","payload","WalletsScreen"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/screens/WalletsScreen/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport {\n    Blur,\n    CurrencyInfo,\n    DepositCrypto,\n    DepositFiat,\n    TabPanel,\n    WalletList,\n} from '../../components';\nimport { DEFAULT_CCY_PRECISION } from '../../constants';\nimport { Withdraw, WithdrawProps } from '../../containers';\nimport { ModalWithdrawConfirmation } from '../../containers/ModalWithdrawConfirmation';\nimport { ModalWithdrawSubmit } from '../../containers/ModalWithdrawSubmit';\nimport { EstimatedValue } from '../../containers/Wallets/EstimatedValue';\nimport { WalletHistory } from '../../containers/Wallets/History';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    alertPush,\n    beneficiariesFetch,\n    Beneficiary,\n    currenciesFetch,\n    Currency,\n    RootState,\n    selectBeneficiariesActivateSuccess,\n    selectBeneficiariesCreateSuccess,\n    selectBeneficiariesDeleteSuccess,\n    selectCurrencies,\n    selectHistory,\n    selectMobileWalletUi,\n    selectUserInfo,\n    selectWallets,\n    selectWalletsLoading,\n    selectWithdrawSuccess,\n    setMobileWalletUi,\n    User,\n    Wallet,\n    WalletHistoryList,\n    walletsAddressFetch,\n    walletsData,\n    walletsFetch,\n    walletsWithdrawCcyFetch,\n} from '../../modules';\n\n\ninterface ReduxProps {\n    user: User;\n    wallets: Wallet[];\n    withdrawSuccess: boolean;\n    walletsLoading?: boolean;\n    historyList: WalletHistoryList;\n    mobileWalletChosen: string;\n    beneficiariesActivateSuccess: boolean;\n    beneficiariesDeleteSuccess: boolean;\n    beneficiariesAddSuccess: boolean;\n    currencies: Currency[];\n}\n\ninterface DispatchProps {\n    fetchBeneficiaries: typeof beneficiariesFetch;\n    fetchAddress: typeof walletsAddressFetch;\n    fetchWallets: typeof walletsFetch;\n    clearWallets: () => void;\n    walletsWithdrawCcy: typeof walletsWithdrawCcyFetch;\n    fetchSuccess: typeof alertPush;\n    setMobileWalletUi: typeof setMobileWalletUi;\n    currenciesFetch: typeof currenciesFetch;\n}\n\nconst defaultBeneficiary: Beneficiary = {\n    id: 0,\n    currency: '',\n    name: '',\n    state: '',\n    data: {\n        address: '',\n    },\n};\n\nconst defaultWallet: Wallet = {\n    name: '',\n    currency: '',\n    balance: '',\n    type: 'coin',\n    fixed: 0,\n    fee: 0,\n};\n\ninterface WalletsState {\n    activeIndex: number;\n    otpCode: string;\n    amount: string;\n    beneficiary: Beneficiary;\n    selectedWalletIndex: number;\n    withdrawSubmitModal: boolean;\n    withdrawConfirmModal: boolean;\n    bchAddress?: string;\n    filteredWallets?: Wallet[] | null;\n    tab: string;\n    withdrawDone: boolean;\n    total: string;\n    currentTabIndex: number;\n}\n\ninterface OwnProps {\n    walletsError: {\n        message: string;\n    };\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps & OwnProps;\n\nclass WalletsComponent extends React.Component<Props, WalletsState> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            activeIndex: 0,\n            selectedWalletIndex: -1,\n            withdrawSubmitModal: false,\n            withdrawConfirmModal: false,\n            otpCode: '',\n            amount: '',\n            beneficiary: defaultBeneficiary,\n            tab: this.translate('page.body.wallets.tabs.deposit'),\n            withdrawDone: false,\n            total: '',\n            currentTabIndex: 0,\n        };\n    }\n\n    //tslint:disable member-ordering\n    public translate = (id: string) => this.props.intl.formatMessage({ id });\n\n    private title = this.translate('page.body.wallets.tabs.deposit.fiat.message1');\n    private description = this.translate('page.body.wallets.tabs.deposit.fiat.message2');\n\n    public componentDidMount() {\n        setDocumentTitle('Wallets');\n        const { wallets } = this.props;\n        const { selectedWalletIndex } = this.state;\n\n        if (this.props.wallets.length === 0) {\n            this.props.fetchWallets();\n        }\n\n        if (selectedWalletIndex === -1 && wallets.length) {\n            this.setState({ selectedWalletIndex: 0 });\n            wallets[0]?.currency && this.props.fetchBeneficiaries({ currency_id: wallets[0].currency.toLowerCase() });\n        }\n\n        if (!this.props.currencies.length) {\n            this.props.currenciesFetch();\n        }\n    }\n\n    public componentWillUnmount() {\n        this.props.clearWallets();\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        const {\n            wallets,\n            beneficiariesActivateSuccess,\n            beneficiariesDeleteSuccess,\n            withdrawSuccess,\n            beneficiariesAddSuccess,\n        } = this.props;\n        const { selectedWalletIndex } = this.state;\n\n        if (!wallets.length && next.wallets.length) {\n            this.setState({ selectedWalletIndex: 0 });\n            next.wallets[0]?.currency && this.props.fetchBeneficiaries({ currency_id:  next.wallets[0].currency.toLowerCase() });\n        }\n\n        if (!withdrawSuccess && next.withdrawSuccess) {\n            this.toggleSubmitModal();\n        }\n\n        if ((next.beneficiariesActivateSuccess && !beneficiariesActivateSuccess) ||\n            (next.beneficiariesDeleteSuccess && !beneficiariesDeleteSuccess) ||\n            (next.beneficiariesAddSuccess && !beneficiariesAddSuccess)) {\n            const selectedCurrency = (next.wallets[selectedWalletIndex] || { currency: '' }).currency;\n\n            this.props.fetchBeneficiaries({ currency_id: selectedCurrency.toLowerCase() });\n        }\n    }\n\n    public render() {\n        const { wallets, historyList, mobileWalletChosen, walletsLoading } = this.props;\n        const {\n            beneficiary,\n            total,\n            selectedWalletIndex,\n            filteredWallets,\n            withdrawSubmitModal,\n            withdrawConfirmModal,\n            currentTabIndex,\n        } = this.state;\n        const formattedWallets = wallets.map((wallet: Wallet) => ({\n            ...wallet,\n            currency: wallet.currency.toUpperCase(),\n            iconUrl: wallet.iconUrl ? wallet.iconUrl : '',\n        }));\n        const selectedCurrency = (wallets[selectedWalletIndex] || { currency: '' }).currency;\n        let confirmationAddress = '';\n        let selectedWalletPrecision = DEFAULT_CCY_PRECISION;\n\n        if (wallets[selectedWalletIndex]) {\n            selectedWalletPrecision = wallets[selectedWalletIndex].fixed;\n            confirmationAddress = wallets[selectedWalletIndex].type === 'fiat' ? (\n                beneficiary.name\n            ) : (\n                beneficiary.data ? (beneficiary.data.address as string) : ''\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {wallets.length && <EstimatedValue wallets={wallets} />}\n                <div className=\"pg-container pg-wallet\">\n                    <div className=\"text-center\">\n                        {walletsLoading && <Spinner animation=\"border\" variant=\"primary\" />}\n                    </div>\n                    <div className={`row no-gutters pg-wallet__tabs-content ${!historyList.length && 'pg-wallet__tabs-content-height'}`}>\n                        <div className={`col-md-5 col-sm-12 col-12 ${mobileWalletChosen && 'd-none d-md-block'}`}>\n                            <WalletList\n                                onWalletSelectionChange={this.onWalletSelectionChange}\n                                walletItems={filteredWallets || formattedWallets}\n                                activeIndex={this.state.activeIndex}\n                                onActiveIndexChange={this.onActiveIndexChange}\n                            />\n                        </div>\n                        <div className={`pg-wallet__tabs col-md-7 col-sm-12 col-12 ${!mobileWalletChosen && 'd-none d-md-block'}`}>\n                            <TabPanel\n                                panels={this.renderTabs()}\n                                onTabChange={(_, label) => this.onTabChange(label)}\n                                currentTabIndex={currentTabIndex}\n                                onCurrentTabChange={this.onCurrentTabChange}\n                            />\n                        </div>\n                    </div>\n                    <ModalWithdrawSubmit\n                        show={withdrawSubmitModal}\n                        currency={selectedCurrency}\n                        onSubmit={this.toggleSubmitModal}\n                    />\n                    <ModalWithdrawConfirmation\n                        show={withdrawConfirmModal}\n                        amount={total}\n                        currency={selectedCurrency}\n                        rid={confirmationAddress}\n                        onSubmit={this.handleWithdraw}\n                        onDismiss={this.toggleConfirmModal}\n                        precision={selectedWalletPrecision}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    private onTabChange = label => this.setState({ tab: label });\n    private onActiveIndexChange = index => this.setState({ activeIndex: index });\n    private onCurrentTabChange = index => this.setState({ currentTabIndex: index });\n\n    private toggleSubmitModal = () => {\n        this.setState((state: WalletsState) => ({\n            withdrawSubmitModal: !state.withdrawSubmitModal,\n            withdrawDone: true,\n        }));\n    };\n\n    private toggleConfirmModal = (amount?: string, total?: string, beneficiary?: Beneficiary, otpCode?: string) => {\n        this.setState((state: WalletsState) => ({\n            amount: amount || '',\n            beneficiary: beneficiary ? beneficiary : defaultBeneficiary,\n            otpCode: otpCode ? otpCode : '',\n            withdrawConfirmModal: !state.withdrawConfirmModal,\n            total: total || '',\n            withdrawDone: false,\n        }));\n    };\n\n    private renderTabs() {\n        const { tab, selectedWalletIndex } = this.state;\n        const { wallets } = this.props;\n\n        if (selectedWalletIndex === -1) {\n            return [{ content: null, label: '' }];\n        }\n\n        const showWithdraw = wallets[selectedWalletIndex].type === 'fiat' || wallets[selectedWalletIndex].balance;\n\n        return [\n            {\n                content: tab === this.translate('page.body.wallets.tabs.deposit') ? this.renderDeposit(!!showWithdraw) : null,\n                label: this.translate('page.body.wallets.tabs.deposit'),\n            },\n            {\n                content: tab === this.translate('page.body.wallets.tabs.withdraw') ? this.renderWithdraw() : null,\n                label: this.translate('page.body.wallets.tabs.withdraw'),\n                disabled: !showWithdraw,\n            },\n        ];\n    }\n\n    private handleWithdraw = () => {\n        const { selectedWalletIndex, otpCode, amount, beneficiary } = this.state;\n        if (selectedWalletIndex === -1) {\n            return;\n        }\n\n        const { currency } = this.props.wallets[selectedWalletIndex];\n        const withdrawRequest = {\n            amount,\n            currency: currency.toLowerCase(),\n            otp: otpCode,\n            beneficiary_id: String(beneficiary.id),\n        };\n        this.props.walletsWithdrawCcy(withdrawRequest);\n        this.toggleConfirmModal();\n    };\n\n    private handleOnCopy = () => {\n        this.props.fetchSuccess({ message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success'});\n    };\n\n    private handleGenerateAddress = () => {\n        const { selectedWalletIndex } = this.state;\n        const { wallets } = this.props;\n\n        const wallet: Wallet = wallets[selectedWalletIndex] || defaultWallet;\n\n        if (!wallet.deposit_address && wallets.length && wallet.type !== 'fiat') {\n            this.props.fetchAddress({ currency: wallets[selectedWalletIndex].currency });\n        }\n    };\n\n    private renderDeposit = (isAccountActivated: boolean) => {\n        const {\n            currencies,\n            user,\n            wallets,\n        } = this.props;\n        const { selectedWalletIndex } = this.state;\n        const wallet: Wallet = (wallets[selectedWalletIndex] || defaultWallet);\n        const currencyItem = (currencies && currencies.find(item => item.id === wallet.currency)) || { min_confirmations: 6, deposit_enabled: false };\n        const text = this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.submit' },\n                                                   { confirmations: currencyItem.min_confirmations });\n        const error = this.props.intl.formatMessage({id: 'page.body.wallets.tabs.deposit.ccy.message.pending'});\n\n        const blurCryptoClassName = classnames('pg-blur-deposit-crypto', {\n            'pg-blur-deposit-crypto--active': isAccountActivated,\n        });\n\n        const buttonLabel = `${this.translate('page.body.wallets.tabs.deposit.ccy.button.generate')} ${wallet.currency.toUpperCase()} ${this.translate('page.body.wallets.tabs.deposit.ccy.button.address')}`;\n\n        if (wallets[selectedWalletIndex].type === 'coin') {\n            return (\n                <React.Fragment>\n                    <CurrencyInfo wallet={wallets[selectedWalletIndex]}/>\n                    {currencyItem && !currencyItem.deposit_enabled ? (\n                        <Blur\n                            className={blurCryptoClassName}\n                            text={this.translate('page.body.wallets.tabs.deposit.disabled.message')}\n                        />\n                    ) : null}\n                    <DepositCrypto\n                        buttonLabel={buttonLabel}\n                        copiableTextFieldText={this.translate('page.body.wallets.tabs.deposit.ccy.message.address')}\n                        copyButtonText={this.translate('page.body.wallets.tabs.deposit.ccy.message.button')}\n                        error={error}\n                        handleGenerateAddress={this.handleGenerateAddress}\n                        handleOnCopy={this.handleOnCopy}\n                        text={text}\n                        wallet={wallet}\n                    />\n                    {wallet.currency && <WalletHistory label=\"deposit\" type=\"deposits\" currency={wallet.currency} />}\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <CurrencyInfo wallet={wallets[selectedWalletIndex]}/>\n                    {currencyItem && !currencyItem.deposit_enabled ? (\n                        <Blur\n                            className=\"pg-blur-deposit-fiat\"\n                            text={this.translate('page.body.wallets.tabs.deposit.disabled.message')}\n                        />\n                    ) : null}\n                    <DepositFiat title={this.title} description={this.description} uid={user ? user.uid : ''}/>\n                    {wallet.currency && <WalletHistory label=\"deposit\" type=\"deposits\" currency={wallet.currency} />}\n                </React.Fragment>\n            );\n        }\n    };\n\n    private renderWithdraw = () => {\n        const { currencies, user, wallets, walletsError } = this.props;\n        const { selectedWalletIndex } = this.state;\n        const wallet = (wallets[selectedWalletIndex] || defaultWallet);\n        const currencyItem = (currencies && currencies.find(item => item.id === wallet.currency));\n\n        return (\n            <React.Fragment>\n                <CurrencyInfo wallet={wallets[selectedWalletIndex]}/>\n                {walletsError && <p className=\"pg-wallet__error\">{walletsError.message}</p>}\n                {currencyItem && !currencyItem.withdrawal_enabled ? (\n                    <Blur\n                        className=\"pg-blur-withdraw\"\n                        text={this.translate('page.body.wallets.tabs.withdraw.disabled.message')}\n                    />\n                ) : null}\n                {this.renderWithdrawContent()}\n                {user.otp && wallet.currency && <WalletHistory label=\"withdraw\" type=\"withdraws\" currency={wallet.currency} />}\n            </React.Fragment>\n        );\n    };\n\n    private renderWithdrawContent = () => {\n        const { withdrawDone, selectedWalletIndex } = this.state;\n\n        if (selectedWalletIndex === -1) {\n            return [{ content: null, label: '' }];\n        }\n        const { user: { level, otp }, wallets } = this.props;\n        const wallet = wallets[selectedWalletIndex];\n        const { currency, fee, type } = wallet;\n        const fixed = (wallet || { fixed: 0 }).fixed;\n\n        const withdrawProps: WithdrawProps = {\n            withdrawDone,\n            currency,\n            fee,\n            onClick: this.toggleConfirmModal,\n            twoFactorAuthRequired: this.isTwoFactorAuthRequired(level, otp),\n            fixed,\n            type,\n            withdrawAmountLabel: this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.amount' }),\n            withdraw2faLabel: this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.code2fa' }),\n            withdrawFeeLabel: this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.fee' }),\n            withdrawTotalLabel: this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.total' }),\n            withdrawButtonLabel: this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.button' }),\n        };\n\n        return otp ? <Withdraw {...withdrawProps} /> : this.isOtpDisabled();\n    };\n\n\n    private isOtpDisabled = () => {\n        return (\n            <React.Fragment>\n                <p className=\"pg-wallet__enable-2fa-message\">\n                    {this.translate('page.body.wallets.tabs.withdraw.content.enable2fa')}\n                </p>\n                <Button\n                    block={true}\n                    onClick={this.redirectToEnable2fa}\n                    size=\"lg\"\n                    variant=\"primary\"\n                >\n                    {this.translate('page.body.wallets.tabs.withdraw.content.enable2faButton')}\n                </Button>\n            </React.Fragment>\n        );\n    };\n\n    private redirectToEnable2fa = () => this.props.history.push('/security/2fa', { enable2fa: true });\n\n    private isTwoFactorAuthRequired(level: number, is2faEnabled: boolean) {\n        return level > 1 || (level === 1 && is2faEnabled);\n    }\n\n    private onWalletSelectionChange = (value: Wallet) => {\n        const { wallets } = this.props;\n\n        const nextWalletIndex = this.props.wallets.findIndex(\n            wallet => wallet.currency.toLowerCase() === value.currency.toLowerCase()\n        );\n\n        this.setState({\n            selectedWalletIndex: nextWalletIndex,\n            withdrawDone: false,\n        });\n\n        this.props.fetchBeneficiaries({ currency_id: value.currency.toLowerCase() });\n        this.props.setMobileWalletUi(wallets[nextWalletIndex].name);\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    user: selectUserInfo(state),\n    wallets: selectWallets(state),\n    walletsLoading: selectWalletsLoading(state),\n    withdrawSuccess: selectWithdrawSuccess(state),\n    historyList: selectHistory(state),\n    mobileWalletChosen: selectMobileWalletUi(state),\n    beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n    beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n    currencies: selectCurrencies(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n    fetchWallets: () => dispatch(walletsFetch()),\n    fetchAddress: ({ currency }) => dispatch(walletsAddressFetch({ currency })),\n    walletsWithdrawCcy: params => dispatch(walletsWithdrawCcyFetch(params)),\n    clearWallets: () => dispatch(walletsData([])),\n    fetchSuccess: payload => dispatch(alertPush(payload)),\n    setMobileWalletUi: payload => dispatch(setMobileWalletUi(payload)),\n    currenciesFetch: () => dispatch(currenciesFetch()),\n});\n\nexport const WalletsScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(WalletsComponent) as React.ComponentClass;\n"],"mappings":";;;;;;;AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,OAAO,QAAQ,iBAAiB;AACjD,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,OAAO,QAA4B,aAAa;AAEzD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,OAAO;AAE/B,SACIC,IAAI,EACJC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,QAAQ,EACRC,UAAU,QACP,kBAAkB;AACzB,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,QAAQ,QAAuB,kBAAkB;AAC1D,SAASC,yBAAyB,QAAQ,4CAA4C;AACtF,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,cAAc,QAAQ,yCAAyC;AACxE,SAASC,aAAa,QAAQ,kCAAkC;AAChE,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SACIC,SAAS,EACTC,kBAAkB,EAElBC,eAAe,IAAfA,gBAAe,EAGfC,kCAAkC,EAClCC,gCAAgC,EAChCC,gCAAgC,EAChCC,gBAAgB,EAChBC,aAAa,EACbC,oBAAoB,EACpBC,cAAc,EACdC,aAAa,EACbC,oBAAoB,EACpBC,qBAAqB,EACrBC,iBAAiB,IAAjBA,kBAAiB,EAIjBC,mBAAmB,EACnBC,WAAW,EACXC,YAAY,EACZC,uBAAuB,QACpB,eAAe;AA2BtB,IAAMC,kBAA+B,GAAG;EACpCC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE;IACFC,OAAO,EAAE;EACb;AACJ,CAAC;AAED,IAAMC,aAAqB,GAAG;EAC1BJ,IAAI,EAAE,EAAE;EACRD,QAAQ,EAAE,EAAE;EACZM,OAAO,EAAE,EAAE;EACXC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,CAAC;EACRC,GAAG,EAAE;AACT,CAAC;AAAC,IA0BIC,gBAAgB;EAAA;EAAA;EAClB,0BAAYC,KAAY,EAAE;IAAA;IAAA;IACtB,0BAAMA,KAAK;IAAE,MAkBVC,SAAS,GAAG,UAACb,EAAU;MAAA,OAAK,MAAKY,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;QAAEf,EAAE,EAAFA;MAAG,CAAC,CAAC;IAAA;IAAA,MAEhEgB,KAAK,GAAG,MAAKH,SAAS,CAAC,8CAA8C,CAAC;IAAA,MACtEI,WAAW,GAAG,MAAKJ,SAAS,CAAC,8CAA8C,CAAC;IAAA,MA8H5EK,WAAW,GAAG,UAAAC,KAAK;MAAA,OAAI,MAAKC,QAAQ,CAAC;QAAEC,GAAG,EAAEF;MAAM,CAAC,CAAC;IAAA;IAAA,MACpDG,mBAAmB,GAAG,UAAAC,KAAK;MAAA,OAAI,MAAKH,QAAQ,CAAC;QAAEI,WAAW,EAAED;MAAM,CAAC,CAAC;IAAA;IAAA,MACpEE,kBAAkB,GAAG,UAAAF,KAAK;MAAA,OAAI,MAAKH,QAAQ,CAAC;QAAEM,eAAe,EAAEH;MAAM,CAAC,CAAC;IAAA;IAAA,MAEvEI,iBAAiB,GAAG,YAAM;MAC9B,MAAKP,QAAQ,CAAC,UAACjB,KAAmB;QAAA,OAAM;UACpCyB,mBAAmB,EAAE,CAACzB,KAAK,CAACyB,mBAAmB;UAC/CC,YAAY,EAAE;QAClB,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IAAA,MAEOC,kBAAkB,GAAG,UAACC,MAAe,EAAEC,KAAc,EAAEC,WAAyB,EAAEC,OAAgB,EAAK;MAC3G,MAAKd,QAAQ,CAAC,UAACjB,KAAmB;QAAA,OAAM;UACpC4B,MAAM,EAAEA,MAAM,IAAI,EAAE;UACpBE,WAAW,EAAEA,WAAW,GAAGA,WAAW,GAAGlC,kBAAkB;UAC3DmC,OAAO,EAAEA,OAAO,GAAGA,OAAO,GAAG,EAAE;UAC/BC,oBAAoB,EAAE,CAAChC,KAAK,CAACgC,oBAAoB;UACjDH,KAAK,EAAEA,KAAK,IAAI,EAAE;UAClBH,YAAY,EAAE;QAClB,CAAC;MAAA,CAAC,CAAC;IACP,CAAC;IAAA,MAyBOO,cAAc,GAAG,YAAM;MAC3B,kBAA8D,MAAKjC,KAAK;QAAhEkC,mBAAmB,eAAnBA,mBAAmB;QAAEH,OAAO,eAAPA,OAAO;QAAEH,MAAM,eAANA,MAAM;QAAEE,WAAW,eAAXA,WAAW;MACzD,IAAII,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC5B;MACJ;MAEA,IAAQpC,QAAQ,GAAK,MAAKW,KAAK,CAAC0B,OAAO,CAACD,mBAAmB,CAAC,CAApDpC,QAAQ;MAChB,IAAMsC,eAAe,GAAG;QACpBR,MAAM,EAANA,MAAM;QACN9B,QAAQ,EAAEA,QAAQ,CAACuC,WAAW,EAAE;QAChCC,GAAG,EAAEP,OAAO;QACZQ,cAAc,EAAEC,MAAM,CAACV,WAAW,CAACjC,EAAE;MACzC,CAAC;MACD,MAAKY,KAAK,CAACgC,kBAAkB,CAACL,eAAe,CAAC;MAC9C,MAAKT,kBAAkB,EAAE;IAC7B,CAAC;IAAA,MAEOe,YAAY,GAAG,YAAM;MACzB,MAAKjC,KAAK,CAACkC,YAAY,CAAC;QAAEC,OAAO,EAAE,CAAC,oDAAoD,CAAC;QAAEvC,IAAI,EAAE;MAAS,CAAC,CAAC;IAChH,CAAC;IAAA,MAEOwC,qBAAqB,GAAG,YAAM;MAClC,IAAQX,mBAAmB,GAAK,MAAKlC,KAAK,CAAlCkC,mBAAmB;MAC3B,IAAQC,OAAO,GAAK,MAAK1B,KAAK,CAAtB0B,OAAO;MAEf,IAAMW,MAAc,GAAGX,OAAO,CAACD,mBAAmB,CAAC,IAAI/B,aAAa;MAEpE,IAAI,CAAC2C,MAAM,CAACC,eAAe,IAAIZ,OAAO,CAACa,MAAM,IAAIF,MAAM,CAACzC,IAAI,KAAK,MAAM,EAAE;QACrE,MAAKI,KAAK,CAACwC,YAAY,CAAC;UAAEnD,QAAQ,EAAEqC,OAAO,CAACD,mBAAmB,CAAC,CAACpC;QAAS,CAAC,CAAC;MAChF;IACJ,CAAC;IAAA,MAEOoD,aAAa,GAAG,UAACC,kBAA2B,EAAK;MACrD,kBAII,MAAK1C,KAAK;QAHV2C,UAAU,eAAVA,UAAU;QACVC,IAAI,eAAJA,IAAI;QACJlB,OAAO,eAAPA,OAAO;MAEX,IAAQD,mBAAmB,GAAK,MAAKlC,KAAK,CAAlCkC,mBAAmB;MAC3B,IAAMY,MAAc,GAAIX,OAAO,CAACD,mBAAmB,CAAC,IAAI/B,aAAc;MACtE,IAAMmD,YAAY,GAAIF,UAAU,IAAIA,UAAU,CAACG,IAAI,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAAC3D,EAAE,KAAKiD,MAAM,CAAChD,QAAQ;MAAA,EAAC,IAAK;QAAE2D,iBAAiB,EAAE,CAAC;QAAEC,eAAe,EAAE;MAAM,CAAC;MAC7I,IAAMC,IAAI,GAAG,MAAKlD,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;QAAEf,EAAE,EAAE;MAAoD,CAAC,EAC3D;QAAE+D,aAAa,EAAEN,YAAY,CAACG;MAAkB,CAAC,CAAC;MAC7F,IAAMI,KAAK,GAAG,MAAKpD,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;QAACf,EAAE,EAAE;MAAoD,CAAC,CAAC;MAEvG,IAAMiE,mBAAmB,GAAGzG,UAAU,CAAC,wBAAwB,EAAE;QAC7D,gCAAgC,EAAE8F;MACtC,CAAC,CAAC;MAEF,IAAMY,WAAW,aAAM,MAAKrD,SAAS,CAAC,oDAAoD,CAAC,cAAIoC,MAAM,CAAChD,QAAQ,CAACkE,WAAW,EAAE,cAAI,MAAKtD,SAAS,CAAC,mDAAmD,CAAC,CAAE;MAErM,IAAIyB,OAAO,CAACD,mBAAmB,CAAC,CAAC7B,IAAI,KAAK,MAAM,EAAE;QAC9C,oBACI,oBAAC,KAAK,CAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACX,oBAAC,YAAY;UAAC,MAAM,EAAE8B,OAAO,CAACD,mBAAmB,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAE,EACpDoB,YAAY,IAAI,CAACA,YAAY,CAACI,eAAe,gBAC1C,oBAAC,IAAI;UACD,SAAS,EAAEI,mBAAoB;UAC/B,IAAI,EAAE,MAAKpD,SAAS,CAAC,iDAAiD,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAC1E,GACF,IAAI,eACR,oBAAC,aAAa;UACV,WAAW,EAAEqD,WAAY;UACzB,qBAAqB,EAAE,MAAKrD,SAAS,CAAC,oDAAoD,CAAE;UAC5F,cAAc,EAAE,MAAKA,SAAS,CAAC,mDAAmD,CAAE;UACpF,KAAK,EAAEmD,KAAM;UACb,qBAAqB,EAAE,MAAKhB,qBAAsB;UAClD,YAAY,EAAE,MAAKH,YAAa;UAChC,IAAI,EAAEiB,IAAK;UACX,MAAM,EAAEb,MAAO;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EACjB,EACDA,MAAM,CAAChD,QAAQ,iBAAI,oBAAC,aAAa;UAAC,KAAK,EAAC,SAAS;UAAC,IAAI,EAAC,UAAU;UAAC,QAAQ,EAAEgD,MAAM,CAAChD,QAAS;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CACnF;MAEzB,CAAC,MAAM;QACH,oBACI,oBAAC,KAAK,CAAC,QAAQ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBACX,oBAAC,YAAY;UAAC,MAAM,EAAEqC,OAAO,CAACD,mBAAmB,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAE,EACpDoB,YAAY,IAAI,CAACA,YAAY,CAACI,eAAe,gBAC1C,oBAAC,IAAI;UACD,SAAS,EAAC,sBAAsB;UAChC,IAAI,EAAE,MAAKhD,SAAS,CAAC,iDAAiD,CAAE;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAC1E,GACF,IAAI,eACR,oBAAC,WAAW;UAAC,KAAK,EAAE,MAAKG,KAAM;UAAC,WAAW,EAAE,MAAKC,WAAY;UAAC,GAAG,EAAEuC,IAAI,GAAGA,IAAI,CAACY,GAAG,GAAG,EAAG;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAE,EAC1FnB,MAAM,CAAChD,QAAQ,iBAAI,oBAAC,aAAa;UAAC,KAAK,EAAC,SAAS;UAAC,IAAI,EAAC,UAAU;UAAC,QAAQ,EAAEgD,MAAM,CAAChD,QAAS;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAAG,CACnF;MAEzB;IACJ,CAAC;IAAA,MAEOoE,cAAc,GAAG,YAAM;MAC3B,mBAAoD,MAAKzD,KAAK;QAAtD2C,UAAU,gBAAVA,UAAU;QAAEC,IAAI,gBAAJA,IAAI;QAAElB,OAAO,gBAAPA,OAAO;QAAEgC,YAAY,gBAAZA,YAAY;MAC/C,IAAQjC,mBAAmB,GAAK,MAAKlC,KAAK,CAAlCkC,mBAAmB;MAC3B,IAAMY,MAAM,GAAIX,OAAO,CAACD,mBAAmB,CAAC,IAAI/B,aAAc;MAC9D,IAAMmD,YAAY,GAAIF,UAAU,IAAIA,UAAU,CAACG,IAAI,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAAC3D,EAAE,KAAKiD,MAAM,CAAChD,QAAQ;MAAA,EAAE;MAEzF,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACX,oBAAC,YAAY;QAAC,MAAM,EAAEqC,OAAO,CAACD,mBAAmB,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAE,EACpDiC,YAAY,iBAAI;QAAG,SAAS,EAAC,kBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEA,YAAY,CAACvB,OAAO,CAAK,EAC1EU,YAAY,IAAI,CAACA,YAAY,CAACc,kBAAkB,gBAC7C,oBAAC,IAAI;QACD,SAAS,EAAC,kBAAkB;QAC5B,IAAI,EAAE,MAAK1D,SAAS,CAAC,kDAAkD,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC3E,GACF,IAAI,EACP,MAAK2D,qBAAqB,EAAE,EAC5BhB,IAAI,CAACf,GAAG,IAAIQ,MAAM,CAAChD,QAAQ,iBAAI,oBAAC,aAAa;QAAC,KAAK,EAAC,UAAU;QAAC,IAAI,EAAC,WAAW;QAAC,QAAQ,EAAEgD,MAAM,CAAChD,QAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACjG;IAEzB,CAAC;IAAA,MAEOuE,qBAAqB,GAAG,YAAM;MAClC,mBAA8C,MAAKrE,KAAK;QAAhD0B,YAAY,gBAAZA,YAAY;QAAEQ,mBAAmB,gBAAnBA,mBAAmB;MAEzC,IAAIA,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC5B,OAAO,CAAC;UAAEoC,OAAO,EAAE,IAAI;UAAEtD,KAAK,EAAE;QAAG,CAAC,CAAC;MACzC;MACA,mBAA0C,MAAKP,KAAK;QAAA,iCAA5C4C,IAAI;QAAIkB,KAAK,qBAALA,KAAK;QAAEjC,GAAG,qBAAHA,GAAG;QAAIH,OAAO,gBAAPA,OAAO;MACrC,IAAMW,MAAM,GAAGX,OAAO,CAACD,mBAAmB,CAAC;MAC3C,IAAQpC,QAAQ,GAAgBgD,MAAM,CAA9BhD,QAAQ;QAAES,GAAG,GAAWuC,MAAM,CAApBvC,GAAG;QAAEF,IAAI,GAAKyC,MAAM,CAAfzC,IAAI;MAC3B,IAAMC,KAAK,GAAG,CAACwC,MAAM,IAAI;QAAExC,KAAK,EAAE;MAAE,CAAC,EAAEA,KAAK;MAE5C,IAAMkE,aAA4B,GAAG;QACjC9C,YAAY,EAAZA,YAAY;QACZ5B,QAAQ,EAARA,QAAQ;QACRS,GAAG,EAAHA,GAAG;QACHkE,OAAO,EAAE,MAAK9C,kBAAkB;QAChC+C,qBAAqB,EAAE,MAAKC,uBAAuB,CAACJ,KAAK,EAAEjC,GAAG,CAAC;QAC/DhC,KAAK,EAALA,KAAK;QACLD,IAAI,EAAJA,IAAI;QACJuE,mBAAmB,EAAE,MAAKnE,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;UAAEf,EAAE,EAAE;QAAiD,CAAC,CAAC;QAC5GgF,gBAAgB,EAAE,MAAKpE,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;UAAEf,EAAE,EAAE;QAAkD,CAAC,CAAC;QAC1GiF,gBAAgB,EAAE,MAAKrE,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;UAAEf,EAAE,EAAE;QAA8C,CAAC,CAAC;QACtGkF,kBAAkB,EAAE,MAAKtE,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;UAAEf,EAAE,EAAE;QAAgD,CAAC,CAAC;QAC1GmF,mBAAmB,EAAE,MAAKvE,KAAK,CAACE,IAAI,CAACC,aAAa,CAAC;UAAEf,EAAE,EAAE;QAAiD,CAAC;MAC/G,CAAC;MAED,OAAOyC,GAAG,gBAAG,oBAAC,QAAQ,oBAAKkC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,GAAG,MAAKS,aAAa,EAAE;IACvE,CAAC;IAAA,MAGOA,aAAa,GAAG,YAAM;MAC1B,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACX;QAAG,SAAS,EAAC,+BAA+B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvC,MAAKvE,SAAS,CAAC,mDAAmD,CAAC,CACpE,eACJ,oBAAC,MAAM;QACH,KAAK,EAAE,IAAK;QACZ,OAAO,EAAE,MAAKwE,mBAAoB;QAClC,IAAI,EAAC,IAAI;QACT,OAAO,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEhB,MAAKxE,SAAS,CAAC,yDAAyD,CAAC,CACrE,CACI;IAEzB,CAAC;IAAA,MAEOwE,mBAAmB,GAAG;MAAA,OAAM,MAAKzE,KAAK,CAAC0E,OAAO,CAACC,IAAI,CAAC,eAAe,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;IAAA;IAAA,MAMzFC,uBAAuB,GAAG,UAACC,KAAa,EAAK;MACjD,IAAQpD,OAAO,GAAK,MAAK1B,KAAK,CAAtB0B,OAAO;MAEf,IAAMqD,eAAe,GAAG,MAAK/E,KAAK,CAAC0B,OAAO,CAACsD,SAAS,CAChD,UAAA3C,MAAM;QAAA,OAAIA,MAAM,CAAChD,QAAQ,CAACuC,WAAW,EAAE,KAAKkD,KAAK,CAACzF,QAAQ,CAACuC,WAAW,EAAE;MAAA,EAC3E;MAED,MAAKpB,QAAQ,CAAC;QACViB,mBAAmB,EAAEsD,eAAe;QACpC9D,YAAY,EAAE;MAClB,CAAC,CAAC;MAEF,MAAKjB,KAAK,CAACiF,kBAAkB,CAAC;QAAEC,WAAW,EAAEJ,KAAK,CAACzF,QAAQ,CAACuC,WAAW;MAAG,CAAC,CAAC;MAC5E,MAAK5B,KAAK,CAAClB,iBAAiB,CAAC4C,OAAO,CAACqD,eAAe,CAAC,CAACzF,IAAI,CAAC;IAC/D,CAAC;IAnXG,MAAKC,KAAK,GAAG;MACTqB,WAAW,EAAE,CAAC;MACda,mBAAmB,EAAE,CAAC,CAAC;MACvBT,mBAAmB,EAAE,KAAK;MAC1BO,oBAAoB,EAAE,KAAK;MAC3BD,OAAO,EAAE,EAAE;MACXH,MAAM,EAAE,EAAE;MACVE,WAAW,EAAElC,kBAAkB;MAC/BsB,GAAG,EAAE,MAAKR,SAAS,CAAC,gCAAgC,CAAC;MACrDgB,YAAY,EAAE,KAAK;MACnBG,KAAK,EAAE,EAAE;MACTN,eAAe,EAAE;IACrB,CAAC;IAAC;EACN;;EAEA;EAAA;IAAA;IAAA,OAMA,6BAA2B;MACvB9C,gBAAgB,CAAC,SAAS,CAAC;MAC3B,IAAQ0D,OAAO,GAAK,IAAI,CAAC1B,KAAK,CAAtB0B,OAAO;MACf,IAAQD,mBAAmB,GAAK,IAAI,CAAClC,KAAK,CAAlCkC,mBAAmB;MAE3B,IAAI,IAAI,CAACzB,KAAK,CAAC0B,OAAO,CAACa,MAAM,KAAK,CAAC,EAAE;QACjC,IAAI,CAACvC,KAAK,CAACmF,YAAY,EAAE;MAC7B;MAEA,IAAI1D,mBAAmB,KAAK,CAAC,CAAC,IAAIC,OAAO,CAACa,MAAM,EAAE;QAAA;QAC9C,IAAI,CAAC/B,QAAQ,CAAC;UAAEiB,mBAAmB,EAAE;QAAE,CAAC,CAAC;QACzC,cAAAC,OAAO,CAAC,CAAC,CAAC,8CAAV,UAAYrC,QAAQ,KAAI,IAAI,CAACW,KAAK,CAACiF,kBAAkB,CAAC;UAAEC,WAAW,EAAExD,OAAO,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAACuC,WAAW;QAAG,CAAC,CAAC;MAC7G;MAEA,IAAI,CAAC,IAAI,CAAC5B,KAAK,CAAC2C,UAAU,CAACJ,MAAM,EAAE;QAC/B,IAAI,CAACvC,KAAK,CAAC7B,eAAe,EAAE;MAChC;IACJ;EAAC;IAAA;IAAA,OAED,gCAA8B;MAC1B,IAAI,CAAC6B,KAAK,CAACoF,YAAY,EAAE;IAC7B;EAAC;IAAA;IAAA,OAED,mCAAiCC,IAAW,EAAE;MAC1C,mBAMI,IAAI,CAACrF,KAAK;QALV0B,OAAO,gBAAPA,OAAO;QACP4D,4BAA4B,gBAA5BA,4BAA4B;QAC5BC,0BAA0B,gBAA1BA,0BAA0B;QAC1BC,eAAe,gBAAfA,eAAe;QACfC,uBAAuB,gBAAvBA,uBAAuB;MAE3B,IAAQhE,mBAAmB,GAAK,IAAI,CAAClC,KAAK,CAAlCkC,mBAAmB;MAE3B,IAAI,CAACC,OAAO,CAACa,MAAM,IAAI8C,IAAI,CAAC3D,OAAO,CAACa,MAAM,EAAE;QAAA;QACxC,IAAI,CAAC/B,QAAQ,CAAC;UAAEiB,mBAAmB,EAAE;QAAE,CAAC,CAAC;QACzC,mBAAA4D,IAAI,CAAC3D,OAAO,CAAC,CAAC,CAAC,mDAAf,eAAiBrC,QAAQ,KAAI,IAAI,CAACW,KAAK,CAACiF,kBAAkB,CAAC;UAAEC,WAAW,EAAGG,IAAI,CAAC3D,OAAO,CAAC,CAAC,CAAC,CAACrC,QAAQ,CAACuC,WAAW;QAAG,CAAC,CAAC;MACxH;MAEA,IAAI,CAAC4D,eAAe,IAAIH,IAAI,CAACG,eAAe,EAAE;QAC1C,IAAI,CAACzE,iBAAiB,EAAE;MAC5B;MAEA,IAAKsE,IAAI,CAACC,4BAA4B,IAAI,CAACA,4BAA4B,IAClED,IAAI,CAACE,0BAA0B,IAAI,CAACA,0BAA2B,IAC/DF,IAAI,CAACI,uBAAuB,IAAI,CAACA,uBAAwB,EAAE;QAC5D,IAAMC,gBAAgB,GAAG,CAACL,IAAI,CAAC3D,OAAO,CAACD,mBAAmB,CAAC,IAAI;UAAEpC,QAAQ,EAAE;QAAG,CAAC,EAAEA,QAAQ;QAEzF,IAAI,CAACW,KAAK,CAACiF,kBAAkB,CAAC;UAAEC,WAAW,EAAEQ,gBAAgB,CAAC9D,WAAW;QAAG,CAAC,CAAC;MAClF;IACJ;EAAC;IAAA;IAAA,OAED,kBAAgB;MAAA;MACZ,mBAAqE,IAAI,CAAC5B,KAAK;QAAvE0B,OAAO,gBAAPA,OAAO;QAAEiE,WAAW,gBAAXA,WAAW;QAAEC,kBAAkB,gBAAlBA,kBAAkB;QAAEC,cAAc,gBAAdA,cAAc;MAChE,mBAQI,IAAI,CAACtG,KAAK;QAPV8B,WAAW,gBAAXA,WAAW;QACXD,KAAK,gBAALA,KAAK;QACLK,mBAAmB,gBAAnBA,mBAAmB;QACnBqE,eAAe,gBAAfA,eAAe;QACf9E,mBAAmB,gBAAnBA,mBAAmB;QACnBO,oBAAoB,gBAApBA,oBAAoB;QACpBT,eAAe,gBAAfA,eAAe;MAEnB,IAAMiF,gBAAgB,GAAGrE,OAAO,CAACsE,GAAG,CAAC,UAAC3D,MAAc;QAAA,uCAC7CA,MAAM;UACThD,QAAQ,EAAEgD,MAAM,CAAChD,QAAQ,CAACkE,WAAW,EAAE;UACvC0C,OAAO,EAAE5D,MAAM,CAAC4D,OAAO,GAAG5D,MAAM,CAAC4D,OAAO,GAAG;QAAE;MAAA,CAC/C,CAAC;MACH,IAAMP,gBAAgB,GAAG,CAAChE,OAAO,CAACD,mBAAmB,CAAC,IAAI;QAAEpC,QAAQ,EAAE;MAAG,CAAC,EAAEA,QAAQ;MACpF,IAAI6G,mBAAmB,GAAG,EAAE;MAC5B,IAAIC,uBAAuB,GAAGzI,qBAAqB;MAEnD,IAAIgE,OAAO,CAACD,mBAAmB,CAAC,EAAE;QAC9B0E,uBAAuB,GAAGzE,OAAO,CAACD,mBAAmB,CAAC,CAAC5B,KAAK;QAC5DqG,mBAAmB,GAAGxE,OAAO,CAACD,mBAAmB,CAAC,CAAC7B,IAAI,KAAK,MAAM,GAC9DyB,WAAW,CAAC/B,IAAI,GAEhB+B,WAAW,CAAC7B,IAAI,GAAI6B,WAAW,CAAC7B,IAAI,CAACC,OAAO,GAAc,EAC7D;MACL;MAEA,oBACI,oBAAC,KAAK,CAAC,QAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACViC,OAAO,CAACa,MAAM,iBAAI,oBAAC,cAAc;QAAC,OAAO,EAAEb,OAAQ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eACvD;QAAK,SAAS,EAAC,wBAAwB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACnC;QAAK,SAAS,EAAC,aAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACvBmE,cAAc,iBAAI,oBAAC,OAAO;QAAC,SAAS,EAAC,QAAQ;QAAC,OAAO,EAAC,SAAS;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CACjE,eACN;QAAK,SAAS,mDAA4C,CAACF,WAAW,CAACpD,MAAM,IAAI,gCAAgC,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChH;QAAK,SAAS,sCAA+BqD,kBAAkB,IAAI,mBAAmB,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrF,oBAAC,UAAU;QACP,uBAAuB,EAAE,IAAI,CAACf,uBAAwB;QACtD,WAAW,EAAEiB,eAAe,IAAIC,gBAAiB;QACjD,WAAW,EAAE,IAAI,CAACxG,KAAK,CAACqB,WAAY;QACpC,mBAAmB,EAAE,IAAI,CAACF,mBAAoB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChD,CACA,eACN;QAAK,SAAS,sDAA+C,CAACkF,kBAAkB,IAAI,mBAAmB,CAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACtG,oBAAC,QAAQ;QACL,MAAM,EAAE,IAAI,CAACQ,UAAU,EAAG;QAC1B,WAAW,EAAE,qBAACC,CAAC,EAAE9F,KAAK;UAAA,OAAK,MAAI,CAACD,WAAW,CAACC,KAAK,CAAC;QAAA,CAAC;QACnD,eAAe,EAAEO,eAAgB;QACjC,kBAAkB,EAAE,IAAI,CAACD,kBAAmB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC9C,CACA,CACJ,eACN,oBAAC,mBAAmB;QAChB,IAAI,EAAEG,mBAAoB;QAC1B,QAAQ,EAAE0E,gBAAiB;QAC3B,QAAQ,EAAE,IAAI,CAAC3E,iBAAkB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACnC,eACF,oBAAC,yBAAyB;QACtB,IAAI,EAAEQ,oBAAqB;QAC3B,MAAM,EAAEH,KAAM;QACd,QAAQ,EAAEsE,gBAAiB;QAC3B,GAAG,EAAEQ,mBAAoB;QACzB,QAAQ,EAAE,IAAI,CAAC1E,cAAe;QAC9B,SAAS,EAAE,IAAI,CAACN,kBAAmB;QACnC,SAAS,EAAEiF,uBAAwB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACrC,CACA,CACO;IAEzB;EAAC;IAAA;IAAA,OAwBD,sBAAqB;MACjB,mBAAqC,IAAI,CAAC5G,KAAK;QAAvCkB,GAAG,gBAAHA,GAAG;QAAEgB,mBAAmB,gBAAnBA,mBAAmB;MAChC,IAAQC,OAAO,GAAK,IAAI,CAAC1B,KAAK,CAAtB0B,OAAO;MAEf,IAAID,mBAAmB,KAAK,CAAC,CAAC,EAAE;QAC5B,OAAO,CAAC;UAAEoC,OAAO,EAAE,IAAI;UAAEtD,KAAK,EAAE;QAAG,CAAC,CAAC;MACzC;MAEA,IAAM+F,YAAY,GAAG5E,OAAO,CAACD,mBAAmB,CAAC,CAAC7B,IAAI,KAAK,MAAM,IAAI8B,OAAO,CAACD,mBAAmB,CAAC,CAAC9B,OAAO;MAEzG,OAAO,CACH;QACIkE,OAAO,EAAEpD,GAAG,KAAK,IAAI,CAACR,SAAS,CAAC,gCAAgC,CAAC,GAAG,IAAI,CAACwC,aAAa,CAAC,CAAC,CAAC6D,YAAY,CAAC,GAAG,IAAI;QAC7G/F,KAAK,EAAE,IAAI,CAACN,SAAS,CAAC,gCAAgC;MAC1D,CAAC,EACD;QACI4D,OAAO,EAAEpD,GAAG,KAAK,IAAI,CAACR,SAAS,CAAC,iCAAiC,CAAC,GAAG,IAAI,CAACwD,cAAc,EAAE,GAAG,IAAI;QACjGlD,KAAK,EAAE,IAAI,CAACN,SAAS,CAAC,iCAAiC,CAAC;QACxDsG,QAAQ,EAAE,CAACD;MACf,CAAC,CACJ;IACL;EAAC;IAAA;IAAA,OAqKD,iCAAgCxC,KAAa,EAAE0C,YAAqB,EAAE;MAClE,OAAO1C,KAAK,GAAG,CAAC,IAAKA,KAAK,KAAK,CAAC,IAAI0C,YAAa;IACrD;EAAC;EAAA;AAAA,EAvW0B3J,KAAK,CAAC4J,SAAS;AA0X9C,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAInH,KAAgB;EAAA,OAAkB;IACvDqD,IAAI,EAAElE,cAAc,CAACa,KAAK,CAAC;IAC3BmC,OAAO,EAAE/C,aAAa,CAACY,KAAK,CAAC;IAC7BsG,cAAc,EAAEjH,oBAAoB,CAACW,KAAK,CAAC;IAC3CiG,eAAe,EAAE3G,qBAAqB,CAACU,KAAK,CAAC;IAC7CoG,WAAW,EAAEnH,aAAa,CAACe,KAAK,CAAC;IACjCqG,kBAAkB,EAAEnH,oBAAoB,CAACc,KAAK,CAAC;IAC/C+F,4BAA4B,EAAElH,kCAAkC,CAACmB,KAAK,CAAC;IACvEgG,0BAA0B,EAAEjH,gCAAgC,CAACiB,KAAK,CAAC;IACnEoD,UAAU,EAAEpE,gBAAgB,CAACgB,KAAK,CAAC;IACnCkG,uBAAuB,EAAEpH,gCAAgC,CAACkB,KAAK;EACnE,CAAC;AAAA,CAAC;AAEF,IAAMoH,kBAAyD,GAAG,SAA5DA,kBAAyD,CAAGC,QAAQ;EAAA,OAAK;IAC3E3B,kBAAkB,EAAE,4BAAA4B,MAAM;MAAA,OAAID,QAAQ,CAAC1I,kBAAkB,CAAC2I,MAAM,CAAC,CAAC;IAAA;IAClE1B,YAAY,EAAE;MAAA,OAAMyB,QAAQ,CAAC3H,YAAY,EAAE,CAAC;IAAA;IAC5CuD,YAAY,EAAE;MAAA,IAAGnD,QAAQ,QAARA,QAAQ;MAAA,OAAOuH,QAAQ,CAAC7H,mBAAmB,CAAC;QAAEM,QAAQ,EAARA;MAAS,CAAC,CAAC,CAAC;IAAA;IAC3E2C,kBAAkB,EAAE,4BAAA6E,MAAM;MAAA,OAAID,QAAQ,CAAC1H,uBAAuB,CAAC2H,MAAM,CAAC,CAAC;IAAA;IACvEzB,YAAY,EAAE;MAAA,OAAMwB,QAAQ,CAAC5H,WAAW,CAAC,EAAE,CAAC,CAAC;IAAA;IAC7CkD,YAAY,EAAE,sBAAA4E,OAAO;MAAA,OAAIF,QAAQ,CAAC3I,SAAS,CAAC6I,OAAO,CAAC,CAAC;IAAA;IACrDhI,iBAAiB,EAAE,2BAAAgI,OAAO;MAAA,OAAIF,QAAQ,CAAC9H,kBAAiB,CAACgI,OAAO,CAAC,CAAC;IAAA;IAClE3I,eAAe,EAAE;MAAA,OAAMyI,QAAQ,CAACzI,gBAAe,EAAE,CAAC;IAAA;EACtD,CAAC;AAAA,CAAC;AAEF,OAAO,IAAM4I,aAAa,GAAG5J,OAAO,CAChCH,UAAU,EACVE,UAAU,EACVD,OAAO,CAACyJ,eAAe,EAAEC,kBAAkB,CAAC,CAC/C,CAAC5G,gBAAgB,CAAyB"},"metadata":{},"sourceType":"module"}