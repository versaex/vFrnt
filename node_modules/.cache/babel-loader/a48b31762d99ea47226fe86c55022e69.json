{"ast":null,"code":"/**\n * IE11-safe version of getCanonicalLocales since it's ES2016\n * @param locales locales\n */\nexport function getCanonicalLocales(locales) {\n  // IE11\n  var getCanonicalLocales = Intl.getCanonicalLocales;\n  if (typeof getCanonicalLocales === 'function') {\n    return getCanonicalLocales(locales);\n  }\n  // NOTE: we must NOT call `supportedLocalesOf` of a formatjs polyfill, or their implementation\n  // will even eventually call this method recursively. Here we use `Intl.DateTimeFormat` since it\n  // is not polyfilled by `@formatjs`.\n  // TODO: Fix TypeScript type def for this bc undefined is just fine\n  return Intl.DateTimeFormat.supportedLocalesOf(locales);\n}","map":{"version":3,"sources":["../src/get-canonical-locales.ts"],"names":[],"mappings":"AAAA;;;AAGG;AACH,OAAM,SAAU,mBAAmB,CAAC,OAA2B,EAAA;EAC7D;EACO,IAAA,mBAAA,GAAA,IAAA,CAAA,mBAAmB;EAC1B,IAAI,OAAO,mBAAmB,KAAK,UAAU,EAAE;IAC7C,OAAO,mBAAmB,CAAC,OAAO,CAAa;EAChD;EACD;EACA;EACA;EACA;EACA,OAAO,IAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,OAAQ,CAAC;AACzD","sourceRoot":"","sourcesContent":["/**\n * IE11-safe version of getCanonicalLocales since it's ES2016\n * @param locales locales\n */\nexport function getCanonicalLocales(locales) {\n    // IE11\n    var getCanonicalLocales = Intl.getCanonicalLocales;\n    if (typeof getCanonicalLocales === 'function') {\n        return getCanonicalLocales(locales);\n    }\n    // NOTE: we must NOT call `supportedLocalesOf` of a formatjs polyfill, or their implementation\n    // will even eventually call this method recursively. Here we use `Intl.DateTimeFormat` since it\n    // is not polyfilled by `@formatjs`.\n    // TODO: Fix TypeScript type def for this bc undefined is just fine\n    return Intl.DateTimeFormat.supportedLocalesOf(locales);\n}\n//# sourceMappingURL=get-canonical-locales.js.map"]},"metadata":{},"sourceType":"module"}