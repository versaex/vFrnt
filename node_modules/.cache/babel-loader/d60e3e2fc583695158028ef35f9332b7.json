{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar $ = require('../../util/preconditions');\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\nvar BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function (publicKey) {\n    return publicKey.toString('hex');\n  });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script), 'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function (publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\nMultiSigScriptHashInput.prototype.toObject = function () {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function (publicKey) {\n    return publicKey.toString();\n  });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\nMultiSigScriptHashInput.prototype._deserializeSignatures = function (signatures) {\n  return _.map(signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\nMultiSigScriptHashInput.prototype._serializeSignatures = function () {\n  return _.map(this.signatures, function (signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\nMultiSigScriptHashInput.prototype.getSignatures = function (transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL | Signature.SIGHASH_FORKID;\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function (publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, self.output.satoshisBN),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\nMultiSigScriptHashInput.prototype.addSignature = function (transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]), 'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\nMultiSigScriptHashInput.prototype._updateScript = function () {\n  this.setScript(Script.buildP2SHMultisigIn(this.publicKeys, this.threshold, this._createSignatures(), {\n    cachedMultisig: this.redeemScript\n  }));\n  return this;\n};\nMultiSigScriptHashInput.prototype._createSignatures = function () {\n  return _.map(_.filter(this.signatures, function (signature) {\n    return !_.isUndefined(signature);\n  }), function (signature) {\n    return BufferUtil.concat([signature.signature.toDER(), BufferUtil.integerAsSingleByteBuffer(signature.sigtype)]);\n  });\n};\nMultiSigScriptHashInput.prototype.clearSignatures = function () {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\nMultiSigScriptHashInput.prototype.isFullySigned = function () {\n  return this.countSignatures() === this.threshold;\n};\nMultiSigScriptHashInput.prototype.countMissingSignatures = function () {\n  return this.threshold - this.countSignatures();\n};\nMultiSigScriptHashInput.prototype.countSignatures = function () {\n  return _.reduce(this.signatures, function (sum, signature) {\n    return sum + !!signature;\n  }, 0);\n};\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function () {\n  var self = this;\n  return _.filter(this.publicKeys, function (publicKey) {\n    return !self.signatures[self.publicKeyIndex[publicKey.toString()]];\n  });\n};\nMultiSigScriptHashInput.prototype.isValidSignature = function (transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(transaction, signature.signature, signature.publicKey, signature.inputIndex, this.redeemScript, this.output.satoshisBN);\n};\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function () {\n  return MultiSigScriptHashInput.OPCODES_SIZE + this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE + this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\nmodule.exports = MultiSigScriptHashInput;","map":{"version":3,"names":["_","require","inherits","Input","Output","$","Script","Signature","Sighash","PublicKey","BufferUtil","TransactionSignature","MultiSigScriptHashInput","input","pubkeys","threshold","signatures","apply","arguments","self","publicKeys","sortBy","publicKey","toString","redeemScript","buildMultisigOut","checkState","buildScriptHashOut","equals","output","script","publicKeyIndex","each","index","_deserializeSignatures","Array","length","prototype","toObject","obj","map","_serializeSignatures","signature","undefined","getSignatures","transaction","privateKey","sigtype","SIGHASH_ALL","SIGHASH_FORKID","results","push","prevTxId","outputIndex","inputIndex","sign","satoshisBN","addSignature","isFullySigned","checkArgument","isUndefined","isValidSignature","_updateScript","setScript","buildP2SHMultisigIn","_createSignatures","cachedMultisig","filter","concat","toDER","integerAsSingleByteBuffer","clearSignatures","countSignatures","countMissingSignatures","reduce","sum","publicKeysWithoutSignature","nhashtype","verify","OPCODES_SIZE","SIGNATURE_SIZE","PUBKEY_SIZE","_estimateSize","module","exports"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/transaction/input/multisigscripthash.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\nvar BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures) {\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold);\n  $.checkState(Script.buildScriptHashOut(this.redeemScript).equals(this.output.script),\n               'Provided public keys don\\'t hash to the provided output');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || (Signature.SIGHASH_ALL |  Signature.SIGHASH_FORKID);\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, self.output.satoshisBN),\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature));\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  this.setScript(Script.buildP2SHMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures(),\n    { cachedMultisig: this.redeemScript }\n  ));\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript,\n      this.output.satoshisBN\n  );\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  return MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n};\n\nmodule.exports = MultiSigScriptHashInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}