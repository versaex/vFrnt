{"ast":null,"code":"export var truncateMiddle = function truncateMiddle(fullStr, strLen, sep) {\n  if (!fullStr || fullStr.length <= strLen) {\n    return fullStr;\n  }\n  var separator = sep || '...';\n  var charsToShow = strLen - separator.length;\n  var frontChars = Math.ceil(charsToShow / 2);\n  var backChars = Math.floor(charsToShow / 2);\n  return \"\".concat(fullStr.substr(0, frontChars)).concat(separator).concat(fullStr.substr(fullStr.length - backChars));\n};","map":{"version":3,"names":["truncateMiddle","fullStr","strLen","sep","length","separator","charsToShow","frontChars","Math","ceil","backChars","floor","substr"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/truncateMiddle.ts"],"sourcesContent":["export const truncateMiddle = (fullStr: string, strLen: number, sep?: string): string => {\n    if (!fullStr || fullStr.length <= strLen) { return fullStr; }\n    const separator = sep || '...';\n    const charsToShow = strLen - separator.length;\n    const frontChars = Math.ceil(charsToShow / 2);\n    const backChars = Math.floor(charsToShow / 2);\n\n    return `${fullStr.substr(0, frontChars)}${separator}${fullStr.substr(fullStr.length - backChars)}`;\n};\n"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAc,CAAIC,OAAe,EAAEC,MAAc,EAAEC,GAAY,EAAa;EACrF,IAAI,CAACF,OAAO,IAAIA,OAAO,CAACG,MAAM,IAAIF,MAAM,EAAE;IAAE,OAAOD,OAAO;EAAE;EAC5D,IAAMI,SAAS,GAAGF,GAAG,IAAI,KAAK;EAC9B,IAAMG,WAAW,GAAGJ,MAAM,GAAGG,SAAS,CAACD,MAAM;EAC7C,IAAMG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACH,WAAW,GAAG,CAAC,CAAC;EAC7C,IAAMI,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACL,WAAW,GAAG,CAAC,CAAC;EAE7C,iBAAUL,OAAO,CAACW,MAAM,CAAC,CAAC,EAAEL,UAAU,CAAC,SAAGF,SAAS,SAAGJ,OAAO,CAACW,MAAM,CAACX,OAAO,CAACG,MAAM,GAAGM,SAAS,CAAC;AACpG,CAAC"},"metadata":{},"sourceType":"module"}