{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\screens\\\\VerificationScreen\\\\index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport { languages } from '../../api';\nimport { changeLanguage as _changeLanguage, selectEmailVerified, verificationFetch } from '../../modules';\nexport var extractToken = function extractToken(props) {\n  return new URLSearchParams(props.location.search).get('confirmation_token');\n};\nexport var extractLang = function extractLang(props) {\n  return new URLSearchParams(props.location.search).get('lang');\n};\nvar Verification = /*#__PURE__*/function (_React$Component) {\n  _inherits(Verification, _React$Component);\n  var _super = _createSuper(Verification);\n  function Verification() {\n    _classCallCheck(this, Verification);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Verification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var token = extractToken(this.props);\n      var lang = extractLang(this.props);\n      if (token) {\n        this.props.verification({\n          token: token\n        });\n      }\n      if (lang && languages.includes(lang.toLowerCase())) {\n        this.props.changeLanguage(lang.toLowerCase());\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: '/signin',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n  return Verification;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isEmailVerified: selectEmailVerified(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    verification: function verification(data) {\n      return dispatch(verificationFetch(data));\n    },\n    changeLanguage: function changeLanguage(lang) {\n      return dispatch(_changeLanguage(lang));\n    }\n  };\n};\nexport var VerificationScreen = compose(injectIntl, connect(mapStateToProps, mapDispatchToProps))(Verification);","map":{"version":3,"names":["React","injectIntl","connect","Redirect","compose","languages","changeLanguage","selectEmailVerified","verificationFetch","extractToken","props","URLSearchParams","location","search","get","extractLang","Verification","token","lang","verification","includes","toLowerCase","Component","mapStateToProps","state","isEmailVerified","mapDispatchToProps","dispatch","data","VerificationScreen"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/screens/VerificationScreen/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n    MapStateToProps,\n} from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { languages } from '../../api';\nimport {\n    changeLanguage,\n    RootState,\n    selectEmailVerified,\n    verificationFetch,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface DispatchProps {\n    verification: typeof verificationFetch;\n    changeLanguage: typeof changeLanguage;\n}\n\ninterface ReduxProps {\n    isEmailVerified?: boolean;\n    error?: CommonError;\n}\n\nexport interface RouterProps {\n    location: {\n        search: string;\n    };\n}\n\ntype Props = DispatchProps & RouterProps & ReduxProps;\n\nexport const extractToken = (props: RouterProps) => new URLSearchParams(props.location.search).get('confirmation_token');\nexport const extractLang = (props: RouterProps) => new URLSearchParams(props.location.search).get('lang');\n\nclass Verification extends React.Component<Props, IntlProps> {\n    public componentDidMount() {\n        const token = extractToken(this.props);\n        const lang = extractLang(this.props);\n\n        if (token) {\n            this.props.verification({ token });\n        }\n\n        if (lang && languages.includes(lang.toLowerCase())) {\n            this.props.changeLanguage(lang.toLowerCase());\n        }\n    }\n\n    public render() {\n        return (\n            <Redirect to={'/signin'} />\n        );\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    isEmailVerified: selectEmailVerified(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        verification: data => dispatch(verificationFetch(data)),\n        changeLanguage: lang => dispatch(changeLanguage(lang)),\n    });\n\nexport const VerificationScreen = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Verification) as React.ComponentClass;\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,YAAY;AACvC,SACIC,OAAO,QAGJ,aAAa;AACpB,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,SAAS,QAAQ,WAAW;AACrC,SACIC,cAAc,IAAdA,eAAc,EAEdC,mBAAmB,EACnBC,iBAAiB,QACd,eAAe;AAqBtB,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAkB;EAAA,OAAK,IAAIC,eAAe,CAACD,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,oBAAoB,CAAC;AAAA;AACxH,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIL,KAAkB;EAAA,OAAK,IAAIC,eAAe,CAACD,KAAK,CAACE,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;AAAA;AAAC,IAEpGE,YAAY;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACd,6BAA2B;MACvB,IAAMC,KAAK,GAAGR,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC;MACtC,IAAMQ,IAAI,GAAGH,WAAW,CAAC,IAAI,CAACL,KAAK,CAAC;MAEpC,IAAIO,KAAK,EAAE;QACP,IAAI,CAACP,KAAK,CAACS,YAAY,CAAC;UAAEF,KAAK,EAALA;QAAM,CAAC,CAAC;MACtC;MAEA,IAAIC,IAAI,IAAIb,SAAS,CAACe,QAAQ,CAACF,IAAI,CAACG,WAAW,EAAE,CAAC,EAAE;QAChD,IAAI,CAACX,KAAK,CAACJ,cAAc,CAACY,IAAI,CAACG,WAAW,EAAE,CAAC;MACjD;IACJ;EAAC;IAAA;IAAA,OAED,kBAAgB;MACZ,oBACI,oBAAC,QAAQ;QAAC,EAAE,EAAE,SAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG;IAEnC;EAAC;EAAA;AAAA,EAlBsBrB,KAAK,CAACsB,SAAS;AAqB1C,IAAMC,eAA2D,GAAG,SAA9DA,eAA2D,CAAGC,KAAK;EAAA,OAAK;IAC1EC,eAAe,EAAElB,mBAAmB,CAACiB,KAAK;EAC9C,CAAC;AAAA,CAAC;AAEF,IAAME,kBAAiE,GACnE,SADEA,kBAAiE,CACnEC,QAAQ;EAAA,OAAK;IACTR,YAAY,EAAE,sBAAAS,IAAI;MAAA,OAAID,QAAQ,CAACnB,iBAAiB,CAACoB,IAAI,CAAC,CAAC;IAAA;IACvDtB,cAAc,EAAE,wBAAAY,IAAI;MAAA,OAAIS,QAAQ,CAACrB,eAAc,CAACY,IAAI,CAAC,CAAC;IAAA;EAC1D,CAAC;AAAA,CAAC;AAEN,OAAO,IAAMW,kBAAkB,GAAGzB,OAAO,CACrCH,UAAU,EACVC,OAAO,CAACqB,eAAe,EAAEG,kBAAkB,CAAC,CAC/C,CAACV,YAAY,CAAyB"},"metadata":{},"sourceType":"module"}