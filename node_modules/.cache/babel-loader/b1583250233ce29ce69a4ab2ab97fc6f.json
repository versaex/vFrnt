{"ast":null,"code":"import moment from 'moment-timezone';\nimport { getTimezone } from './timezone';\nexport var localeDate = function localeDate(date, format) {\n  var timezone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getTimezone();\n  var getFormat = function getFormat(type) {\n    return {\n      fullDate: 'DD-MM-YYYY HH:mm:ss',\n      shortDate: 'DD-MM-YYYY HH:mm',\n      time: 'HH:mm:ss'\n    }[type];\n  };\n  var formatDisplay = getFormat(format);\n  var isUnix = typeof date === 'number';\n  var momentObj = isUnix ? moment.unix(date) : moment(date);\n  return momentObj.tz(timezone).format(formatDisplay);\n};","map":{"version":3,"names":["moment","getTimezone","localeDate","date","format","timezone","getFormat","type","fullDate","shortDate","time","formatDisplay","isUnix","momentObj","unix","tz"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/localeDate.ts"],"sourcesContent":["import moment from 'moment-timezone';\nimport { getTimezone } from './timezone';\n\nexport const localeDate = (date, format, timezone = getTimezone()) => {\n    const getFormat = type => {\n        return {\n            fullDate: 'DD-MM-YYYY HH:mm:ss',\n            shortDate: 'DD-MM-YYYY HH:mm',\n            time: 'HH:mm:ss',\n          }[type];\n    };\n    const formatDisplay = getFormat(format);\n    const isUnix = typeof date === 'number';\n    const momentObj = isUnix ? moment.unix(date) : moment(date);\n\n    return momentObj.tz(timezone).format(formatDisplay);\n};\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI,EAAEC,MAAM,EAA+B;EAAA,IAA7BC,QAAQ,uEAAGJ,WAAW,EAAE;EAC7D,IAAMK,SAAS,GAAG,SAAZA,SAAS,CAAGC,IAAI,EAAI;IACtB,OAAO;MACHC,QAAQ,EAAE,qBAAqB;MAC/BC,SAAS,EAAE,kBAAkB;MAC7BC,IAAI,EAAE;IACR,CAAC,CAACH,IAAI,CAAC;EACb,CAAC;EACD,IAAMI,aAAa,GAAGL,SAAS,CAACF,MAAM,CAAC;EACvC,IAAMQ,MAAM,GAAG,OAAOT,IAAI,KAAK,QAAQ;EACvC,IAAMU,SAAS,GAAGD,MAAM,GAAGZ,MAAM,CAACc,IAAI,CAACX,IAAI,CAAC,GAAGH,MAAM,CAACG,IAAI,CAAC;EAE3D,OAAOU,SAAS,CAACE,EAAE,CAACV,QAAQ,CAAC,CAACD,MAAM,CAACO,aAAa,CAAC;AACvD,CAAC"},"metadata":{},"sourceType":"module"}