{"ast":null,"code":"import { filterProps, createError } from '../utils';\nvar LIST_FORMAT_OPTIONS = ['localeMatcher', 'type', 'style'];\nvar now = Date.now();\nfunction generateToken(i) {\n  return \"\".concat(now, \"_\").concat(i, \"_\").concat(now);\n}\nexport function formatList(_ref, getListFormat, values) {\n  var locale = _ref.locale,\n    onError = _ref.onError;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var ListFormat = Intl.ListFormat;\n  if (!ListFormat) {\n    onError(createError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\"));\n  }\n  var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n  try {\n    var richValues = {};\n    var serializedValues = values.map(function (v, i) {\n      if (typeof v === 'object') {\n        var id = generateToken(i);\n        richValues[id] = v;\n        return id;\n      }\n      return String(v);\n    });\n    if (!Object.keys(richValues).length) {\n      return getListFormat(locale, filteredOptions).format(serializedValues);\n    }\n    var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n    return parts.reduce(function (all, el) {\n      var val = el.value;\n      if (richValues[val]) {\n        all.push(richValues[val]);\n      } else if (typeof all[all.length - 1] === 'string') {\n        all[all.length - 1] += val;\n      } else {\n        all.push(val);\n      }\n      return all;\n    }, []);\n  } catch (e) {\n    onError(createError('Error formatting list.', e));\n  }\n  return values;\n}","map":{"version":3,"names":["filterProps","createError","LIST_FORMAT_OPTIONS","now","Date","generateToken","i","formatList","getListFormat","values","locale","onError","options","ListFormat","Intl","filteredOptions","richValues","serializedValues","map","v","id","String","Object","keys","length","format","parts","formatToParts","reduce","all","el","val","value","push","e"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/react-intl/lib/formatters/list.js"],"sourcesContent":["import { filterProps, createError } from '../utils';\nconst LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nconst now = Date.now();\nfunction generateToken(i) {\n    return `${now}_${i}_${now}`;\n}\nexport function formatList({ locale, onError }, getListFormat, values, options = {}) {\n    const ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(createError(`Intl.ListFormat is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-listformat\"\n`));\n    }\n    const filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        const richValues = {};\n        const serializedValues = values.map((v, i) => {\n            if (typeof v === 'object') {\n                const id = generateToken(i);\n                richValues[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        const parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce((all, el) => {\n            const val = el.value;\n            if (richValues[val]) {\n                all.push(richValues[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(createError('Error formatting list.', e));\n    }\n    return values;\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,UAAU;AACnD,IAAMC,mBAAmB,GAAG,CACxB,eAAe,EACf,MAAM,EACN,OAAO,CACV;AACD,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,EAAE;AACtB,SAASE,aAAa,CAACC,CAAC,EAAE;EACtB,iBAAUH,GAAG,cAAIG,CAAC,cAAIH,GAAG;AAC7B;AACA,OAAO,SAASI,UAAU,OAAsBC,aAAa,EAAEC,MAAM,EAAgB;EAAA,IAAxDC,MAAM,QAANA,MAAM;IAAEC,OAAO,QAAPA,OAAO;EAAA,IAA2BC,OAAO,uEAAG,CAAC,CAAC;EAC/E,IAAMC,UAAU,GAAGC,IAAI,CAACD,UAAU;EAClC,IAAI,CAACA,UAAU,EAAE;IACbF,OAAO,CAACV,WAAW,mHAEzB,CAAC;EACC;EACA,IAAMc,eAAe,GAAGf,WAAW,CAACY,OAAO,EAAEV,mBAAmB,CAAC;EACjE,IAAI;IACA,IAAMc,UAAU,GAAG,CAAC,CAAC;IACrB,IAAMC,gBAAgB,GAAGR,MAAM,CAACS,GAAG,CAAC,UAACC,CAAC,EAAEb,CAAC,EAAK;MAC1C,IAAI,OAAOa,CAAC,KAAK,QAAQ,EAAE;QACvB,IAAMC,EAAE,GAAGf,aAAa,CAACC,CAAC,CAAC;QAC3BU,UAAU,CAACI,EAAE,CAAC,GAAGD,CAAC;QAClB,OAAOC,EAAE;MACb;MACA,OAAOC,MAAM,CAACF,CAAC,CAAC;IACpB,CAAC,CAAC;IACF,IAAI,CAACG,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACQ,MAAM,EAAE;MACjC,OAAOhB,aAAa,CAACE,MAAM,EAAEK,eAAe,CAAC,CAACU,MAAM,CAACR,gBAAgB,CAAC;IAC1E;IACA,IAAMS,KAAK,GAAGlB,aAAa,CAACE,MAAM,EAAEK,eAAe,CAAC,CAACY,aAAa,CAACV,gBAAgB,CAAC;IACpF,OAAOS,KAAK,CAACE,MAAM,CAAC,UAACC,GAAG,EAAEC,EAAE,EAAK;MAC7B,IAAMC,GAAG,GAAGD,EAAE,CAACE,KAAK;MACpB,IAAIhB,UAAU,CAACe,GAAG,CAAC,EAAE;QACjBF,GAAG,CAACI,IAAI,CAACjB,UAAU,CAACe,GAAG,CAAC,CAAC;MAC7B,CAAC,MACI,IAAI,OAAOF,GAAG,CAACA,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC9CK,GAAG,CAACA,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC,IAAIO,GAAG;MAC9B,CAAC,MACI;QACDF,GAAG,CAACI,IAAI,CAACF,GAAG,CAAC;MACjB;MACA,OAAOF,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;EACV,CAAC,CACD,OAAOK,CAAC,EAAE;IACNvB,OAAO,CAACV,WAAW,CAAC,wBAAwB,EAAEiC,CAAC,CAAC,CAAC;EACrD;EACA,OAAOzB,MAAM;AACjB"},"metadata":{},"sourceType":"module"}