{"ast":null,"code":"'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\nvar assert = elliptic.utils.assert;\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n  Base.call(this, 'edwards', conf);\n  this.a = new bn(conf.a, 16).mod(this.red.m).toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA) return num.redNeg();else return this.a.redMul(num);\n};\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC) return num;else return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\nEdwardsCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y, curve.one);\n};\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity()) return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n  return lhs.cmp(rhs) === 0;\n};\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red) this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne) this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 && this.y.cmp(this.z) === 0;\n};\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended) return this._extDbl();else return this._projDbl();\n};\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity()) return p;\n  if (p.isInfinity()) return this;\n  if (this.curve.extended) return this._extAdd(p);else return this._projAdd(p);\n};\nPoint.prototype.mul = function mul(k) {\n  if (this.precomputed && this.precomputed.doubles) return this.curve._fixedNafMul(this, k);else return this.curve._wnafMul(this, k);\n};\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [this, p], [k1, k2], 2);\n};\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne) return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t) this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());\n};\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;","map":{"version":3,"names":["curve","require","elliptic","bn","inherits","Base","base","assert","utils","EdwardsCurve","conf","twisted","a","mOneA","extended","call","mod","red","m","toRed","c","c2","redSqr","d","dd","redAdd","fromRed","cmpn","oneC","module","exports","prototype","_mulA","num","redNeg","redMul","_mulC","jpoint","x","y","z","t","point","pointFromX","odd","x2","rhs","redSub","lhs","one","redInvm","redSqrt","isOdd","validate","isInfinity","normalize","y2","cmp","Point","BasePoint","zero","zOne","pointFromJSON","obj","fromJSON","inspect","toString","_extDbl","b","redIAdd","e","redISub","g","f","h","nx","ny","nt","nz","_projDbl","two","j","dbl","_extAdd","p","_projAdd","tmp","add","mul","k","precomputed","doubles","_fixedNafMul","_wnafMul","mulAdd","k1","k2","_wnafMulAdd","zi","neg","getX","getY","toP","mixedAdd"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/node_modules/elliptic/lib/elliptic/curve/edwards.js"],"sourcesContent":["'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new bn(conf.a, 16).mod(this.red.m).toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(odd, x) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y, curve.one);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}