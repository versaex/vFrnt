{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\OrderInput\\\\index.tsx\";\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../components';\nimport { areEqualProps } from '../../helpers/areEqualProps';\n/**\n * Input with cryptocurrency icon and label.\n */\n\nexport var OrderInput = React.memo(function (props) {\n  var className = props.className,\n    currency = props.currency,\n    handleChangeValue = props.handleChangeValue,\n    _handleFocusInput = props.handleFocusInput,\n    isFocused = props.isFocused,\n    isWrong = props.isWrong,\n    label = props.label,\n    onKeyPress = props.onKeyPress,\n    placeholder = props.placeholder,\n    value = props.value;\n  var cx = cr('cr-order-input', className);\n  var fieldsetFocusedClass = cr('cr-order-input__fieldset', {\n    'cr-order-input__fieldset--focused': isFocused,\n    'cr-order-input__fieldset--wrong': isWrong\n  });\n  var cryptoIconClass = cr('cr-order-input__crypto-icon', {\n    'cr-order-input__fieldset--focused': isFocused,\n    'cr-order-input__fieldset--wrong': isWrong\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: cx,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: fieldsetFocusedClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"number\",\n    inputValue: value,\n    placeholder: placeholder || '0',\n    handleChangeInput: handleChangeValue,\n    label: value && label ? label : '',\n    defaultLabel: value && label ? label : '',\n    onKeyPress: onKeyPress,\n    handleFocusInput: function handleFocusInput() {\n      return _handleFocusInput(props.label);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: cryptoIconClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, currency.toUpperCase()));\n}, areEqualProps);","map":{"version":3,"names":["cr","React","CustomInput","areEqualProps","OrderInput","memo","props","className","currency","handleChangeValue","handleFocusInput","isFocused","isWrong","label","onKeyPress","placeholder","value","cx","fieldsetFocusedClass","cryptoIconClass","toUpperCase"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/OrderInput/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../../components';\nimport {areEqualProps} from '../../helpers/areEqualProps';\n\nexport interface OrderInputProps {\n    /**\n     * Additional class name for styling. By default element receives `cr-input-block` class\n     * @default empty\n     */\n    className?: string;\n    /**\n     * Code of cryptocurrency\n     * @default empty\n     */\n    currency: string;\n    /**\n     * Checking if input focused\n     */\n    isFocused: boolean;\n    /**\n     * Checking if input wrong\n     */\n    isWrong?: boolean;\n    /**\n     * Label on the border\n     */\n    label?: string;\n    /**\n     * Placeholder on the border\n     */\n    placeholder?: string;\n    /**\n     * Value of Input component\n     */\n    value: string | number;\n    /**\n     * Function for getting value of input\n     * @default empty\n     */\n    handleChangeValue: (text: string) => void;\n    /**\n     * Function for handling input focus\n     */\n    handleFocusInput: (value?: string) => void;\n    /**\n     * Function for handling 'Enter' key\n     */\n    onKeyPress?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n}\n\n/**\n * Input with cryptocurrency icon and label.\n */\n\nexport const OrderInput: React.FunctionComponent<OrderInputProps> = React.memo((props: OrderInputProps) => {\n    const {\n        className,\n        currency,\n        handleChangeValue,\n        handleFocusInput,\n        isFocused,\n        isWrong,\n        label,\n        onKeyPress,\n        placeholder,\n        value,\n    } = props;\n    const cx = cr('cr-order-input', className);\n\n    const fieldsetFocusedClass = cr('cr-order-input__fieldset', {\n        'cr-order-input__fieldset--focused': isFocused,\n        'cr-order-input__fieldset--wrong': isWrong,\n    });\n\n    const cryptoIconClass = cr('cr-order-input__crypto-icon', {\n        'cr-order-input__fieldset--focused': isFocused,\n        'cr-order-input__fieldset--wrong': isWrong,\n    });\n\n    return (\n        <div className={cx}>\n            <fieldset className={fieldsetFocusedClass}>\n                <CustomInput\n                    type=\"number\"\n                    inputValue={value}\n                    placeholder={placeholder || '0'}\n                    handleChangeInput={handleChangeValue}\n                    label={value && label ? label : ''}\n                    defaultLabel={value && label ? label : ''}\n                    onKeyPress={onKeyPress}\n                    handleFocusInput={() => handleFocusInput(props.label)}\n                />\n            </fieldset>\n            <div className={cryptoIconClass}>\n                {currency.toUpperCase()}\n            </div>\n        </div>\n    );\n}, areEqualProps);\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,aAAa,QAAO,6BAA6B;AAgDzD;AACA;AACA;;AAEA,OAAO,IAAMC,UAAoD,GAAGH,KAAK,CAACI,IAAI,CAAC,UAACC,KAAsB,EAAK;EACvG,IACIC,SAAS,GAUTD,KAAK,CAVLC,SAAS;IACTC,QAAQ,GASRF,KAAK,CATLE,QAAQ;IACRC,iBAAiB,GAQjBH,KAAK,CARLG,iBAAiB;IACjBC,iBAAgB,GAOhBJ,KAAK,CAPLI,gBAAgB;IAChBC,SAAS,GAMTL,KAAK,CANLK,SAAS;IACTC,OAAO,GAKPN,KAAK,CALLM,OAAO;IACPC,KAAK,GAILP,KAAK,CAJLO,KAAK;IACLC,UAAU,GAGVR,KAAK,CAHLQ,UAAU;IACVC,WAAW,GAEXT,KAAK,CAFLS,WAAW;IACXC,KAAK,GACLV,KAAK,CADLU,KAAK;EAET,IAAMC,EAAE,GAAGjB,EAAE,CAAC,gBAAgB,EAAEO,SAAS,CAAC;EAE1C,IAAMW,oBAAoB,GAAGlB,EAAE,CAAC,0BAA0B,EAAE;IACxD,mCAAmC,EAAEW,SAAS;IAC9C,iCAAiC,EAAEC;EACvC,CAAC,CAAC;EAEF,IAAMO,eAAe,GAAGnB,EAAE,CAAC,6BAA6B,EAAE;IACtD,mCAAmC,EAAEW,SAAS;IAC9C,iCAAiC,EAAEC;EACvC,CAAC,CAAC;EAEF,oBACI;IAAK,SAAS,EAAEK,EAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACf;IAAU,SAAS,EAAEC,oBAAqB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACtC,oBAAC,WAAW;IACR,IAAI,EAAC,QAAQ;IACb,UAAU,EAAEF,KAAM;IAClB,WAAW,EAAED,WAAW,IAAI,GAAI;IAChC,iBAAiB,EAAEN,iBAAkB;IACrC,KAAK,EAAEO,KAAK,IAAIH,KAAK,GAAGA,KAAK,GAAG,EAAG;IACnC,YAAY,EAAEG,KAAK,IAAIH,KAAK,GAAGA,KAAK,GAAG,EAAG;IAC1C,UAAU,EAAEC,UAAW;IACvB,gBAAgB,EAAE;MAAA,OAAMJ,iBAAgB,CAACJ,KAAK,CAACO,KAAK,CAAC;IAAA,CAAC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACxD,CACK,eACX;IAAK,SAAS,EAAEM,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC3BX,QAAQ,CAACY,WAAW,EAAE,CACrB,CACJ;AAEd,CAAC,EAAEjB,aAAa,CAAC"},"metadata":{},"sourceType":"module"}