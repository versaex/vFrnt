{"ast":null,"code":"'use strict';\n\nvar errors = require('../errors');\nvar _ = require('lodash');\nmodule.exports = {\n  checkState: function checkState(condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function checkArgument(condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function checkArgumentType(argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var buffer = require('buffer'); // './buffer' fails on cordova & RN\n        if (!buffer.Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};","map":{"version":3,"names":["errors","require","_","module","exports","checkState","condition","message","InvalidState","checkArgument","argumentName","docsPath","InvalidArgument","checkArgumentType","argument","type","isString","buffer","Buffer","isBuffer","InvalidArgumentType","name"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/util/preconditions.js"],"sourcesContent":["'use strict';\n\nvar errors = require('../errors');\nvar _ = require('lodash');\n\nmodule.exports = {\n  checkState: function(condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function(condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function(argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var buffer = require('buffer'); // './buffer' fails on cordova & RN\n        if (!buffer.Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACjC,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAEzBE,MAAM,CAACC,OAAO,GAAG;EACfC,UAAU,EAAE,oBAASC,SAAS,EAAEC,OAAO,EAAE;IACvC,IAAI,CAACD,SAAS,EAAE;MACd,MAAM,IAAIN,MAAM,CAACQ,YAAY,CAACD,OAAO,CAAC;IACxC;EACF,CAAC;EACDE,aAAa,EAAE,uBAASH,SAAS,EAAEI,YAAY,EAAEH,OAAO,EAAEI,QAAQ,EAAE;IAClE,IAAI,CAACL,SAAS,EAAE;MACd,MAAM,IAAIN,MAAM,CAACY,eAAe,CAACF,YAAY,EAAEH,OAAO,EAAEI,QAAQ,CAAC;IACnE;EACF,CAAC;EACDE,iBAAiB,EAAE,2BAASC,QAAQ,EAAEC,IAAI,EAAEL,YAAY,EAAE;IACxDA,YAAY,GAAGA,YAAY,IAAI,gBAAgB;IAC/C,IAAIR,CAAC,CAACc,QAAQ,CAACD,IAAI,CAAC,EAAE;MACpB,IAAIA,IAAI,KAAK,QAAQ,EAAE;QACrB,IAAIE,MAAM,GAAGhB,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChC,IAAI,CAACgB,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACL,QAAQ,CAAC,EAAE;UACrC,MAAM,IAAId,MAAM,CAACoB,mBAAmB,CAACN,QAAQ,EAAEC,IAAI,EAAEL,YAAY,CAAC;QACpE;MACF,CAAC,MAAM,IAAI,OAAOI,QAAQ,KAAKC,IAAI,EAAE;QACnC,MAAM,IAAIf,MAAM,CAACoB,mBAAmB,CAACN,QAAQ,EAAEC,IAAI,EAAEL,YAAY,CAAC;MACpE;IACF,CAAC,MAAM;MACL,IAAI,EAAEI,QAAQ,YAAYC,IAAI,CAAC,EAAE;QAC/B,MAAM,IAAIf,MAAM,CAACoB,mBAAmB,CAACN,QAAQ,EAAEC,IAAI,CAACM,IAAI,EAAEX,YAAY,CAAC;MACzE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script"}