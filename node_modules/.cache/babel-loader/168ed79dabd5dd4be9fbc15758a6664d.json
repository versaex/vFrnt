{"ast":null,"code":"export var timeTo12HFormat = function timeTo12HFormat(timeInput) {\n  var time = timeInput.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [timeInput];\n  if (time.length > 1) {\n    time = time.slice(1);\n    time[5] = +time[0] < 12 ? 'AM' : 'PM';\n    time[0] = String(+time[0] % 12 || 12);\n  }\n  return \"\".concat(time[0]).concat(time[1]).concat(time[2], \" \").concat(time[5]);\n};\nexport var dateTo12HFormat = function dateTo12HFormat(value) {\n  var date = new Date(value).toUTCString().split(' ');\n  return \"\".concat(date[2], \" \").concat(date[1], \", \").concat(date[3], \" \").concat(timeTo12HFormat(date[4]));\n};","map":{"version":3,"names":["timeTo12HFormat","timeInput","time","toString","match","length","slice","String","dateTo12HFormat","value","date","Date","toUTCString","split"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/timeConvert.ts"],"sourcesContent":["export const timeTo12HFormat = (timeInput: string) => {\n    let time = timeInput.toString().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [timeInput];\n\n    if (time.length > 1) {\n        time = time.slice(1);\n        time[5] = +time[0] < 12 ? 'AM' : 'PM';\n        time[0] = String(+time[0] % 12 || 12);\n    }\n\n    return `${time[0]}${time[1]}${time[2]} ${time[5]}`;\n};\n\nexport const dateTo12HFormat = (value: string) => {\n    const date = new Date(value).toUTCString().split(' ');\n\n    return `${date[2]} ${date[1]}, ${date[3]} ${timeTo12HFormat(date[4])}`;\n};\n"],"mappings":"AAAA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAe,CAAIC,SAAiB,EAAK;EAClD,IAAIC,IAAI,GAAGD,SAAS,CAACE,QAAQ,EAAE,CAACC,KAAK,CAAE,0CAA0C,CAAC,IAAI,CAACH,SAAS,CAAC;EAEjG,IAAIC,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;IACjBH,IAAI,GAAGA,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;IACpBJ,IAAI,CAAC,CAAC,CAAC,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IACrCA,IAAI,CAAC,CAAC,CAAC,GAAGK,MAAM,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;EACzC;EAEA,iBAAUA,IAAI,CAAC,CAAC,CAAC,SAAGA,IAAI,CAAC,CAAC,CAAC,SAAGA,IAAI,CAAC,CAAC,CAAC,cAAIA,IAAI,CAAC,CAAC,CAAC;AACpD,CAAC;AAED,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAe,CAAIC,KAAa,EAAK;EAC9C,IAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,KAAK,CAAC,CAACG,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EAErD,iBAAUH,IAAI,CAAC,CAAC,CAAC,cAAIA,IAAI,CAAC,CAAC,CAAC,eAAKA,IAAI,CAAC,CAAC,CAAC,cAAIV,eAAe,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC"},"metadata":{},"sourceType":"module"}