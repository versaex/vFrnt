{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, additionPenalty, removalPenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-basicformatmatcher\n * @param options\n * @param formats\n */\nexport function BasicFormatMatcher(options, formats) {\n  var bestScore = -Infinity;\n  var bestFormat = formats[0];\n  invariant(Array.isArray(formats), 'formats should be a list of things');\n  for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n    var format = formats_1[_i];\n    var score = 0;\n    for (var _a = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _a < DATE_TIME_PROPS_1.length; _a++) {\n      var prop = DATE_TIME_PROPS_1[_a];\n      var optionsProp = options[prop];\n      var formatProp = format[prop];\n      if (optionsProp === undefined && formatProp !== undefined) {\n        score -= additionPenalty;\n      } else if (optionsProp !== undefined && formatProp === undefined) {\n        score -= removalPenalty;\n      } else if (optionsProp !== formatProp) {\n        var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n        var optionsPropIndex = values.indexOf(optionsProp);\n        var formatPropIndex = values.indexOf(formatProp);\n        var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n        if (delta === 2) {\n          score -= longMorePenalty;\n        } else if (delta === 1) {\n          score -= shortMorePenalty;\n        } else if (delta === -1) {\n          score -= shortLessPenalty;\n        } else if (delta === -2) {\n          score -= longLessPenalty;\n        }\n      }\n    }\n    if (score > bestScore) {\n      bestScore = score;\n      bestFormat = format;\n    }\n  }\n  return __assign({}, bestFormat);\n}","map":{"version":3,"names":["__assign","invariant","DATE_TIME_PROPS","additionPenalty","removalPenalty","longMorePenalty","shortMorePenalty","shortLessPenalty","longLessPenalty","BasicFormatMatcher","options","formats","bestScore","Infinity","bestFormat","Array","isArray","_i","formats_1","length","format","score","_a","DATE_TIME_PROPS_1","prop","optionsProp","formatProp","undefined","values","optionsPropIndex","indexOf","formatPropIndex","delta","Math","max","min"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/BasicFormatMatcher.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant } from '../utils';\nimport { DATE_TIME_PROPS, additionPenalty, removalPenalty, longMorePenalty, shortMorePenalty, shortLessPenalty, longLessPenalty, } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-basicformatmatcher\n * @param options\n * @param formats\n */\nexport function BasicFormatMatcher(options, formats) {\n    var bestScore = -Infinity;\n    var bestFormat = formats[0];\n    invariant(Array.isArray(formats), 'formats should be a list of things');\n    for (var _i = 0, formats_1 = formats; _i < formats_1.length; _i++) {\n        var format = formats_1[_i];\n        var score = 0;\n        for (var _a = 0, DATE_TIME_PROPS_1 = DATE_TIME_PROPS; _a < DATE_TIME_PROPS_1.length; _a++) {\n            var prop = DATE_TIME_PROPS_1[_a];\n            var optionsProp = options[prop];\n            var formatProp = format[prop];\n            if (optionsProp === undefined && formatProp !== undefined) {\n                score -= additionPenalty;\n            }\n            else if (optionsProp !== undefined && formatProp === undefined) {\n                score -= removalPenalty;\n            }\n            else if (optionsProp !== formatProp) {\n                var values = ['2-digit', 'numeric', 'narrow', 'short', 'long'];\n                var optionsPropIndex = values.indexOf(optionsProp);\n                var formatPropIndex = values.indexOf(formatProp);\n                var delta = Math.max(-2, Math.min(formatPropIndex - optionsPropIndex, 2));\n                if (delta === 2) {\n                    score -= longMorePenalty;\n                }\n                else if (delta === 1) {\n                    score -= shortMorePenalty;\n                }\n                else if (delta === -1) {\n                    score -= shortLessPenalty;\n                }\n                else if (delta === -2) {\n                    score -= longLessPenalty;\n                }\n            }\n        }\n        if (score > bestScore) {\n            bestScore = score;\n            bestFormat = format;\n        }\n    }\n    return __assign({}, bestFormat);\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,eAAe,EAAEC,eAAe,EAAEC,cAAc,EAAEC,eAAe,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,eAAe,QAAS,SAAS;AACjJ;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkB,CAACC,OAAO,EAAEC,OAAO,EAAE;EACjD,IAAIC,SAAS,GAAG,CAACC,QAAQ;EACzB,IAAIC,UAAU,GAAGH,OAAO,CAAC,CAAC,CAAC;EAC3BV,SAAS,CAACc,KAAK,CAACC,OAAO,CAACL,OAAO,CAAC,EAAE,oCAAoC,CAAC;EACvE,KAAK,IAAIM,EAAE,GAAG,CAAC,EAAEC,SAAS,GAAGP,OAAO,EAAEM,EAAE,GAAGC,SAAS,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IAC/D,IAAIG,MAAM,GAAGF,SAAS,CAACD,EAAE,CAAC;IAC1B,IAAII,KAAK,GAAG,CAAC;IACb,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,iBAAiB,GAAGrB,eAAe,EAAEoB,EAAE,GAAGC,iBAAiB,CAACJ,MAAM,EAAEG,EAAE,EAAE,EAAE;MACvF,IAAIE,IAAI,GAAGD,iBAAiB,CAACD,EAAE,CAAC;MAChC,IAAIG,WAAW,GAAGf,OAAO,CAACc,IAAI,CAAC;MAC/B,IAAIE,UAAU,GAAGN,MAAM,CAACI,IAAI,CAAC;MAC7B,IAAIC,WAAW,KAAKE,SAAS,IAAID,UAAU,KAAKC,SAAS,EAAE;QACvDN,KAAK,IAAIlB,eAAe;MAC5B,CAAC,MACI,IAAIsB,WAAW,KAAKE,SAAS,IAAID,UAAU,KAAKC,SAAS,EAAE;QAC5DN,KAAK,IAAIjB,cAAc;MAC3B,CAAC,MACI,IAAIqB,WAAW,KAAKC,UAAU,EAAE;QACjC,IAAIE,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;QAC9D,IAAIC,gBAAgB,GAAGD,MAAM,CAACE,OAAO,CAACL,WAAW,CAAC;QAClD,IAAIM,eAAe,GAAGH,MAAM,CAACE,OAAO,CAACJ,UAAU,CAAC;QAChD,IAAIM,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACJ,eAAe,GAAGF,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACzE,IAAIG,KAAK,KAAK,CAAC,EAAE;UACbX,KAAK,IAAIhB,eAAe;QAC5B,CAAC,MACI,IAAI2B,KAAK,KAAK,CAAC,EAAE;UAClBX,KAAK,IAAIf,gBAAgB;QAC7B,CAAC,MACI,IAAI0B,KAAK,KAAK,CAAC,CAAC,EAAE;UACnBX,KAAK,IAAId,gBAAgB;QAC7B,CAAC,MACI,IAAIyB,KAAK,KAAK,CAAC,CAAC,EAAE;UACnBX,KAAK,IAAIb,eAAe;QAC5B;MACJ;IACJ;IACA,IAAIa,KAAK,GAAGT,SAAS,EAAE;MACnBA,SAAS,GAAGS,KAAK;MACjBP,UAAU,GAAGM,MAAM;IACvB;EACJ;EACA,OAAOpB,QAAQ,CAAC,CAAC,CAAC,EAAEc,UAAU,CAAC;AACnC"},"metadata":{},"sourceType":"module"}