{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nexport var getTotalPrice = function getTotalPrice(amount, priceMarket, proposals) {\n  if (proposals.length === 0) {\n    return Number(amount) * priceMarket;\n  }\n  var _iterator = _createForOfIteratorHelper(proposals),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var p = _step.value;\n      if (p.length < 2) {\n        return Number(amount) * priceMarket;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  var sum = Number(amount);\n  var list = proposals;\n  var total = 0;\n  var _iterator2 = _createForOfIteratorHelper(list),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var proposal = _step2.value;\n      if (!sum) {\n        break;\n      }\n      if (sum <= Number(proposal[1])) {\n        total += sum * Number(proposal[0]);\n        sum = 0;\n      } else {\n        total += Number(proposal[1]) * Number(proposal[0]);\n        sum -= Number(proposal[1]);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  if (sum > 0 && list.length >= 1) {\n    // sum is bigger then order book liqudity\n    var lastPrice = Number(list[list.length - 1][0]);\n    total += lastPrice * sum;\n  }\n  return total;\n};\nexport var getAmount = function getAmount(avaiblePrice, proposals, value) {\n  var sum = avaiblePrice * value;\n  var list = proposals;\n  var totalAmount = 0;\n  var _iterator3 = _createForOfIteratorHelper(list),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var proposal = _step3.value;\n      if (!sum) {\n        break;\n      }\n      if (sum <= Number(proposal[0]) * Number(proposal[1])) {\n        totalAmount += sum / Number(proposal[0]);\n        sum = 0;\n      } else {\n        totalAmount += Number(proposal[1]);\n        sum -= Number(proposal[0]) * Number(proposal[1]);\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return totalAmount;\n};","map":{"version":3,"names":["getTotalPrice","amount","priceMarket","proposals","length","Number","p","sum","list","total","proposal","lastPrice","getAmount","avaiblePrice","value","totalAmount"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/getTotalPrice.ts"],"sourcesContent":["export const getTotalPrice = (amount: string, priceMarket: number, proposals: string[][]) => {\n    if (proposals.length === 0) {\n        return Number(amount) * priceMarket;\n    }\n\n    for (const p of proposals) {\n        if (p.length < 2) {\n            return Number(amount) * priceMarket;\n        }\n    }\n\n    let sum = Number(amount);\n\n    const list = proposals;\n    let total = 0;\n\n    for (const proposal of list) {\n        if (!sum) {\n            break;\n        }\n\n        if (sum <= Number(proposal[1])) {\n            total += sum * Number(proposal[0]);\n            sum = 0;\n        } else {\n            total += Number(proposal[1]) * Number(proposal[0]);\n            sum -= Number(proposal[1]);\n        }\n    }\n\n    if (sum > 0 && list.length >= 1) { // sum is bigger then order book liqudity\n        const lastPrice = Number(list[list.length - 1][0]);\n        total += lastPrice * sum;\n    }\n\n    return total;\n};\n\nexport const getAmount = (avaiblePrice: number, proposals: string[][], value: number) => {\n    let sum = avaiblePrice * value;\n\n    const list = proposals;\n    let totalAmount = 0;\n\n    for (const proposal of list) {\n        if (!sum) {\n            break;\n        }\n\n        if (sum <= (Number(proposal[0]) * Number(proposal[1]))) {\n            totalAmount += sum / Number(proposal[0]);\n            sum = 0;\n        } else {\n            totalAmount += Number(proposal[1]);\n            sum -= (Number(proposal[0]) * Number(proposal[1]));\n        }\n    }\n\n    return totalAmount;\n};\n"],"mappings":";AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAa,CAAIC,MAAc,EAAEC,WAAmB,EAAEC,SAAqB,EAAK;EACzF,IAAIA,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOC,MAAM,CAACJ,MAAM,CAAC,GAAGC,WAAW;EACvC;EAAC,2CAEeC,SAAS;IAAA;EAAA;IAAzB,oDAA2B;MAAA,IAAhBG,CAAC;MACR,IAAIA,CAAC,CAACF,MAAM,GAAG,CAAC,EAAE;QACd,OAAOC,MAAM,CAACJ,MAAM,CAAC,GAAGC,WAAW;MACvC;IACJ;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,IAAIK,GAAG,GAAGF,MAAM,CAACJ,MAAM,CAAC;EAExB,IAAMO,IAAI,GAAGL,SAAS;EACtB,IAAIM,KAAK,GAAG,CAAC;EAAC,4CAESD,IAAI;IAAA;EAAA;IAA3B,uDAA6B;MAAA,IAAlBE,QAAQ;MACf,IAAI,CAACH,GAAG,EAAE;QACN;MACJ;MAEA,IAAIA,GAAG,IAAIF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;QAC5BD,KAAK,IAAIF,GAAG,GAAGF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClCH,GAAG,GAAG,CAAC;MACX,CAAC,MAAM;QACHE,KAAK,IAAIJ,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGL,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClDH,GAAG,IAAIF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC9B;IACJ;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,IAAIH,GAAG,GAAG,CAAC,IAAIC,IAAI,CAACJ,MAAM,IAAI,CAAC,EAAE;IAAE;IAC/B,IAAMO,SAAS,GAAGN,MAAM,CAACG,IAAI,CAACA,IAAI,CAACJ,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClDK,KAAK,IAAIE,SAAS,GAAGJ,GAAG;EAC5B;EAEA,OAAOE,KAAK;AAChB,CAAC;AAED,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAS,CAAIC,YAAoB,EAAEV,SAAqB,EAAEW,KAAa,EAAK;EACrF,IAAIP,GAAG,GAAGM,YAAY,GAAGC,KAAK;EAE9B,IAAMN,IAAI,GAAGL,SAAS;EACtB,IAAIY,WAAW,GAAG,CAAC;EAAC,4CAEGP,IAAI;IAAA;EAAA;IAA3B,uDAA6B;MAAA,IAAlBE,QAAQ;MACf,IAAI,CAACH,GAAG,EAAE;QACN;MACJ;MAEA,IAAIA,GAAG,IAAKF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGL,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAE,EAAE;QACpDK,WAAW,IAAIR,GAAG,GAAGF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxCH,GAAG,GAAG,CAAC;MACX,CAAC,MAAM;QACHQ,WAAW,IAAIV,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClCH,GAAG,IAAKF,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGL,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAE;MACtD;IACJ;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,OAAOK,WAAW;AACtB,CAAC"},"metadata":{},"sourceType":"module"}