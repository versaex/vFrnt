{"ast":null,"code":"'use strict';\n\nvar curve = require('../curve');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n  return y.redSqr().cmp(rhs) === 0;\n};\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.ishrn(1)) {\n    bits.push(t.andln(1));\n  }\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n  return this.x.fromRed();\n};","map":{"version":3,"names":["curve","require","bn","inherits","Base","base","MontCurve","conf","call","a","toRed","red","b","i4","redInvm","two","a24","redMul","redAdd","module","exports","prototype","validate","point","x","normalize","x2","redSqr","rhs","y","redSqrt","cmp","Point","z","BasePoint","one","zero","pointFromJSON","obj","fromJSON","precompute","inspect","isInfinity","fromRed","toString","cmpn","dbl","aa","redSub","bb","c","nx","nz","add","Error","diffAdd","p","diff","d","da","cb","redISub","mul","k","t","clone","bits","ishrn","push","andln","i","length","mulAdd","getX"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/node_modules/elliptic/lib/elliptic/curve/mont.js"],"sourcesContent":["'use strict';\n\nvar curve = require('../curve');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.ishrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}