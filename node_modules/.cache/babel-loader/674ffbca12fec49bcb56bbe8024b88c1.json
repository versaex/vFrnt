{"ast":null,"code":"/**\n * Session Status\n */\nexport var SessionStatus;\n(function (SessionStatus) {\n  /** JSDoc */\n  SessionStatus[\"Ok\"] = \"ok\";\n  /** JSDoc */\n  SessionStatus[\"Exited\"] = \"exited\";\n  /** JSDoc */\n  SessionStatus[\"Crashed\"] = \"crashed\";\n  /** JSDoc */\n  SessionStatus[\"Abnormal\"] = \"abnormal\";\n})(SessionStatus || (SessionStatus = {}));","map":{"version":3,"sources":["../src/session.ts"],"names":[],"mappings":"AAiDA;;AAEG;AACH,OAAA,IAAY,aASX;AATD,CAAA,UAAY,aAAa,EAAA;EACvB;EACA,aAAA,CAAA,IAAA,CAAA,GAAA,IAAS;EACT;EACA,aAAA,CAAA,QAAA,CAAA,GAAA,QAAiB;EACjB;EACA,aAAA,CAAA,SAAA,CAAA,GAAA,SAAmB;EACnB;EACA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAqB;AACvB,CAAC,EATW,aAAa,KAAb,aAAa,GAAA,CAAA,CAAA,CAAA,CAAA","sourcesContent":["import { User } from './user';\n\n/**\n * @inheritdoc\n */\nexport interface Session extends SessionContext {\n  /** JSDoc */\n  update(context?: SessionContext): void;\n\n  /** JSDoc */\n  close(status?: SessionStatus): void;\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  };\n}\n\n/**\n * Session Context\n */\nexport interface SessionContext {\n  sid?: string;\n  did?: string;\n  timestamp?: number;\n  started?: number;\n  duration?: number;\n  status?: SessionStatus;\n  release?: string;\n  environment?: string;\n  userAgent?: string;\n  ipAddress?: string;\n  errors?: number;\n  user?: User | null;\n}\n\n/**\n * Session Status\n */\nexport enum SessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Exited = 'exited',\n  /** JSDoc */\n  Crashed = 'crashed',\n  /** JSDoc */\n  Abnormal = 'abnormal',\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}