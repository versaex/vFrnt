{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n  /** Pending */\n  States[\"PENDING\"] = \"PENDING\";\n  /** Resolved / OK */\n  States[\"RESOLVED\"] = \"RESOLVED\";\n  /** Rejected / Error */\n  States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /** @class */function () {\n  function SyncPromise(executor) {\n    var _this = this;\n    this._state = States.PENDING;\n    this._handlers = [];\n    /** JSDoc */\n    this._resolve = function (value) {\n      _this._setResult(States.RESOLVED, value);\n    };\n    /** JSDoc */\n    this._reject = function (reason) {\n      _this._setResult(States.REJECTED, reason);\n    };\n    /** JSDoc */\n    this._setResult = function (state, value) {\n      if (_this._state !== States.PENDING) {\n        return;\n      }\n      if (isThenable(value)) {\n        value.then(_this._resolve, _this._reject);\n        return;\n      }\n      _this._state = state;\n      _this._value = value;\n      _this._executeHandlers();\n    };\n    // TODO: FIXME\n    /** JSDoc */\n    this._attachHandler = function (handler) {\n      _this._handlers = _this._handlers.concat(handler);\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n    this._executeHandlers = function () {\n      if (_this._state === States.PENDING) {\n        return;\n      }\n      var cachedHandlers = _this._handlers.slice();\n      _this._handlers = [];\n      cachedHandlers.forEach(function (handler) {\n        if (handler.done) {\n          return;\n        }\n        if (_this._state === States.RESOLVED) {\n          if (handler.onfulfilled) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            handler.onfulfilled(_this._value);\n          }\n        }\n        if (_this._state === States.REJECTED) {\n          if (handler.onrejected) {\n            handler.onrejected(_this._value);\n          }\n        }\n        handler.done = true;\n      });\n    };\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n  SyncPromise.resolve = function (value) {\n    return new SyncPromise(function (resolve) {\n      resolve(value);\n    });\n  };\n  /** JSDoc */\n  SyncPromise.reject = function (reason) {\n    return new SyncPromise(function (_, reject) {\n      reject(reason);\n    });\n  };\n  /** JSDoc */\n  SyncPromise.all = function (collection) {\n    return new SyncPromise(function (resolve, reject) {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(\"Promise.all requires an array as input.\"));\n        return;\n      }\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n      var counter = collection.length;\n      var resolvedCollection = [];\n      collection.forEach(function (item, index) {\n        SyncPromise.resolve(item).then(function (value) {\n          resolvedCollection[index] = value;\n          counter -= 1;\n          if (counter !== 0) {\n            return;\n          }\n          resolve(resolvedCollection);\n        }).then(null, reject);\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.then = function (_onfulfilled, _onrejected) {\n    var _this = this;\n    return new SyncPromise(function (resolve, reject) {\n      _this._attachHandler({\n        done: false,\n        onfulfilled: function onfulfilled(result) {\n          if (!_onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result);\n            return;\n          }\n          try {\n            resolve(_onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: function onrejected(reason) {\n          if (!_onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(_onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        }\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.catch = function (onrejected) {\n    return this.then(function (val) {\n      return val;\n    }, onrejected);\n  };\n  /** JSDoc */\n  SyncPromise.prototype.finally = function (onfinally) {\n    var _this = this;\n    return new SyncPromise(function (resolve, reject) {\n      var val;\n      var isRejected;\n      return _this.then(function (value) {\n        isRejected = false;\n        val = value;\n        if (onfinally) {\n          onfinally();\n        }\n      }, function (reason) {\n        isRejected = true;\n        val = reason;\n        if (onfinally) {\n          onfinally();\n        }\n      }).then(function () {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n        resolve(val);\n      });\n    });\n  };\n  /** JSDoc */\n  SyncPromise.prototype.toString = function () {\n    return '[object SyncPromise]';\n  };\n  return SyncPromise;\n}();\nexport { SyncPromise };","map":{"version":3,"sources":["../src/syncpromise.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}