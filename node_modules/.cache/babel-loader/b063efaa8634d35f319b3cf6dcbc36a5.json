{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { API, captureException, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(function () {\n    ignoreOnError -= 1;\n  });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var sentryWrapped = function sentryWrapped() {\n    var args = Array.prototype.slice.call(arguments);\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      var wrappedArguments = args.map(function (arg) {\n        return wrap(arg, options);\n      });\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n      withScope(function (scope) {\n        scope.addEventProcessor(function (event) {\n          var processedEvent = __assign({}, event);\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n          processedEvent.extra = __assign(__assign({}, processedEvent.extra), {\n            arguments: args\n          });\n          return processedEvent;\n        });\n        captureException(ex);\n      });\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped\n  });\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn\n    }\n  });\n  // Restore original function name (not all browsers allow that)\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get: function get() {\n          return fn.name;\n        }\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n  return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  if (!options.eventId) {\n    logger.error(\"Missing eventId option in showReportDialog call\");\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(\"Missing dsn option in showReportDialog call\");\n    return;\n  }\n  var script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n  (document.head || document.body).appendChild(script);\n}","map":{"version":3,"sources":["../src/helpers.ts"],"names":[],"mappings":"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","sourcesContent":["import { API, captureException, withScope } from '@sentry/core';\nimport { DsnLike, Event as SentryEvent, Mechanism, Scope, WrappedFunction } from '@sentry/types';\nimport { addExceptionMechanism, addExceptionTypeValue, logger } from '@sentry/utils';\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(() => {\n    ignoreOnError -= 1;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    }\n\n    // If this has already been wrapped in the past, return that wrapped function\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const sentryWrapped: WrappedFunction = function(this: any): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        return fn.handleEvent.apply(this, wrappedArguments);\n      }\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope: Scope) => {\n        scope.addEventProcessor((event: SentryEvent) => {\n          const processedEvent = { ...event };\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined);\n            addExceptionMechanism(processedEvent, options.mechanism);\n          }\n\n          processedEvent.extra = {\n            ...processedEvent.extra,\n            arguments: args,\n          };\n\n          return processedEvent;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped,\n  });\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true,\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn,\n    },\n  });\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(): void;\n}\n\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options: ReportDialogOptions = {}): void {\n  if (!options.eventId) {\n    logger.error(`Missing eventId option in showReportDialog call`);\n    return;\n  }\n  if (!options.dsn) {\n    logger.error(`Missing dsn option in showReportDialog call`);\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = new API(options.dsn).getReportDialogEndpoint(options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  (document.head || document.body).appendChild(script);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}