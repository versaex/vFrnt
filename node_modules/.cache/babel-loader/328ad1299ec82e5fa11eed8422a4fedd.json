{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */function () {\n  function Memo() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  Memo.prototype.memoize = function (obj) {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var i = 0; i < this._inner.length; i++) {\n      var value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  };\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  Memo.prototype.unmemoize = function (obj) {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (var i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  };\n  return Memo;\n}();\nexport { Memo };","map":{"version":3,"sources":["../src/memo.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AAEG;AACH,IAAA,IAAA,GAAA,aAAA,YAAA;EAME,SAAA,IAAA,GAAA;IACE,IAAI,CAAC,WAAW,GAAG,OAAO,OAAO,KAAK,UAAU;IAChD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,GAAG,EAAE;EACrD;EAEA;;;AAGG;EACI,IAAA,CAAA,SAAA,CAAA,OAAO,GAAd,UAAe,GAAQ,EAAA;IACrB,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACxB,OAAO,IAAI;MACZ;MACD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;MACpB,OAAO,KAAK;IACb;IACD;IACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;MAC5B,IAAI,KAAK,KAAK,GAAG,EAAE;QACjB,OAAO,IAAI;MACZ;IACF;IACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;IACrB,OAAO,KAAK;EACd,CAAC;EAED;;;AAGG;EACI,IAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,GAAQ,EAAA;IACvB,IAAI,IAAI,CAAC,WAAW,EAAE;MACpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC;KACxB,MAAM;MACL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC3C,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;UAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;UACxB;QACD;MACF;IACF;EACH,CAAC;EACH,OAAA,IAAC;AAAD,CAAC,EAAA","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nexport class Memo {\n  /** Determines if WeakSet is available */\n  private readonly _hasWeakSet: boolean;\n  /** Either WeakSet or Array */\n  private readonly _inner: any;\n\n  public constructor() {\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n  public memoize(obj: any): boolean {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n      this._inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < this._inner.length; i++) {\n      const value = this._inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    this._inner.push(obj);\n    return false;\n  }\n\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n  public unmemoize(obj: any): void {\n    if (this._hasWeakSet) {\n      this._inner.delete(obj);\n    } else {\n      for (let i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}