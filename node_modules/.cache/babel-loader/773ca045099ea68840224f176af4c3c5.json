{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\Wallets\\\\EstimatedValue\\\\index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { formatWithSeparators } from '../../../components';\nimport { VALUATION_PRIMARY_CURRENCY, VALUATION_SECONDARY_CURRENCY } from '../../../constants';\nimport { estimateUnitValue, estimateValue } from '../../../helpers/estimateValue';\nimport { currenciesFetch, marketsFetch, marketsTickersFetch, selectCurrencies, selectMarkets, selectMarketTickers, selectUserLoggedIn } from '../../../modules';\nvar EstimatedValueContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(EstimatedValueContainer, _React$Component);\n  var _super = _createSuper(EstimatedValueContainer);\n  function EstimatedValueContainer() {\n    var _this;\n    _classCallCheck(this, EstimatedValueContainer);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.translate = function (key) {\n      return _this.props.intl.formatMessage({\n        id: key\n      });\n    };\n    _this.renderSecondaryCurrencyValuation = function (estimatedValue) {\n      var _this$props = _this.props,\n        currencies = _this$props.currencies,\n        markets = _this$props.markets,\n        tickers = _this$props.tickers;\n      var estimatedValueSecondary = estimateUnitValue(VALUATION_SECONDARY_CURRENCY, VALUATION_PRIMARY_CURRENCY, +estimatedValue, currencies, markets, tickers);\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, formatWithSeparators(estimatedValueSecondary, ',')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-sign\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, VALUATION_SECONDARY_CURRENCY.toUpperCase()));\n    };\n    return _this;\n  }\n  _createClass(EstimatedValueContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n        currencies = _this$props2.currencies,\n        fetchCurrencies = _this$props2.fetchCurrencies,\n        fetchMarkets = _this$props2.fetchMarkets,\n        fetchTickers = _this$props2.fetchTickers,\n        markets = _this$props2.markets,\n        tickers = _this$props2.tickers;\n      if (!markets.length) {\n        fetchMarkets();\n      }\n      if (!tickers.length) {\n        fetchTickers();\n      }\n      if (!currencies.length) {\n        fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      var _this$props3 = this.props,\n        currencies = _this$props3.currencies,\n        fetchCurrencies = _this$props3.fetchCurrencies,\n        fetchMarkets = _this$props3.fetchMarkets,\n        fetchTickers = _this$props3.fetchTickers,\n        markets = _this$props3.markets,\n        tickers = _this$props3.tickers;\n      if (!markets.length && next.markets.length) {\n        fetchMarkets();\n      }\n      if (!tickers.length && next.tickers.length) {\n        fetchTickers();\n      }\n      if (!currencies.length && next.currencies.length) {\n        fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n        currencies = _this$props4.currencies,\n        markets = _this$props4.markets,\n        tickers = _this$props4.tickers,\n        wallets = _this$props4.wallets;\n      var estimatedValue = estimateValue(VALUATION_PRIMARY_CURRENCY, currencies, wallets, markets, tickers);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-estimated-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-estimated-value__container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, this.translate('page.body.wallets.estimated_value'), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, formatWithSeparators(estimatedValue, ',')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"value-sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, VALUATION_PRIMARY_CURRENCY.toUpperCase())), VALUATION_SECONDARY_CURRENCY && this.renderSecondaryCurrencyValuation(estimatedValue)));\n    }\n  }]);\n  return EstimatedValueContainer;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currencies: selectCurrencies(state),\n    markets: selectMarkets(state),\n    tickers: selectMarketTickers(state),\n    userLoggedIn: selectUserLoggedIn(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCurrencies: function fetchCurrencies() {\n      return dispatch(currenciesFetch());\n    },\n    fetchMarkets: function fetchMarkets() {\n      return dispatch(marketsFetch());\n    },\n    fetchTickers: function fetchTickers() {\n      return dispatch(marketsTickersFetch());\n    }\n  };\n};\n\n// tslint:disable-next-line:no-any\nexport var EstimatedValue = injectIntl(connect(mapStateToProps, mapDispatchToProps)(EstimatedValueContainer));","map":{"version":3,"names":["React","injectIntl","connect","formatWithSeparators","VALUATION_PRIMARY_CURRENCY","VALUATION_SECONDARY_CURRENCY","estimateUnitValue","estimateValue","currenciesFetch","marketsFetch","marketsTickersFetch","selectCurrencies","selectMarkets","selectMarketTickers","selectUserLoggedIn","EstimatedValueContainer","translate","key","props","intl","formatMessage","id","renderSecondaryCurrencyValuation","estimatedValue","currencies","markets","tickers","estimatedValueSecondary","toUpperCase","fetchCurrencies","fetchMarkets","fetchTickers","length","next","wallets","Component","mapStateToProps","state","userLoggedIn","mapDispatchToProps","dispatch","EstimatedValue"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/Wallets/EstimatedValue/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../../';\nimport { formatWithSeparators } from '../../../components';\nimport { VALUATION_PRIMARY_CURRENCY, VALUATION_SECONDARY_CURRENCY } from '../../../constants';\nimport { estimateUnitValue, estimateValue } from '../../../helpers/estimateValue';\nimport {\n    currenciesFetch,\n    Currency,\n    marketsFetch,\n    marketsTickersFetch,\n    RootState,\n    selectCurrencies,\n    selectMarkets,\n    selectMarketTickers,\n    selectUserLoggedIn,\n    Wallet,\n} from '../../../modules';\nimport { Market, Ticker } from '../../../modules/public/markets';\n\ninterface EstimatedValueProps {\n    wallets: Wallet[];\n}\n\ninterface ReduxProps {\n    currencies: Currency[];\n    markets: Market[];\n    tickers: {\n        [key: string]: Ticker,\n    };\n    userLoggedIn: boolean;\n}\n\ninterface DispatchProps {\n    fetchCurrencies: typeof currenciesFetch;\n    fetchMarkets: typeof marketsFetch;\n    fetchTickers: typeof marketsTickersFetch;\n}\n\ntype Props = DispatchProps & ReduxProps & EstimatedValueProps & IntlProps;\n\nclass EstimatedValueContainer extends React.Component<Props> {\n    public componentDidMount(): void {\n        const {\n            currencies,\n            fetchCurrencies,\n            fetchMarkets,\n            fetchTickers,\n            markets,\n            tickers,\n        } = this.props;\n\n        if (!markets.length) {\n            fetchMarkets();\n        }\n\n        if (!tickers.length) {\n            fetchTickers();\n        }\n\n        if (!currencies.length) {\n            fetchCurrencies();\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        const {\n            currencies,\n            fetchCurrencies,\n            fetchMarkets,\n            fetchTickers,\n            markets,\n            tickers,\n        } = this.props;\n\n        if (!markets.length && next.markets.length) {\n            fetchMarkets();\n        }\n\n        if (!tickers.length && next.tickers.length) {\n            fetchTickers();\n        }\n\n        if (!currencies.length && next.currencies.length) {\n            fetchCurrencies();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            currencies,\n            markets,\n            tickers,\n            wallets,\n        } = this.props;\n        const estimatedValue = estimateValue(VALUATION_PRIMARY_CURRENCY, currencies, wallets, markets, tickers);\n\n        return (\n            <div className=\"pg-estimated-value\">\n                <div className=\"pg-estimated-value__container\">\n                    {this.translate('page.body.wallets.estimated_value')}\n                    <span className=\"value-container\">\n                        <span className=\"value\">\n                            {formatWithSeparators(estimatedValue, ',')}\n                        </span>\n                        <span className=\"value-sign\">{VALUATION_PRIMARY_CURRENCY.toUpperCase()}</span>\n                    </span>\n                    {VALUATION_SECONDARY_CURRENCY && this.renderSecondaryCurrencyValuation(estimatedValue)}\n                </div>\n            </div>\n        );\n    }\n\n    public translate = (key: string) => this.props.intl.formatMessage({id: key});\n\n    private renderSecondaryCurrencyValuation = (estimatedValue: string) => {\n        const {\n            currencies,\n            markets,\n            tickers,\n        } = this.props;\n        const estimatedValueSecondary = estimateUnitValue(VALUATION_SECONDARY_CURRENCY, VALUATION_PRIMARY_CURRENCY, +estimatedValue, currencies, markets, tickers);\n\n        return (\n            <span className=\"value-container\">\n                <span className=\"value\">\n                    {formatWithSeparators(estimatedValueSecondary, ',')}\n                </span>\n                <span className=\"value-sign\">{VALUATION_SECONDARY_CURRENCY.toUpperCase()}</span>\n            </span>\n        );\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currencies: selectCurrencies(state),\n    markets: selectMarkets(state),\n    tickers: selectMarketTickers(state),\n    userLoggedIn: selectUserLoggedIn(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    fetchCurrencies: () => dispatch(currenciesFetch()),\n    fetchMarkets: () => dispatch(marketsFetch()),\n    fetchTickers: () => dispatch(marketsTickersFetch()),\n});\n\n// tslint:disable-next-line:no-any\nexport const EstimatedValue = injectIntl(connect(mapStateToProps, mapDispatchToProps)(EstimatedValueContainer)) as any;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}