{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { defaultStorageLimit } from '../../../api';\nimport { sliceArray } from '../../../helpers';\nimport { getUnique } from '../../../helpers/getUnique';\nimport { HISTORY_DATA, HISTORY_ERROR, HISTORY_FETCH, HISTORY_PUSH_FINISH, HISTORY_RESET } from './constants';\nvar initialState = {\n  list: [],\n  fetching: false,\n  page: 0,\n  nextPageExists: false\n};\nexport var historyReducer = function historyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case HISTORY_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fetching: true\n      });\n    case HISTORY_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: sliceArray(action.payload.list, defaultStorageLimit()),\n        fetching: false,\n        page: action.payload.page,\n        nextPageExists: action.payload.nextPageExists\n      });\n    case HISTORY_ERROR:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          list: [],\n          fetching: false,\n          nextPageExists: false,\n          page: 0\n        });\n      }\n    case HISTORY_RESET:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          list: [],\n          page: 0,\n          nextPageExists: false\n        });\n      }\n    case HISTORY_PUSH_FINISH:\n      {\n        var list = _toConsumableArray(action.payload);\n        list = getUnique(list, 'id');\n        return _objectSpread(_objectSpread({}, state), {}, {\n          list: sliceArray(list, defaultStorageLimit())\n        });\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["defaultStorageLimit","sliceArray","getUnique","HISTORY_DATA","HISTORY_ERROR","HISTORY_FETCH","HISTORY_PUSH_FINISH","HISTORY_RESET","initialState","list","fetching","page","nextPageExists","historyReducer","state","action","type","payload"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/history/reducer.ts"],"sourcesContent":["import { defaultStorageLimit } from '../../../api';\nimport { sliceArray } from '../../../helpers';\nimport { getUnique } from '../../../helpers/getUnique';\nimport { HistoryActions } from './actions';\nimport {\n    HISTORY_DATA,\n    HISTORY_ERROR,\n    HISTORY_FETCH,\n    HISTORY_PUSH_FINISH,\n    HISTORY_RESET,\n} from './constants';\nimport { WalletHistoryList } from './types';\n\nexport interface HistoryState {\n    list: WalletHistoryList;\n    fetching: boolean;\n    page: number;\n    nextPageExists: boolean;\n}\n\nconst initialState: HistoryState = {\n    list: [],\n    fetching: false,\n    page: 0,\n    nextPageExists: false,\n};\n\n\nexport const historyReducer = (state = initialState, action: HistoryActions) => {\n    switch (action.type) {\n        case HISTORY_FETCH:\n            return { ...state, fetching: true };\n        case HISTORY_DATA:\n            return {\n                ...state,\n                list: sliceArray(action.payload.list, defaultStorageLimit()),\n                fetching: false,\n                page: action.payload.page,\n                nextPageExists: action.payload.nextPageExists,\n            };\n        case HISTORY_ERROR: {\n            return {\n                ...state,\n                list: [],\n                fetching: false,\n                nextPageExists: false,\n                page: 0,\n            };\n        }\n        case HISTORY_RESET: {\n            return { ...state, list: [], page: 0, nextPageExists: false };\n        }\n        case HISTORY_PUSH_FINISH: {\n            let list = [...action.payload];\n            list = getUnique(list, 'id');\n\n            return { ...state, list: sliceArray(list, defaultStorageLimit()) };\n        }\n        default:\n            return state;\n    }\n};\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,cAAc;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,SACIC,YAAY,EACZC,aAAa,EACbC,aAAa,EACbC,mBAAmB,EACnBC,aAAa,QACV,aAAa;AAUpB,IAAMC,YAA0B,GAAG;EAC/BC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAE,CAAC;EACPC,cAAc,EAAE;AACpB,CAAC;AAGD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAqD;EAAA,IAAjDC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAsB;EACvE,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKX,aAAa;MACd,uCAAYS,KAAK;QAAEJ,QAAQ,EAAE;MAAI;IACrC,KAAKP,YAAY;MACb,uCACOW,KAAK;QACRL,IAAI,EAAER,UAAU,CAACc,MAAM,CAACE,OAAO,CAACR,IAAI,EAAET,mBAAmB,EAAE,CAAC;QAC5DU,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAEI,MAAM,CAACE,OAAO,CAACN,IAAI;QACzBC,cAAc,EAAEG,MAAM,CAACE,OAAO,CAACL;MAAc;IAErD,KAAKR,aAAa;MAAE;QAChB,uCACOU,KAAK;UACRL,IAAI,EAAE,EAAE;UACRC,QAAQ,EAAE,KAAK;UACfE,cAAc,EAAE,KAAK;UACrBD,IAAI,EAAE;QAAC;MAEf;IACA,KAAKJ,aAAa;MAAE;QAChB,uCAAYO,KAAK;UAAEL,IAAI,EAAE,EAAE;UAAEE,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAK;MAC/D;IACA,KAAKN,mBAAmB;MAAE;QACtB,IAAIG,IAAI,sBAAOM,MAAM,CAACE,OAAO,CAAC;QAC9BR,IAAI,GAAGP,SAAS,CAACO,IAAI,EAAE,IAAI,CAAC;QAE5B,uCAAYK,KAAK;UAAEL,IAAI,EAAER,UAAU,CAACQ,IAAI,EAAET,mBAAmB,EAAE;QAAC;MACpE;IACA;MACI,OAAOc,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}