{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\MetaMaskButton\\\\index.tsx\";\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MetaMaskLogo } from '../../assets/images/MetaMaskLogo';\nimport { Web3ProviderWrapper } from '../../helpers';\nimport { alertPush, sendError } from '../../modules';\nexport var injected = new InjectedConnector({\n  supportedChainIds: [1]\n});\nexport var MetaMaskButtonComponent = function MetaMaskButtonComponent(props) {\n  var _useWeb3ReactCore = useWeb3ReactCore(),\n    account = _useWeb3ReactCore.account,\n    activate = _useWeb3ReactCore.activate,\n    connector = _useWeb3ReactCore.connector,\n    error = _useWeb3ReactCore.error;\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    activatingConnector = _React$useState2[0],\n    setActivatingConnector = _React$useState2[1];\n  var dispatch = useDispatch();\n  var handleConnectWallet = React.useCallback(function () {\n    if (account) {\n      dispatch(alertPush({\n        message: ['metamask.success.connected'],\n        type: 'success'\n      }));\n    } else {\n      setActivatingConnector(injected);\n      // tslint:disable-next-line: no-floating-promises\n      activate(injected);\n    }\n  }, [account, activate, dispatch]);\n  React.useEffect(function () {\n    if (activatingConnector && activatingConnector === connector && account) {\n      dispatch(alertPush({\n        message: ['metamask.success.connected'],\n        type: 'success'\n      }));\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector, account, dispatch]);\n  React.useEffect(function () {\n    if (!!error) {\n      dispatch(sendError({\n        error: error,\n        processingType: 'alert',\n        extraOptions: {\n          type: 'METAMASK_HANDLE_ERROR'\n        }\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [!!error, dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-metamask\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MetaMaskLogo, {\n    className: \"pg-metamask__logo-icon\",\n    onClick: handleConnectWallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }));\n};\nexport var MetaMaskButton = function MetaMaskButton(props) {\n  return /*#__PURE__*/React.createElement(Web3ProviderWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MetaMaskButtonComponent, Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"names":["useWeb3React","useWeb3ReactCore","InjectedConnector","React","useDispatch","MetaMaskLogo","Web3ProviderWrapper","alertPush","sendError","injected","supportedChainIds","MetaMaskButtonComponent","props","account","activate","connector","error","useState","activatingConnector","setActivatingConnector","dispatch","handleConnectWallet","useCallback","message","type","useEffect","undefined","processingType","extraOptions","MetaMaskButton"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/MetaMaskButton/index.tsx"],"sourcesContent":["import { Web3Provider } from '@ethersproject/providers';\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MetaMaskLogo } from '../../assets/images/MetaMaskLogo';\nimport { Web3ProviderWrapper } from '../../helpers';\nimport { alertPush, sendError } from '../../modules';\n\ninterface OwnProps {\n    depositAddress: string;\n}\n\ntype Props = OwnProps;\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1] });\n\nexport const MetaMaskButtonComponent: React.FunctionComponent<Props> = (props: Props) => {\n    const {\n        account,\n        activate,\n        connector,\n        error,\n    } = useWeb3ReactCore<Web3Provider>();\n    const [activatingConnector, setActivatingConnector] = React.useState<any>();\n    const dispatch = useDispatch();\n\n    const handleConnectWallet = React.useCallback(() => {\n        if (account) {\n            dispatch(alertPush({ message: ['metamask.success.connected'], type: 'success'}));\n        } else {\n            setActivatingConnector(injected);\n            // tslint:disable-next-line: no-floating-promises\n            activate(injected);\n        }\n    }, [account, activate, dispatch]);\n\n    React.useEffect(() => {\n        if (activatingConnector &&\n            activatingConnector === connector &&\n            account\n        ) {\n            dispatch(alertPush({ message: ['metamask.success.connected'], type: 'success'}));\n            setActivatingConnector(undefined);\n        }\n    }, [activatingConnector, connector, account, dispatch]);\n\n    React.useEffect(() => {\n        if (!!error) {\n            dispatch(sendError({\n                error,\n                processingType: 'alert',\n                extraOptions: {\n                    type: 'METAMASK_HANDLE_ERROR',\n                },\n            }));\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [!!error, dispatch]);\n\n    return (\n        <div className=\"pg-metamask\">\n            <MetaMaskLogo\n                className=\"pg-metamask__logo-icon\"\n                onClick={handleConnectWallet}\n            />\n        </div>\n    );\n};\n\nexport const MetaMaskButton: React.FunctionComponent<Props> = (props: Props) => (\n    <Web3ProviderWrapper>\n        <MetaMaskButtonComponent {...props} />\n    </Web3ProviderWrapper>\n);\n"],"mappings":";;;AACA,SAASA,YAAY,IAAIC,gBAAgB,QAAQ,kBAAkB;AACnE,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,kCAAkC;AAC/D,SAASC,mBAAmB,QAAQ,eAAe;AACnD,SAASC,SAAS,EAAEC,SAAS,QAAQ,eAAe;AAQpD,OAAO,IAAMC,QAAQ,GAAG,IAAIP,iBAAiB,CAAC;EAAEQ,iBAAiB,EAAE,CAAC,CAAC;AAAE,CAAC,CAAC;AAEzE,OAAO,IAAMC,uBAAuD,GAAG,SAA1DA,uBAAuD,CAAIC,KAAY,EAAK;EACrF,wBAKIX,gBAAgB,EAAgB;IAJhCY,OAAO,qBAAPA,OAAO;IACPC,QAAQ,qBAARA,QAAQ;IACRC,SAAS,qBAATA,SAAS;IACTC,KAAK,qBAALA,KAAK;EAET,sBAAsDb,KAAK,CAACc,QAAQ,EAAO;IAAA;IAApEC,mBAAmB;IAAEC,sBAAsB;EAClD,IAAMC,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,IAAMiB,mBAAmB,GAAGlB,KAAK,CAACmB,WAAW,CAAC,YAAM;IAChD,IAAIT,OAAO,EAAE;MACTO,QAAQ,CAACb,SAAS,CAAC;QAAEgB,OAAO,EAAE,CAAC,4BAA4B,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM;MACHL,sBAAsB,CAACV,QAAQ,CAAC;MAChC;MACAK,QAAQ,CAACL,QAAQ,CAAC;IACtB;EACJ,CAAC,EAAE,CAACI,OAAO,EAAEC,QAAQ,EAAEM,QAAQ,CAAC,CAAC;EAEjCjB,KAAK,CAACsB,SAAS,CAAC,YAAM;IAClB,IAAIP,mBAAmB,IACnBA,mBAAmB,KAAKH,SAAS,IACjCF,OAAO,EACT;MACEO,QAAQ,CAACb,SAAS,CAAC;QAAEgB,OAAO,EAAE,CAAC,4BAA4B,CAAC;QAAEC,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC;MAChFL,sBAAsB,CAACO,SAAS,CAAC;IACrC;EACJ,CAAC,EAAE,CAACR,mBAAmB,EAAEH,SAAS,EAAEF,OAAO,EAAEO,QAAQ,CAAC,CAAC;EAEvDjB,KAAK,CAACsB,SAAS,CAAC,YAAM;IAClB,IAAI,CAAC,CAACT,KAAK,EAAE;MACTI,QAAQ,CAACZ,SAAS,CAAC;QACfQ,KAAK,EAALA,KAAK;QACLW,cAAc,EAAE,OAAO;QACvBC,YAAY,EAAE;UACVJ,IAAI,EAAE;QACV;MACJ,CAAC,CAAC,CAAC;IACP;;IAEA;EACJ,CAAC,EAAE,CAAC,CAAC,CAACR,KAAK,EAAEI,QAAQ,CAAC,CAAC;EAEvB,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB,oBAAC,YAAY;IACT,SAAS,EAAC,wBAAwB;IAClC,OAAO,EAAEC,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/B,CACA;AAEd,CAAC;AAED,OAAO,IAAMQ,cAA8C,GAAG,SAAjDA,cAA8C,CAAIjB,KAAY;EAAA,oBACvE,oBAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChB,oBAAC,uBAAuB,oBAAKA,KAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,CACpB;AAAA,CACzB"},"metadata":{},"sourceType":"module"}