{"ast":null,"code":"import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRangeToParts(dtf, x, y, implDetails) {\n  var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n  var result = new Array(0);\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result.push({\n      type: part.type,\n      value: part.value,\n      source: part.source\n    });\n  }\n  return result;\n}","map":{"version":3,"names":["PartitionDateTimeRangePattern","FormatDateTimeRangeToParts","dtf","x","y","implDetails","parts","result","Array","_i","parts_1","length","part","push","type","value","source"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/@formatjs/ecma402-abstract/lib/DateTimeFormat/FormatDateTimeRangeToParts.js"],"sourcesContent":["import { PartitionDateTimeRangePattern } from './PartitionDateTimeRangePattern';\nexport function FormatDateTimeRangeToParts(dtf, x, y, implDetails) {\n    var parts = PartitionDateTimeRangePattern(dtf, x, y, implDetails);\n    var result = new Array(0);\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n        var part = parts_1[_i];\n        result.push({\n            type: part.type,\n            value: part.value,\n            source: part.source,\n        });\n    }\n    return result;\n}\n"],"mappings":"AAAA,SAASA,6BAA6B,QAAQ,iCAAiC;AAC/E,OAAO,SAASC,0BAA0B,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,WAAW,EAAE;EAC/D,IAAIC,KAAK,GAAGN,6BAA6B,CAACE,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,WAAW,CAAC;EACjE,IAAIE,MAAM,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC;EACzB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAGJ,KAAK,EAAEG,EAAE,GAAGC,OAAO,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;IACzD,IAAIG,IAAI,GAAGF,OAAO,CAACD,EAAE,CAAC;IACtBF,MAAM,CAACM,IAAI,CAAC;MACRC,IAAI,EAAEF,IAAI,CAACE,IAAI;MACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,MAAM,EAAEJ,IAAI,CAACI;IACjB,CAAC,CAAC;EACN;EACA,OAAOT,MAAM;AACjB"},"metadata":{},"sourceType":"module"}