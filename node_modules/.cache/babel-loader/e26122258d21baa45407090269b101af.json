{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\ProfileAuthDetails\\\\index.tsx\";\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ProfileTwoFactorAuth } from '../';\nimport { isUsernameEnabled } from '../../api';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { ChangePassword, CustomInput, Modal } from '../../components';\nimport { entropyPasswordFetch, selectConfigs, selectCurrentPasswordEntropy, selectUserInfo } from '../../modules';\nimport { changePasswordFetch, selectChangePasswordSuccess, toggle2faFetch } from '../../modules/user/profile';\nvar ProfileAuthDetailsComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileAuthDetailsComponent, _React$Component);\n  var _super = _createSuper(ProfileAuthDetailsComponent);\n  function ProfileAuthDetailsComponent(props) {\n    var _this;\n    _classCallCheck(this, ProfileAuthDetailsComponent);\n    _this = _super.call(this, props);\n    _this.renderProfileTwoFactor = function () {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ProfileTwoFactorAuth, {\n        is2faEnabled: _this.props.user.otp,\n        navigateTo2fa: _this.handleNavigateTo2fa,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      })));\n    };\n    _this.renderModalHeader = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.content.twoFactorAuthentication.modalHeader\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-email-form__cros-icon\",\n        onClick: _this.closeModal,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        className: \"close-icon\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }\n      })))));\n    };\n    _this.renderModalBody = function () {\n      var _this$state = _this.state,\n        code2FA = _this$state.code2FA,\n        code2FAFocus = _this$state.code2FAFocus;\n      var code2FAClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': code2FAFocus\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-exchange-modal-submit-body pg-exchange-modal-submit-body-2fa\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: code2FAClass,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"text\",\n        label: \"2FA code\",\n        placeholder: \"2FA code\",\n        defaultLabel: \"\",\n        handleFocusInput: _this.handleClickFieldFocus('code2FAFocus'),\n        handleChangeInput: _this.handleChange2FACode,\n        inputValue: code2FA,\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        autoFocus: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      })));\n    };\n    _this.renderModalFooter = function () {\n      var code2FA = _this.state.code2FA;\n      var isValid2FA = code2FA.match('^[0-9]{6}$');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-exchange-modal-submit-footer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        block: true,\n        disabled: !isValid2FA,\n        onClick: _this.handleDisable2FA,\n        size: \"lg\",\n        variant: \"primary\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }\n      }, _this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.twoFactorAuthentication.disable'\n      })));\n    };\n    _this.handleChange2FACode = function (value) {\n      _this.setState({\n        code2FA: value\n      });\n    };\n    _this.handleDisable2FA = function () {\n      _this.props.toggle2fa({\n        code: _this.state.code2FA,\n        enable: false\n      });\n      _this.closeModal();\n      _this.handleChange2FACode('');\n    };\n    _this.closeModal = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n    _this.toggleChangeModal = function () {\n      _this.setState({\n        showChangeModal: !_this.state.showChangeModal\n      });\n    };\n    _this.handleNavigateTo2fa = function (enable2fa) {\n      if (enable2fa) {\n        _this.props.history.push('/security/2fa', {\n          enable2fa: enable2fa\n        });\n      } else {\n        _this.setState({\n          showModal: !_this.state.showModal\n        });\n      }\n    };\n    _this.handleClickFieldFocus = function (field) {\n      return function () {\n        _this.handleFieldFocus(field);\n      };\n    };\n    _this.handleFieldFocus = function (field) {\n      // @ts-ignore\n      _this.setState(function (prev) {\n        return _defineProperty({}, field, !prev[field]);\n      });\n    };\n    _this.state = {\n      showChangeModal: false,\n      showModal: false,\n      code2FA: '',\n      code2FAFocus: false\n    };\n    return _this;\n  }\n  _createClass(ProfileAuthDetailsComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (next.passwordChangeSuccess) {\n        this.setState({\n          showChangeModal: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        user = _this$props.user,\n        configs = _this$props.configs,\n        currentPasswordEntropy = _this$props.currentPasswordEntropy;\n      var modal = this.state.showChangeModal ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"cr-email-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-change-password-screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ChangePassword, {\n        handleChangePassword: this.props.changePassword,\n        title: this.props.intl.formatMessage({\n          id: 'page.body.profile.header.account.content.password.change'\n        }),\n        closeModal: this.toggleChangeModal,\n        configs: configs,\n        currentPasswordEntropy: currentPasswordEntropy,\n        fetchCurrentPasswordEntropy: this.props.fetchCurrentPasswordEntropy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }\n      })))) : null;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__box pg-profile-page__left-col__basic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__box-header pg-profile-page__left-col__basic__info-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__left-col__basic__info-row__block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row pg-profile-page__details-user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, user.email)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, \"UID: \", user.uid)), isUsernameEnabled() && user.username ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.username'\n      }), \": \", user.username)) : null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-profile-page__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.password'\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }, \"************\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-block mt-3 mb-3 btn-lg btn btn-primary w-25\",\n        onClick: this.toggleChangeModal,\n        size: \"lg\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.profile.header.account.content.password.button.change'\n      })), modal), this.renderProfileTwoFactor(), /*#__PURE__*/React.createElement(Modal, {\n        className: \"pg-profile-page__disable-2fa-modal\",\n        show: this.state.showModal,\n        header: this.renderModalHeader(),\n        content: this.renderModalBody(),\n        footer: this.renderModalFooter(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n  return ProfileAuthDetailsComponent;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state),\n    passwordChangeSuccess: selectChangePasswordSuccess(state),\n    currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n    configs: selectConfigs(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    changePassword: function changePassword(_ref2) {\n      var old_password = _ref2.old_password,\n        new_password = _ref2.new_password,\n        confirm_password = _ref2.confirm_password;\n      return dispatch(changePasswordFetch({\n        old_password: old_password,\n        new_password: new_password,\n        confirm_password: confirm_password\n      }));\n    },\n    toggle2fa: function toggle2fa(_ref3) {\n      var code = _ref3.code,\n        enable = _ref3.enable;\n      return dispatch(toggle2faFetch({\n        code: code,\n        enable: enable\n      }));\n    },\n    fetchCurrentPasswordEntropy: function fetchCurrentPasswordEntropy(payload) {\n      return dispatch(entropyPasswordFetch(payload));\n    }\n  };\n};\nvar ProfileAuthDetailsConnected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAuthDetailsComponent));\n// tslint:disable-next-line:no-any\nvar ProfileAuthDetails = withRouter(ProfileAuthDetailsConnected);\nexport { ProfileAuthDetails };","map":{"version":3,"names":["cr","React","Button","FormattedMessage","injectIntl","connect","withRouter","ProfileTwoFactorAuth","isUsernameEnabled","CloseIcon","ChangePassword","CustomInput","Modal","entropyPasswordFetch","selectConfigs","selectCurrentPasswordEntropy","selectUserInfo","changePasswordFetch","selectChangePasswordSuccess","toggle2faFetch","ProfileAuthDetailsComponent","props","renderProfileTwoFactor","user","otp","handleNavigateTo2fa","renderModalHeader","closeModal","renderModalBody","state","code2FA","code2FAFocus","code2FAClass","handleClickFieldFocus","handleChange2FACode","renderModalFooter","isValid2FA","match","handleDisable2FA","intl","formatMessage","id","value","setState","toggle2fa","code","enable","showModal","toggleChangeModal","showChangeModal","enable2fa","history","push","field","handleFieldFocus","prev","next","passwordChangeSuccess","configs","currentPasswordEntropy","modal","changePassword","fetchCurrentPasswordEntropy","email","uid","username","Component","mapStateToProps","mapDispatchToProps","dispatch","old_password","new_password","confirm_password","payload","ProfileAuthDetailsConnected","ProfileAuthDetails"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/ProfileAuthDetails/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ProfileTwoFactorAuth } from '../';\nimport { IntlProps } from '../../';\nimport { isUsernameEnabled } from '../../api';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { ChangePassword, CustomInput, Modal } from '../../components';\nimport {\n    Configs,\n    entropyPasswordFetch,\n    RootState,\n    selectConfigs,\n    selectCurrentPasswordEntropy,\n    selectUserInfo,\n    User,\n} from '../../modules';\nimport {\n    changePasswordFetch,\n    selectChangePasswordSuccess,\n    toggle2faFetch,\n} from '../../modules/user/profile';\n\n\ninterface ReduxProps {\n    user: User;\n    passwordChangeSuccess?: boolean;\n    configs: Configs;\n    currentPasswordEntropy: number;\n}\n\ninterface RouterProps {\n    history: History;\n}\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\n\ninterface DispatchProps {\n    changePassword: typeof changePasswordFetch;\n    clearPasswordChangeError: () => void;\n    toggle2fa: typeof toggle2faFetch;\n    fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n}\n\ninterface ProfileProps {\n    showModal: boolean;\n}\n\ninterface State {\n    showChangeModal: boolean;\n    showModal: boolean;\n    code2FA: string;\n    code2FAFocus: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & ProfileProps & IntlProps & OnChangeEvent;\n\nclass ProfileAuthDetailsComponent extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showChangeModal: false,\n            showModal: false,\n            code2FA: '',\n            code2FAFocus: false,\n        };\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (next.passwordChangeSuccess) {\n            this.setState({ showChangeModal: false });\n        }\n    }\n\n    public render() {\n        const {\n            user,\n            configs,\n            currentPasswordEntropy,\n        } = this.props;\n\n        const modal = this.state.showChangeModal ? (\n            <div className=\"cr-modal\">\n              <form className=\"cr-email-form\">\n                <div className=\"pg-change-password-screen\">\n                   <ChangePassword\n                        handleChangePassword={this.props.changePassword}\n                        title={this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password.change' })}\n                        closeModal={this.toggleChangeModal}\n                        configs={configs}\n                        currentPasswordEntropy={currentPasswordEntropy}\n                        fetchCurrentPasswordEntropy={this.props.fetchCurrentPasswordEntropy}\n                    />\n                </div>\n              </form>\n            </div>\n        ) : null;\n\n        return (\n            <div className=\"pg-profile-page__box pg-profile-page__left-col__basic\">\n                <div className=\"pg-profile-page__box-header pg-profile-page__left-col__basic__info-row\">\n                    <div className=\"pg-profile-page__left-col__basic__info-row__block\">\n                        <div className=\"pg-profile-page__row pg-profile-page__details-user\">\n                            <p>{user.email}</p>\n                        </div>\n                        <div className=\"pg-profile-page__row\">\n                            <h2>UID: {user.uid}</h2>\n                        </div>\n                        {isUsernameEnabled() && user.username ? (\n                            <div className=\"pg-profile-page__row\">\n                                <h2>{this.props.intl.formatMessage({ id: 'page.body.profile.header.account.username'})}: {user.username}\n                                </h2>\n                            </div>\n                        ) : null}\n                    </div>\n                </div>\n                <div className=\"pg-profile-page__row\">\n                    <div>\n                        <div className=\"pg-profile-page__label\">\n                            {this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password'})}\n                        </div>\n                        <div>\n                            ************\n                        </div>\n                    </div>\n                    <Button\n                        className=\"btn-block mt-3 mb-3 btn-lg btn btn-primary w-25\"\n                        onClick={this.toggleChangeModal}\n                        size=\"lg\"\n                        variant=\"primary\"\n                    >\n                        {this.props.intl.formatMessage({ id: 'page.body.profile.header.account.content.password.button.change'})}\n                    </Button>\n                    {modal}\n                </div>\n                {this.renderProfileTwoFactor()}\n                <Modal\n                    className=\"pg-profile-page__disable-2fa-modal\"\n                    show={this.state.showModal}\n                    header={this.renderModalHeader()}\n                    content={this.renderModalBody()}\n                    footer={this.renderModalFooter()}\n                />\n            </div>\n        );\n    }\n\n    private renderProfileTwoFactor = () => {\n        return (\n            <React.Fragment>\n                <div className=\"pg-profile-page__row\">\n                    <ProfileTwoFactorAuth is2faEnabled={this.props.user.otp} navigateTo2fa={this.handleNavigateTo2fa}/>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    private renderModalHeader = () => {\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        <FormattedMessage id=\"page.body.profile.header.account.content.twoFactorAuthentication.modalHeader\"/>\n                        <div className=\"cr-email-form__cros-icon\" onClick={this.closeModal}>\n                            <CloseIcon className=\"close-icon\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalBody = () => {\n        const { code2FA, code2FAFocus } = this.state;\n\n        const code2FAClass = cr('cr-email-form__group', {\n            'cr-email-form__group--focused': code2FAFocus,\n        });\n\n        return (\n            <div className=\"pg-exchange-modal-submit-body pg-exchange-modal-submit-body-2fa\">\n                <div className={code2FAClass}>\n                    <CustomInput\n                        type=\"text\"\n                        label=\"2FA code\"\n                        placeholder=\"2FA code\"\n                        defaultLabel=\"\"\n                        handleFocusInput={this.handleClickFieldFocus('code2FAFocus')}\n                        handleChangeInput={this.handleChange2FACode}\n                        inputValue={code2FA}\n                        classNameLabel=\"cr-email-form__label\"\n                        classNameInput=\"cr-email-form__input\"\n                        autoFocus={true}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalFooter = () => {\n        const { code2FA } = this.state;\n        const isValid2FA = code2FA.match('^[0-9]{6}$');\n\n        return (\n            <div className=\"pg-exchange-modal-submit-footer\">\n                <Button\n                    block={true}\n                    disabled={!isValid2FA}\n                    onClick={this.handleDisable2FA}\n                    size=\"lg\"\n                    variant=\"primary\"\n                >\n                    {this.props.intl.formatMessage({id: 'page.body.profile.header.account.content.twoFactorAuthentication.disable'})}\n                </Button>\n            </div>\n        );\n    };\n\n    private handleChange2FACode = (value: string) => {\n        this.setState({\n            code2FA: value,\n        });\n    };\n\n    private handleDisable2FA = () => {\n        this.props.toggle2fa({\n            code: this.state.code2FA,\n            enable: false,\n        });\n        this.closeModal();\n        this.handleChange2FACode('');\n    };\n\n    private closeModal = () => {\n        this.setState({\n            showModal: false,\n        });\n      };\n\n    private toggleChangeModal = () => {\n        this.setState({\n            showChangeModal: !this.state.showChangeModal,\n        });\n    };\n\n    private handleNavigateTo2fa = (enable2fa: boolean) => {\n        if (enable2fa) {\n            this.props.history.push('/security/2fa', { enable2fa });\n        } else {\n            this.setState({\n                showModal: !this.state.showModal,\n            });\n        }\n    };\n\n    private handleClickFieldFocus = (field: string) => () => {\n        this.handleFieldFocus(field);\n    };\n\n    private handleFieldFocus = (field: string) => {\n        // @ts-ignore\n        this.setState(prev => ({\n            [field]: !prev[field],\n        }));\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    user: selectUserInfo(state),\n    passwordChangeSuccess: selectChangePasswordSuccess(state),\n    currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n    configs: selectConfigs(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changePassword: ({ old_password, new_password, confirm_password }) =>\n        dispatch(changePasswordFetch({ old_password, new_password, confirm_password })),\n    toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n    fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n});\n\nconst ProfileAuthDetailsConnected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileAuthDetailsComponent));\n// tslint:disable-next-line:no-any\nconst ProfileAuthDetails = withRouter(ProfileAuthDetailsConnected as any);\n\nexport {\n    ProfileAuthDetails,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}