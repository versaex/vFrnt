{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\Customization\\\\Themes\\\\ColorSettings\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { handleConvertColorCode } from '../';\nimport { ArrowIcon } from '../../../../assets/images/customization/ArrowIcon';\nexport var ColorSettings = /*#__PURE__*/function (_React$Component) {\n  _inherits(ColorSettings, _React$Component);\n  var _super = _createSuper(ColorSettings);\n  function ColorSettings() {\n    var _this;\n    _classCallCheck(this, ColorSettings);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentItemColor: undefined\n    };\n    _this.getCurrentItemColor = function (item) {\n      var currentItemColor = _this.state.currentItemColor;\n      var bodyStyles = window.getComputedStyle(document.body);\n      var grbItemColor = handleConvertColorCode(item.key);\n      return currentItemColor || bodyStyles.getPropertyValue(grbItemColor);\n    };\n    _this.setCurrentItemColor = function (color) {\n      var _this$props = _this.props,\n        handleTriggerChartRebuild = _this$props.handleTriggerChartRebuild,\n        item = _this$props.item;\n      var rootElement = document.documentElement;\n      var newItemColor = color && color.rgb && \"\".concat(color.rgb.r, \", \").concat(color.rgb.g, \", \").concat(color.rgb.b);\n      if (rootElement && newItemColor) {\n        _this.handleSetCurrentItemColor(newItemColor);\n        rootElement.style.setProperty(item.key, newItemColor);\n        handleTriggerChartRebuild && handleTriggerChartRebuild();\n      }\n    };\n    _this.handleSetCurrentItemColor = function (colorToSet) {\n      if (colorToSet) {\n        _this.setState({\n          currentItemColor: \"rgb(\".concat(colorToSet, \")\")\n        });\n      } else {\n        _this.setState({\n          currentItemColor: ''\n        });\n      }\n    };\n    return _this;\n  }\n  _createClass(ColorSettings, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var item = this.props.item;\n      if (item && prevProps.item && JSON.stringify(item) !== JSON.stringify(prevProps.item)) {\n        this.handleSetCurrentItemColor();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n        handleCloseColorSettings = _this$props2.handleCloseColorSettings,\n        item = _this$props2.item,\n        translate = _this$props2.translate;\n      var settingsClass = classnames('pg-customization-color-settings', {\n        'pg-customization-color-settings--open': item.key\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: settingsClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-customization-color-settings__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-customization-color-settings__header__chevron\",\n        onClick: function onClick(e) {\n          return handleCloseColorSettings();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ArrowIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      })), item.title ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 35\n        }\n      }, translate(item.title)) : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-customization-color-settings__body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SketchPicker, {\n        color: this.getCurrentItemColor(item),\n        onChangeComplete: this.setCurrentItemColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return ColorSettings;\n}(React.Component);","map":{"version":3,"names":["classnames","React","SketchPicker","handleConvertColorCode","ArrowIcon","ColorSettings","state","currentItemColor","undefined","getCurrentItemColor","item","bodyStyles","window","getComputedStyle","document","body","grbItemColor","key","getPropertyValue","setCurrentItemColor","color","props","handleTriggerChartRebuild","rootElement","documentElement","newItemColor","rgb","r","g","b","handleSetCurrentItemColor","style","setProperty","colorToSet","setState","prevProps","JSON","stringify","handleCloseColorSettings","translate","settingsClass","e","title","Component"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/Customization/Themes/ColorSettings/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { handleConvertColorCode } from '../';\nimport { ArrowIcon } from '../../../../assets/images/customization/ArrowIcon';\nimport { ThemeColorTitleInterface } from '../../../../themes';\n\ninterface OwnProps {\n    handleCloseColorSettings: () => void;\n    item: ThemeColorTitleInterface;\n    translate: (key: string) => string;\n    handleTriggerChartRebuild?: () => void;\n}\n\ninterface State {\n    currentItemColor?: string;\n}\n\ntype Props = OwnProps;\n\nexport class ColorSettings extends React.Component<Props, State> {\n    public state = {\n        currentItemColor: undefined,\n    };\n\n    public componentDidUpdate(prevProps: Props) {\n        const { item } = this.props;\n\n        if (item && prevProps.item && JSON.stringify(item) !== JSON.stringify(prevProps.item)) {\n            this.handleSetCurrentItemColor();\n        }\n    }\n\n    public render() {\n        const {\n            handleCloseColorSettings,\n            item,\n            translate,\n        } = this.props;\n\n        const settingsClass = classnames('pg-customization-color-settings', {\n            'pg-customization-color-settings--open': item.key,\n        });\n\n        return (\n            <div className={settingsClass}>\n                <div className=\"pg-customization-color-settings__header\">\n                    <div\n                        className=\"pg-customization-color-settings__header__chevron\"\n                        onClick={e => handleCloseColorSettings()}\n                    >\n                        <ArrowIcon />\n                    </div>\n                    {item.title ? <span>{translate(item.title)}</span> : null}\n                </div>\n                <div className=\"pg-customization-color-settings__body\">\n                    <SketchPicker\n                        color={ this.getCurrentItemColor(item) }\n                        onChangeComplete={ this.setCurrentItemColor }\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private getCurrentItemColor = (item: ThemeColorTitleInterface) => {\n        const { currentItemColor } = this.state;\n        const bodyStyles = window.getComputedStyle(document.body);\n        const grbItemColor = handleConvertColorCode(item.key);\n\n        return currentItemColor || bodyStyles.getPropertyValue(grbItemColor);\n    };\n\n    private setCurrentItemColor = color => {\n        const { handleTriggerChartRebuild, item } = this.props;\n        const rootElement = document.documentElement;\n        const newItemColor = color && color.rgb && `${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}`;\n\n        if (rootElement && newItemColor) {\n            this.handleSetCurrentItemColor(newItemColor);\n            rootElement.style.setProperty(item.key, newItemColor);\n            handleTriggerChartRebuild && handleTriggerChartRebuild();\n        }\n    };\n\n    private handleSetCurrentItemColor = (colorToSet?: string) => {\n        if (colorToSet) {\n            this.setState({ currentItemColor: `rgb(${colorToSet})` });\n        } else {\n            this.setState({ currentItemColor: '' });\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}