{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar BufferUtil = require('../util/buffer');\nvar BN = require('../crypto/bn');\nvar BufferReader = function BufferReader(buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf);\n  }\n  if (_.isUndefined(buf)) {\n    return;\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    });\n  } else if (_.isString(buf)) {\n    var b = new Buffer(buf, 'hex');\n    if (b.length * 2 != buf.length) throw new TypeError('Invalid hex string');\n    this.set({\n      buf: b\n    });\n  } else if (_.isObject(buf)) {\n    var obj = buf;\n    this.set(obj);\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader');\n  }\n};\nBufferReader.prototype.set = function (obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  this.pos = obj.pos || this.pos || 0;\n  return this;\n};\nBufferReader.prototype.eof = function () {\n  return this.pos >= this.buf.length;\n};\nBufferReader.prototype.finished = BufferReader.prototype.eof;\nBufferReader.prototype.read = function (len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length');\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return buf;\n};\nBufferReader.prototype.readAll = function () {\n  var buf = this.buf.slice(this.pos, this.buf.length);\n  this.pos = this.buf.length;\n  return buf;\n};\nBufferReader.prototype.readUInt8 = function () {\n  var val = this.buf.readUInt8(this.pos);\n  this.pos = this.pos + 1;\n  return val;\n};\nBufferReader.prototype.readUInt16BE = function () {\n  var val = this.buf.readUInt16BE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\nBufferReader.prototype.readUInt16LE = function () {\n  var val = this.buf.readUInt16LE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\nBufferReader.prototype.readUInt32BE = function () {\n  var val = this.buf.readUInt32BE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\nBufferReader.prototype.readUInt32LE = function () {\n  var val = this.buf.readUInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\nBufferReader.prototype.readInt32LE = function () {\n  var val = this.buf.readInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\nBufferReader.prototype.readUInt64BEBN = function () {\n  var buf = this.buf.slice(this.pos, this.pos + 8);\n  var bn = BN.fromBuffer(buf);\n  this.pos = this.pos + 8;\n  return bn;\n};\nBufferReader.prototype.readUInt64LEBN = function () {\n  var second = this.buf.readUInt32LE(this.pos);\n  var first = this.buf.readUInt32LE(this.pos + 4);\n  var combined = first * 0x100000000 + second;\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn;\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined);\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);\n    bn = new BN(data, 10, 'le');\n  }\n  this.pos = this.pos + 8;\n  return bn;\n};\nBufferReader.prototype.readVarintNum = function () {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE();\n    case 0xFE:\n      return this.readUInt32LE();\n    case 0xFF:\n      var bn = this.readUInt64LEBN();\n      var n = bn.toNumber();\n      if (n <= Math.pow(2, 53)) {\n        return n;\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN');\n      }\n      break;\n    default:\n      return first;\n  }\n};\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function () {\n  var len = this.readVarintNum();\n  var buf = this.read(len);\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' + 'Expected to read: ' + len + ' and read ' + buf.length);\n  return buf;\n};\nBufferReader.prototype.readVarintBuf = function () {\n  var first = this.buf.readUInt8(this.pos);\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2);\n    case 0xFE:\n      return this.read(1 + 4);\n    case 0xFF:\n      return this.read(1 + 8);\n    default:\n      return this.read(1);\n  }\n};\nBufferReader.prototype.readVarintBN = function () {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE());\n    case 0xFE:\n      return new BN(this.readUInt32LE());\n    case 0xFF:\n      return this.readUInt64LEBN();\n    default:\n      return new BN(first);\n  }\n};\nBufferReader.prototype.reverse = function () {\n  var buf = new Buffer(this.buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i];\n  }\n  this.buf = buf;\n  return this;\n};\nBufferReader.prototype.readReverse = function (len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length;\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return BufferUtil.reverse(buf);\n};\nmodule.exports = BufferReader;","map":{"version":3,"names":["_","require","$","BufferUtil","BN","BufferReader","buf","isUndefined","Buffer","isBuffer","set","isString","b","length","TypeError","isObject","obj","prototype","undefined","pos","eof","finished","read","len","checkArgument","slice","readAll","readUInt8","val","readUInt16BE","readUInt16LE","readUInt32BE","readUInt32LE","readInt32LE","readUInt64BEBN","bn","fromBuffer","readUInt64LEBN","second","first","combined","data","Array","call","readVarintNum","n","toNumber","Math","pow","Error","readVarLengthBuffer","checkState","readVarintBuf","readVarintBN","reverse","i","readReverse","module","exports"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/encoding/bufferreader.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar BufferUtil = require('../util/buffer');\nvar BN = require('../crypto/bn');\n\nvar BufferReader = function BufferReader(buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf);\n  }\n  if (_.isUndefined(buf)) {\n    return;\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    });\n  } else if (_.isString(buf)) {\n    var b = new Buffer(buf, 'hex');\n    if (b.length * 2 != buf.length) \n      throw new TypeError('Invalid hex string');\n\n    this.set({\n      buf: b,\n    });\n  } else if (_.isObject(buf)) {\n    var obj = buf;\n    this.set(obj);\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader');\n  }\n};\n\nBufferReader.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  this.pos = obj.pos || this.pos || 0;\n  return this;\n};\n\nBufferReader.prototype.eof = function() {\n  return this.pos >= this.buf.length;\n};\n\nBufferReader.prototype.finished = BufferReader.prototype.eof;\n\nBufferReader.prototype.read = function(len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length');\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return buf;\n};\n\nBufferReader.prototype.readAll = function() {\n  var buf = this.buf.slice(this.pos, this.buf.length);\n  this.pos = this.buf.length;\n  return buf;\n};\n\nBufferReader.prototype.readUInt8 = function() {\n  var val = this.buf.readUInt8(this.pos);\n  this.pos = this.pos + 1;\n  return val;\n};\n\nBufferReader.prototype.readUInt16BE = function() {\n  var val = this.buf.readUInt16BE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt16LE = function() {\n  var val = this.buf.readUInt16LE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt32BE = function() {\n  var val = this.buf.readUInt32BE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt32LE = function() {\n  var val = this.buf.readUInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readInt32LE = function() {\n  var val = this.buf.readInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt64BEBN = function() {\n  var buf = this.buf.slice(this.pos, this.pos + 8);\n  var bn = BN.fromBuffer(buf);\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readUInt64LEBN = function() {\n  var second = this.buf.readUInt32LE(this.pos);\n  var first = this.buf.readUInt32LE(this.pos + 4);\n  var combined = (first * 0x100000000) + second;\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn;\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined);\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);\n    bn = new BN(data, 10, 'le');\n  }\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readVarintNum = function() {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE();\n    case 0xFE:\n      return this.readUInt32LE();\n    case 0xFF:\n      var bn = this.readUInt64LEBN();\n      var n = bn.toNumber();\n      if (n <= Math.pow(2, 53)) {\n        return n;\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN');\n      }\n      break;\n    default:\n      return first;\n  }\n};\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function() {\n  var len = this.readVarintNum();\n  var buf = this.read(len);\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +\n    'Expected to read: ' + len + ' and read ' + buf.length);\n  return buf;\n};\n\nBufferReader.prototype.readVarintBuf = function() {\n  var first = this.buf.readUInt8(this.pos);\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2);\n    case 0xFE:\n      return this.read(1 + 4);\n    case 0xFF:\n      return this.read(1 + 8);\n    default:\n      return this.read(1);\n  }\n};\n\nBufferReader.prototype.readVarintBN = function() {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE());\n    case 0xFE:\n      return new BN(this.readUInt32LE());\n    case 0xFF:\n      return this.readUInt64LEBN();\n    default:\n      return new BN(first);\n  }\n};\n\nBufferReader.prototype.reverse = function() {\n  var buf = new Buffer(this.buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i];\n  }\n  this.buf = buf;\n  return this;\n};\n\nBufferReader.prototype.readReverse = function(len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length;\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return BufferUtil.reverse(buf);\n};\n\nmodule.exports = BufferReader;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACzB,IAAIC,CAAC,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACxC,IAAIE,UAAU,GAAGF,OAAO,CAAC,gBAAgB,CAAC;AAC1C,IAAIG,EAAE,GAAGH,OAAO,CAAC,cAAc,CAAC;AAEhC,IAAII,YAAY,GAAG,SAASA,YAAY,CAACC,GAAG,EAAE;EAC5C,IAAI,EAAE,IAAI,YAAYD,YAAY,CAAC,EAAE;IACnC,OAAO,IAAIA,YAAY,CAACC,GAAG,CAAC;EAC9B;EACA,IAAIN,CAAC,CAACO,WAAW,CAACD,GAAG,CAAC,EAAE;IACtB;EACF;EACA,IAAIE,MAAM,CAACC,QAAQ,CAACH,GAAG,CAAC,EAAE;IACxB,IAAI,CAACI,GAAG,CAAC;MACPJ,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIN,CAAC,CAACW,QAAQ,CAACL,GAAG,CAAC,EAAE;IAC1B,IAAIM,CAAC,GAAG,IAAIJ,MAAM,CAACF,GAAG,EAAE,KAAK,CAAC;IAC9B,IAAIM,CAAC,CAACC,MAAM,GAAG,CAAC,IAAIP,GAAG,CAACO,MAAM,EAC5B,MAAM,IAAIC,SAAS,CAAC,oBAAoB,CAAC;IAE3C,IAAI,CAACJ,GAAG,CAAC;MACPJ,GAAG,EAAEM;IACP,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIZ,CAAC,CAACe,QAAQ,CAACT,GAAG,CAAC,EAAE;IAC1B,IAAIU,GAAG,GAAGV,GAAG;IACb,IAAI,CAACI,GAAG,CAACM,GAAG,CAAC;EACf,CAAC,MAAM;IACL,MAAM,IAAIF,SAAS,CAAC,wCAAwC,CAAC;EAC/D;AACF,CAAC;AAEDT,YAAY,CAACY,SAAS,CAACP,GAAG,GAAG,UAASM,GAAG,EAAE;EACzC,IAAI,CAACV,GAAG,GAAGU,GAAG,CAACV,GAAG,IAAI,IAAI,CAACA,GAAG,IAAIY,SAAS;EAC3C,IAAI,CAACC,GAAG,GAAGH,GAAG,CAACG,GAAG,IAAI,IAAI,CAACA,GAAG,IAAI,CAAC;EACnC,OAAO,IAAI;AACb,CAAC;AAEDd,YAAY,CAACY,SAAS,CAACG,GAAG,GAAG,YAAW;EACtC,OAAO,IAAI,CAACD,GAAG,IAAI,IAAI,CAACb,GAAG,CAACO,MAAM;AACpC,CAAC;AAEDR,YAAY,CAACY,SAAS,CAACI,QAAQ,GAAGhB,YAAY,CAACY,SAAS,CAACG,GAAG;AAE5Df,YAAY,CAACY,SAAS,CAACK,IAAI,GAAG,UAASC,GAAG,EAAE;EAC1CrB,CAAC,CAACsB,aAAa,CAAC,CAACxB,CAAC,CAACO,WAAW,CAACgB,GAAG,CAAC,EAAE,uBAAuB,CAAC;EAC7D,IAAIjB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACmB,KAAK,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGI,GAAG,CAAC;EAClD,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACA,GAAG,GAAGI,GAAG;EACzB,OAAOjB,GAAG;AACZ,CAAC;AAEDD,YAAY,CAACY,SAAS,CAACS,OAAO,GAAG,YAAW;EAC1C,IAAIpB,GAAG,GAAG,IAAI,CAACA,GAAG,CAACmB,KAAK,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACb,GAAG,CAACO,MAAM,CAAC;EACnD,IAAI,CAACM,GAAG,GAAG,IAAI,CAACb,GAAG,CAACO,MAAM;EAC1B,OAAOP,GAAG;AACZ,CAAC;AAEDD,YAAY,CAACY,SAAS,CAACU,SAAS,GAAG,YAAW;EAC5C,IAAIC,GAAG,GAAG,IAAI,CAACtB,GAAG,CAACqB,SAAS,CAAC,IAAI,CAACR,GAAG,CAAC;EACtC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACY,YAAY,GAAG,YAAW;EAC/C,IAAID,GAAG,GAAG,IAAI,CAACtB,GAAG,CAACuB,YAAY,CAAC,IAAI,CAACV,GAAG,CAAC;EACzC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACa,YAAY,GAAG,YAAW;EAC/C,IAAIF,GAAG,GAAG,IAAI,CAACtB,GAAG,CAACwB,YAAY,CAAC,IAAI,CAACX,GAAG,CAAC;EACzC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACc,YAAY,GAAG,YAAW;EAC/C,IAAIH,GAAG,GAAG,IAAI,CAACtB,GAAG,CAACyB,YAAY,CAAC,IAAI,CAACZ,GAAG,CAAC;EACzC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACe,YAAY,GAAG,YAAW;EAC/C,IAAIJ,GAAG,GAAG,IAAI,CAACtB,GAAG,CAAC0B,YAAY,CAAC,IAAI,CAACb,GAAG,CAAC;EACzC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACgB,WAAW,GAAG,YAAW;EAC9C,IAAIL,GAAG,GAAG,IAAI,CAACtB,GAAG,CAAC2B,WAAW,CAAC,IAAI,CAACd,GAAG,CAAC;EACxC,IAAI,CAACA,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOS,GAAG;AACZ,CAAC;AAEDvB,YAAY,CAACY,SAAS,CAACiB,cAAc,GAAG,YAAW;EACjD,IAAI5B,GAAG,GAAG,IAAI,CAACA,GAAG,CAACmB,KAAK,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACA,GAAG,GAAG,CAAC,CAAC;EAChD,IAAIgB,EAAE,GAAG/B,EAAE,CAACgC,UAAU,CAAC9B,GAAG,CAAC;EAC3B,IAAI,CAACa,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOgB,EAAE;AACX,CAAC;AAED9B,YAAY,CAACY,SAAS,CAACoB,cAAc,GAAG,YAAW;EACjD,IAAIC,MAAM,GAAG,IAAI,CAAChC,GAAG,CAAC0B,YAAY,CAAC,IAAI,CAACb,GAAG,CAAC;EAC5C,IAAIoB,KAAK,GAAG,IAAI,CAACjC,GAAG,CAAC0B,YAAY,CAAC,IAAI,CAACb,GAAG,GAAG,CAAC,CAAC;EAC/C,IAAIqB,QAAQ,GAAID,KAAK,GAAG,WAAW,GAAID,MAAM;EAC7C;EACA;EACA;EACA;EACA;EACA;EACA,IAAIH,EAAE;EACN,IAAIK,QAAQ,IAAI,gBAAgB,EAAE;IAChCL,EAAE,GAAG,IAAI/B,EAAE,CAACoC,QAAQ,CAAC;EACvB,CAAC,MAAM;IACL,IAAIC,IAAI,GAAGC,KAAK,CAACzB,SAAS,CAACQ,KAAK,CAACkB,IAAI,CAAC,IAAI,CAACrC,GAAG,EAAE,IAAI,CAACa,GAAG,EAAE,IAAI,CAACA,GAAG,GAAG,CAAC,CAAC;IACvEgB,EAAE,GAAG,IAAI/B,EAAE,CAACqC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;EAC7B;EACA,IAAI,CAACtB,GAAG,GAAG,IAAI,CAACA,GAAG,GAAG,CAAC;EACvB,OAAOgB,EAAE;AACX,CAAC;AAED9B,YAAY,CAACY,SAAS,CAAC2B,aAAa,GAAG,YAAW;EAChD,IAAIL,KAAK,GAAG,IAAI,CAACZ,SAAS,EAAE;EAC5B,QAAQY,KAAK;IACX,KAAK,IAAI;MACP,OAAO,IAAI,CAACT,YAAY,EAAE;IAC5B,KAAK,IAAI;MACP,OAAO,IAAI,CAACE,YAAY,EAAE;IAC5B,KAAK,IAAI;MACP,IAAIG,EAAE,GAAG,IAAI,CAACE,cAAc,EAAE;MAC9B,IAAIQ,CAAC,GAAGV,EAAE,CAACW,QAAQ,EAAE;MACrB,IAAID,CAAC,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;QACxB,OAAOH,CAAC;MACV,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAAC,yDAAyD,CAAC;MAC5E;MACA;IACF;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA;AACA;AACAlC,YAAY,CAACY,SAAS,CAACiC,mBAAmB,GAAG,YAAW;EACtD,IAAI3B,GAAG,GAAG,IAAI,CAACqB,aAAa,EAAE;EAC9B,IAAItC,GAAG,GAAG,IAAI,CAACgB,IAAI,CAACC,GAAG,CAAC;EACxBrB,CAAC,CAACiD,UAAU,CAAC7C,GAAG,CAACO,MAAM,KAAKU,GAAG,EAAE,iDAAiD,GAChF,oBAAoB,GAAGA,GAAG,GAAG,YAAY,GAAGjB,GAAG,CAACO,MAAM,CAAC;EACzD,OAAOP,GAAG;AACZ,CAAC;AAEDD,YAAY,CAACY,SAAS,CAACmC,aAAa,GAAG,YAAW;EAChD,IAAIb,KAAK,GAAG,IAAI,CAACjC,GAAG,CAACqB,SAAS,CAAC,IAAI,CAACR,GAAG,CAAC;EACxC,QAAQoB,KAAK;IACX,KAAK,IAAI;MACP,OAAO,IAAI,CAACjB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,KAAK,IAAI;MACP,OAAO,IAAI,CAACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB,KAAK,IAAI;MACP,OAAO,IAAI,CAACA,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACzB;MACE,OAAO,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;EAAC;AAE1B,CAAC;AAEDjB,YAAY,CAACY,SAAS,CAACoC,YAAY,GAAG,YAAW;EAC/C,IAAId,KAAK,GAAG,IAAI,CAACZ,SAAS,EAAE;EAC5B,QAAQY,KAAK;IACX,KAAK,IAAI;MACP,OAAO,IAAInC,EAAE,CAAC,IAAI,CAAC0B,YAAY,EAAE,CAAC;IACpC,KAAK,IAAI;MACP,OAAO,IAAI1B,EAAE,CAAC,IAAI,CAAC4B,YAAY,EAAE,CAAC;IACpC,KAAK,IAAI;MACP,OAAO,IAAI,CAACK,cAAc,EAAE;IAC9B;MACE,OAAO,IAAIjC,EAAE,CAACmC,KAAK,CAAC;EAAC;AAE3B,CAAC;AAEDlC,YAAY,CAACY,SAAS,CAACqC,OAAO,GAAG,YAAW;EAC1C,IAAIhD,GAAG,GAAG,IAAIE,MAAM,CAAC,IAAI,CAACF,GAAG,CAACO,MAAM,CAAC;EACrC,KAAK,IAAI0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjD,GAAG,CAACO,MAAM,EAAE0C,CAAC,EAAE,EAAE;IACnCjD,GAAG,CAACiD,CAAC,CAAC,GAAG,IAAI,CAACjD,GAAG,CAAC,IAAI,CAACA,GAAG,CAACO,MAAM,GAAG,CAAC,GAAG0C,CAAC,CAAC;EAC5C;EACA,IAAI,CAACjD,GAAG,GAAGA,GAAG;EACd,OAAO,IAAI;AACb,CAAC;AAEDD,YAAY,CAACY,SAAS,CAACuC,WAAW,GAAG,UAASjC,GAAG,EAAE;EACjD,IAAIvB,CAAC,CAACO,WAAW,CAACgB,GAAG,CAAC,EAAE;IACtBA,GAAG,GAAG,IAAI,CAACjB,GAAG,CAACO,MAAM;EACvB;EACA,IAAIP,GAAG,GAAG,IAAI,CAACA,GAAG,CAACmB,KAAK,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGI,GAAG,CAAC;EAClD,IAAI,CAACJ,GAAG,GAAG,IAAI,CAACA,GAAG,GAAGI,GAAG;EACzB,OAAOpB,UAAU,CAACmD,OAAO,CAAChD,GAAG,CAAC;AAChC,CAAC;AAEDmD,MAAM,CAACC,OAAO,GAAGrD,YAAY"},"metadata":{},"sourceType":"script"}