{"ast":null,"code":"import { ERROR_HANDLE_DATA, ERROR_HANDLE_FETCH } from './constants';\nexport var sendError = function sendError(payload) {\n  return {\n    type: ERROR_HANDLE_FETCH,\n    payload: payload\n  };\n};\nexport var getErrorData = function getErrorData() {\n  return {\n    type: ERROR_HANDLE_DATA\n  };\n};","map":{"version":3,"names":["ERROR_HANDLE_DATA","ERROR_HANDLE_FETCH","sendError","payload","type","getErrorData"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/public/errorHandler/actions.ts"],"sourcesContent":["import { ERROR_HANDLE_DATA, ERROR_HANDLE_FETCH } from './constants';\n\nexport interface ErrorHandlerFetch {\n    type: typeof ERROR_HANDLE_FETCH;\n    payload: {\n        processingType: 'sentry' | 'alert' | 'console';\n        error: any;\n        extraOptions?: any;\n    };\n}\n\ninterface ErrorHandlerData {\n    type: typeof ERROR_HANDLE_DATA;\n}\n\nexport type ErrorHandlerAction = ErrorHandlerFetch | ErrorHandlerData;\n\nexport const sendError = (payload: ErrorHandlerFetch['payload']): ErrorHandlerFetch => ({\n    type: ERROR_HANDLE_FETCH,\n    payload,\n});\n\nexport const getErrorData = (): ErrorHandlerData => ({\n    type: ERROR_HANDLE_DATA,\n});\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,kBAAkB,QAAQ,aAAa;AAiBnE,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAS,CAAIC,OAAqC;EAAA,OAAyB;IACpFC,IAAI,EAAEH,kBAAkB;IACxBE,OAAO,EAAPA;EACJ,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAY;EAAA,OAA4B;IACjDD,IAAI,EAAEJ;EACV,CAAC;AAAA,CAAC"},"metadata":{},"sourceType":"module"}