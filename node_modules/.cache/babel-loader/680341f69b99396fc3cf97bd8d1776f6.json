{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\Order\\\\index.tsx\";\n/* tslint:disable */\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { formatWithSeparators, Order, Decimal } from '../../components';\nimport { alertPush, selectCurrentPrice, selectDepthAsks, selectDepthBids, selectMobileDeviceState, selectUserLoggedIn, selectWallets, setCurrentPrice as _setCurrentPrice, walletsFetch as _walletsFetch } from '../../modules';\nimport { selectCurrentMarket, selectCurrentMarketFilters, selectMarketTickers } from '../../modules/public/markets';\nimport { orderExecuteFetch, selectOrderExecuteLoading } from '../../modules/user/orders';\nvar OrderInsert = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(OrderInsert, _React$PureComponent);\n  var _super = _createSuper(OrderInsert);\n  function OrderInsert(props) {\n    var _this;\n    _classCallCheck(this, OrderInsert);\n    _this = _super.call(this, props);\n    _this.orderRef = void 0;\n    _this.handleSubmit = function (value) {\n      var currentMarket = _this.props.currentMarket;\n      if (!currentMarket) {\n        return;\n      }\n      var amount = value.amount,\n        available = value.available,\n        orderType = value.orderType,\n        price = value.price,\n        type = value.type;\n      _this.props.setCurrentPrice(0);\n      var resultData = {\n        market: currentMarket.id,\n        side: type,\n        volume: amount.toString(),\n        ord_type: orderType.toLowerCase()\n      };\n      var order = orderType === 'Limit' ? _objectSpread(_objectSpread({}, resultData), {}, {\n        price: price.toString()\n      }) : resultData;\n      var orderAllowed = true;\n      if (+resultData.volume < +currentMarket.min_amount) {\n        _this.props.pushAlert({\n          message: [_this.translate('error.order.create.minAmount', {\n            amount: Decimal.format(currentMarket.min_amount, currentMarket.amount_precision, ','),\n            currency: currentMarket.base_unit.toUpperCase()\n          })],\n          type: 'error'\n        });\n        orderAllowed = false;\n      }\n      if (+price < +currentMarket.min_price) {\n        _this.props.pushAlert({\n          message: [_this.translate('error.order.create.minPrice', {\n            price: Decimal.format(currentMarket.min_price, currentMarket.price_precision, ','),\n            currency: currentMarket.quote_unit.toUpperCase()\n          })],\n          type: 'error'\n        });\n        orderAllowed = false;\n      }\n      if (+currentMarket.max_price && +price > +currentMarket.max_price) {\n        _this.props.pushAlert({\n          message: [_this.translate('error.order.create.maxPrice', {\n            price: Decimal.format(currentMarket.max_price, currentMarket.price_precision, ','),\n            currency: currentMarket.quote_unit.toUpperCase()\n          })],\n          type: 'error'\n        });\n        orderAllowed = false;\n      }\n      if (+available < +amount * +price && order.side === 'buy' || +available < +amount && order.side === 'sell') {\n        _this.props.pushAlert({\n          message: [_this.translate('error.order.create.available', {\n            available: formatWithSeparators(String(available), ','),\n            currency: order.side === 'buy' ? currentMarket.quote_unit.toUpperCase() : currentMarket.base_unit.toUpperCase()\n          })],\n          type: 'error'\n        });\n        orderAllowed = false;\n      }\n      if (orderAllowed) {\n        _this.props.orderExecute(order);\n      }\n    };\n    _this.getOrderType = function (index, label) {\n      _this.setState({\n        orderSide: label.toLowerCase()\n      });\n    };\n    _this.listenInputPrice = function () {\n      _this.setState({\n        priceLimit: undefined\n      });\n      _this.props.setCurrentPrice(0);\n    };\n    _this.translate = function (id, value) {\n      return _this.props.intl.formatMessage({\n        id: id\n      }, _objectSpread({}, value));\n    };\n    _this.getOrderTypes = [_this.translate('page.body.trade.header.newOrder.content.orderType.limit'), _this.translate('page.body.trade.header.newOrder.content.orderType.market')];\n    _this.state = {\n      orderSide: 'buy',\n      priceLimit: undefined,\n      width: 0\n    };\n    _this.orderRef = React.createRef();\n    return _this;\n  }\n  _createClass(OrderInsert, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.wallets.length) {\n        this.props.walletsFetch();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n        this.setState({\n          width: this.orderRef.current.clientWidth\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      var userLoggedIn = this.props.userLoggedIn;\n      if (userLoggedIn && !next.wallets.length) {\n        this.props.walletsFetch();\n      }\n      if (+next.currentPrice && next.currentPrice !== this.state.priceLimit) {\n        this.setState({\n          priceLimit: +next.currentPrice\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        asks = _this$props.asks,\n        bids = _this$props.bids,\n        currentMarket = _this$props.currentMarket,\n        currentMarketFilters = _this$props.currentMarketFilters,\n        defaultTabIndex = _this$props.defaultTabIndex,\n        executeLoading = _this$props.executeLoading,\n        isMobileDevice = _this$props.isMobileDevice,\n        marketTickers = _this$props.marketTickers,\n        wallets = _this$props.wallets;\n      var priceLimit = this.state.priceLimit;\n      if (!currentMarket) {\n        return null;\n      }\n      var walletBase = this.getWallet(currentMarket.base_unit, wallets);\n      var walletQuote = this.getWallet(currentMarket.quote_unit, wallets);\n      var currentTicker = marketTickers[currentMarket.id];\n      var defaultCurrentTicker = {\n        last: '0'\n      };\n      var headerContent = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-table-header__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cr-title-component\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.body.trade.header.newOrder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 53\n        }\n      })));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'pg-order',\n        ref: this.orderRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, this.state.width > 448 ? headerContent : undefined, /*#__PURE__*/React.createElement(Order, {\n        asks: asks,\n        bids: bids,\n        disabled: executeLoading,\n        from: currentMarket.quote_unit,\n        availableBase: this.getAvailableValue(walletBase),\n        availableQuote: this.getAvailableValue(walletQuote),\n        onSubmit: this.handleSubmit,\n        priceMarketBuy: Number((currentTicker || defaultCurrentTicker).last),\n        priceMarketSell: Number((currentTicker || defaultCurrentTicker).last),\n        priceLimit: priceLimit,\n        to: currentMarket.base_unit,\n        handleSendType: this.getOrderType,\n        orderTypes: this.getOrderTypes,\n        currentMarketAskPrecision: currentMarket.amount_precision,\n        currentMarketBidPrecision: currentMarket.price_precision,\n        width: this.state.width,\n        listenInputPrice: this.listenInputPrice,\n        defaultTabIndex: defaultTabIndex,\n        currentMarketFilters: currentMarketFilters,\n        isMobileDevice: isMobileDevice,\n        translate: this.translate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }), executeLoading && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-order--loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 71\n        }\n      })));\n    }\n  }, {\n    key: \"getWallet\",\n    value: function getWallet(currency, wallets) {\n      var currencyLower = currency.toLowerCase();\n      return wallets.find(function (w) {\n        return w.currency === currencyLower;\n      });\n    }\n  }, {\n    key: \"getAvailableValue\",\n    value: function getAvailableValue(wallet) {\n      return wallet && wallet.balance ? Number(wallet.balance) : 0;\n    }\n  }]);\n  return OrderInsert;\n}(React.PureComponent);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    currentMarket: selectCurrentMarket(state),\n    currentMarketFilters: selectCurrentMarketFilters(state),\n    executeLoading: selectOrderExecuteLoading(state),\n    marketTickers: selectMarketTickers(state),\n    wallets: selectWallets(state),\n    currentPrice: selectCurrentPrice(state),\n    userLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    walletsFetch: function walletsFetch() {\n      return dispatch(_walletsFetch());\n    },\n    orderExecute: function orderExecute(payload) {\n      return dispatch(orderExecuteFetch(payload));\n    },\n    pushAlert: function pushAlert(payload) {\n      return dispatch(alertPush(payload));\n    },\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\n\n// tslint:disable-next-line no-any\nvar OrderComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderInsert));\nexport { OrderComponent };","map":{"version":3,"names":["React","Spinner","FormattedMessage","injectIntl","connect","formatWithSeparators","Order","Decimal","alertPush","selectCurrentPrice","selectDepthAsks","selectDepthBids","selectMobileDeviceState","selectUserLoggedIn","selectWallets","setCurrentPrice","walletsFetch","selectCurrentMarket","selectCurrentMarketFilters","selectMarketTickers","orderExecuteFetch","selectOrderExecuteLoading","OrderInsert","props","orderRef","handleSubmit","value","currentMarket","amount","available","orderType","price","type","resultData","market","id","side","volume","toString","ord_type","toLowerCase","order","orderAllowed","min_amount","pushAlert","message","translate","format","amount_precision","currency","base_unit","toUpperCase","min_price","price_precision","quote_unit","max_price","String","orderExecute","getOrderType","index","label","setState","orderSide","listenInputPrice","priceLimit","undefined","intl","formatMessage","getOrderTypes","state","width","createRef","wallets","length","current","clientWidth","next","userLoggedIn","currentPrice","asks","bids","currentMarketFilters","defaultTabIndex","executeLoading","isMobileDevice","marketTickers","walletBase","getWallet","walletQuote","currentTicker","defaultCurrentTicker","last","headerContent","getAvailableValue","Number","currencyLower","find","w","wallet","balance","PureComponent","mapStateToProps","mapDispatchToProps","dispatch","payload","OrderComponent"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/Order/index.tsx"],"sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect } from 'react-redux';\nimport {\n    formatWithSeparators,\n    Order,\n    OrderProps,\n    Decimal,\n} from '../../components';\nimport { FilterPrice } from '../../filters';\nimport { IntlProps } from '../../';\nimport {\n    alertPush,\n    RootState,\n    selectCurrentPrice,\n    selectDepthAsks,\n    selectDepthBids,\n    selectMobileDeviceState,\n    selectUserLoggedIn,\n    selectWallets,\n    setCurrentPrice,\n    Wallet,\n    walletsFetch,\n} from '../../modules';\nimport {\n    Market,\n    selectCurrentMarket,\n    selectCurrentMarketFilters,\n    selectMarketTickers,\n} from '../../modules/public/markets';\nimport {\n    orderExecuteFetch,\n    selectOrderExecuteLoading,\n} from '../../modules/user/orders';\n\ninterface ReduxProps {\n    currentMarket: Market | undefined;\n    currentMarketFilters: FilterPrice[];\n    executeLoading: boolean;\n    marketTickers: {\n        [key: string]: {\n            last: string;\n        },\n    };\n    bids: string[][];\n    asks: string[][];\n    wallets: Wallet[];\n    currentPrice: number | undefined;\n    isMobileDevice: boolean;\n}\n\ninterface StoreProps {\n    orderSide: string;\n    priceLimit: number | undefined;\n    width: number;\n}\n\ninterface DispatchProps {\n    walletsFetch: typeof walletsFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n    orderExecute: typeof orderExecuteFetch;\n    pushAlert: typeof alertPush;\n}\n\ninterface OwnProps {\n    userLoggedIn: boolean;\n    currentPrice: string;\n    defaultTabIndex?: number;\n}\n\ntype Props = ReduxProps & DispatchProps & OwnProps & IntlProps;\n\nclass OrderInsert extends React.PureComponent<Props, StoreProps> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            orderSide: 'buy',\n            priceLimit: undefined,\n            width: 0,\n        };\n\n        this.orderRef = React.createRef();\n    }\n\n    private orderRef;\n\n    public componentDidMount() {\n        if (!this.props.wallets.length) {\n            this.props.walletsFetch();\n        }\n    }\n\n    public componentDidUpdate() {\n        if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n            this.setState({\n                width: this.orderRef.current.clientWidth,\n            });\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        const { userLoggedIn } = this.props;\n\n        if (userLoggedIn && !next.wallets.length) {\n            this.props.walletsFetch();\n        }\n\n        if (+next.currentPrice && next.currentPrice !== this.state.priceLimit) {\n            this.setState({\n                priceLimit: +next.currentPrice,\n            });\n        }\n    }\n\n    public render() {\n        const {\n            asks,\n            bids,\n            currentMarket,\n            currentMarketFilters,\n            defaultTabIndex,\n            executeLoading,\n            isMobileDevice,\n            marketTickers,\n            wallets,\n        } = this.props;\n        const { priceLimit } = this.state;\n\n        if (!currentMarket) {\n            return null;\n        }\n\n        const walletBase = this.getWallet(currentMarket.base_unit, wallets);\n        const walletQuote = this.getWallet(currentMarket.quote_unit, wallets);\n\n        const currentTicker = marketTickers[currentMarket.id];\n        const defaultCurrentTicker = { last: '0' };\n        const headerContent = (\n            <div className=\"cr-table-header__content\">\n                <div className=\"cr-title-component\"><FormattedMessage id=\"page.body.trade.header.newOrder\" /></div>\n            </div>\n        );\n\n        return (\n            <div className={'pg-order'} ref={this.orderRef}>\n                {this.state.width > 448 ? headerContent : undefined}\n                <Order\n                    asks={asks}\n                    bids={bids}\n                    disabled={executeLoading}\n                    from={currentMarket.quote_unit}\n                    availableBase={this.getAvailableValue(walletBase)}\n                    availableQuote={this.getAvailableValue(walletQuote)}\n                    onSubmit={this.handleSubmit}\n                    priceMarketBuy={Number((currentTicker || defaultCurrentTicker).last)}\n                    priceMarketSell={Number((currentTicker || defaultCurrentTicker).last)}\n                    priceLimit={priceLimit}\n                    to={currentMarket.base_unit}\n                    handleSendType={this.getOrderType}\n                    orderTypes={this.getOrderTypes}\n                    currentMarketAskPrecision={currentMarket.amount_precision}\n                    currentMarketBidPrecision={currentMarket.price_precision}\n                    width={this.state.width}\n                    listenInputPrice={this.listenInputPrice}\n                    defaultTabIndex={defaultTabIndex}\n                    currentMarketFilters={currentMarketFilters}\n                    isMobileDevice={isMobileDevice}\n                    translate={this.translate}\n                />\n                {executeLoading && <div className=\"pg-order--loading\"><Spinner animation=\"border\" variant=\"primary\" /></div>}\n            </div>\n        );\n    }\n\n    private handleSubmit = (value: OrderProps) => {\n        const { currentMarket } = this.props;\n\n        if (!currentMarket) {\n            return;\n        }\n\n        const {\n            amount,\n            available,\n            orderType,\n            price,\n            type,\n        } = value;\n\n        this.props.setCurrentPrice(0);\n\n        const resultData = {\n            market: currentMarket.id,\n            side: type,\n            volume: amount.toString(),\n            ord_type: (orderType as string).toLowerCase(),\n        };\n\n        const order = orderType === 'Limit' ? { ...resultData, price: price.toString() } : resultData;\n        let orderAllowed = true;\n\n        if (+resultData.volume < +currentMarket.min_amount) {\n            this.props.pushAlert({\n                message: [this.translate(\n                    'error.order.create.minAmount',\n                    {\n                        amount: Decimal.format(currentMarket.min_amount, currentMarket.amount_precision, ',' ),\n                        currency: currentMarket.base_unit.toUpperCase(),\n                    },\n                )],\n                type: 'error',\n            });\n\n            orderAllowed = false;\n        }\n\n        if (+price < +currentMarket.min_price) {\n            this.props.pushAlert({\n                message: [this.translate(\n                    'error.order.create.minPrice',\n                    {\n                        price: Decimal.format(currentMarket.min_price, currentMarket.price_precision, ','),\n                        currency: currentMarket.quote_unit.toUpperCase(),\n                    },\n                )],\n                type: 'error',\n            });\n\n            orderAllowed = false;\n        }\n\n        if (+currentMarket.max_price && +price > +currentMarket.max_price) {\n            this.props.pushAlert({\n                message: [this.translate(\n                    'error.order.create.maxPrice',\n                    {\n                        price: Decimal.format(currentMarket.max_price, currentMarket.price_precision, ','),\n                        currency: currentMarket.quote_unit.toUpperCase(),\n                    },\n                )],\n                type: 'error',\n            });\n\n            orderAllowed = false;\n        }\n\n        if ((+available < (+amount * +price) && order.side === 'buy') ||\n            (+available < +amount && order.side === 'sell')) {\n            this.props.pushAlert({\n                message: [this.translate(\n                    'error.order.create.available',\n                    {\n                        available: formatWithSeparators(String(available), ','),\n                        currency: order.side === 'buy' ? (\n                            currentMarket.quote_unit.toUpperCase()\n                        ) : (\n                            currentMarket.base_unit.toUpperCase()\n                        ),\n                    },\n                )],\n                type: 'error',\n            });\n\n            orderAllowed = false;\n        }\n\n        if (orderAllowed) {\n            this.props.orderExecute(order);\n        }\n    };\n\n    private getWallet(currency: string, wallets: Wallet[]) {\n        const currencyLower = currency.toLowerCase();\n\n        return wallets.find(w => w.currency === currencyLower) as Wallet;\n    }\n\n    private getOrderType = (index: number, label: string) => {\n        this.setState({\n            orderSide: label.toLowerCase(),\n        });\n    };\n\n    private getAvailableValue(wallet: Wallet | undefined) {\n        return wallet && wallet.balance ? Number(wallet.balance) : 0;\n    }\n\n    private listenInputPrice = () => {\n        this.setState({\n            priceLimit: undefined,\n        });\n        this.props.setCurrentPrice(0);\n    };\n\n    private translate = (id: string, value?: any) => this.props.intl.formatMessage({ id }, { ...value });\n\n    private getOrderTypes = [\n        this.translate('page.body.trade.header.newOrder.content.orderType.limit'),\n        this.translate('page.body.trade.header.newOrder.content.orderType.market'),\n    ];\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    currentMarket: selectCurrentMarket(state),\n    currentMarketFilters: selectCurrentMarketFilters(state),\n    executeLoading: selectOrderExecuteLoading(state),\n    marketTickers: selectMarketTickers(state),\n    wallets: selectWallets(state),\n    currentPrice: selectCurrentPrice(state),\n    userLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    walletsFetch: () => dispatch(walletsFetch()),\n    orderExecute: payload => dispatch(orderExecuteFetch(payload)),\n    pushAlert: payload => dispatch(alertPush(payload)),\n    setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n});\n\n// tslint:disable-next-line no-any\nconst OrderComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderInsert as any)) as any;\n\nexport {\n    OrderComponent,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}