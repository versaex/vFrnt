{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\EmailForm\\\\index.tsx\";\nimport cr from 'classnames';\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { CustomInput } from '../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\nvar EmailForm = React.memo(function (props) {\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var title = props.title,\n    buttonLabel = props.buttonLabel,\n    isLoading = props.isLoading,\n    emailLabel = props.emailLabel,\n    message = props.message,\n    email = props.email,\n    emailFocused = props.emailFocused,\n    emailError = props.emailError,\n    captchaType = props.captchaType,\n    geetestCaptchaSuccess = props.geetestCaptchaSuccess,\n    reCaptchaSuccess = props.reCaptchaSuccess;\n  var handleCancel = function handleCancel() {\n    props.handleReturnBack();\n  };\n  var handleSubmitForm = function handleSubmitForm() {\n    props.OnSubmit();\n  };\n  var isValidForm = function isValidForm() {\n    var isEmailValid = email.match(EMAIL_REGEX);\n    return email && isEmailValid;\n  };\n  var isButtonDisabled = function isButtonDisabled() {\n    if (isLoading || !email.match(EMAIL_REGEX)) {\n      return true;\n    }\n    if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n      return true;\n    }\n    if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n      return true;\n    }\n    return false;\n  };\n  var handleClick = function handleClick(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    if (!isValidForm()) {\n      props.validateForm();\n    } else {\n      handleSubmitForm();\n    }\n  };\n  var emailFormClass = cr('cr-email-form', {\n    'cr-email-form--extended': captchaType && captchaType !== 'none'\n  });\n  var emailGroupClass = cr('cr-email-form__group', {\n    'cr-email-form__group--focused': emailFocused\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: emailFormClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, !isMobileDevice && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__options-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__option\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__option-inner\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, title || 'Forgot password', /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__cros-icon\",\n    onClick: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    className: \"close-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__form-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: emailGroupClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"email\",\n    label: emailLabel || 'Email',\n    placeholder: emailLabel || 'Email',\n    defaultLabel: \"Email\",\n    handleChangeInput: props.handleInputEmail,\n    inputValue: email,\n    handleFocusInput: props.handleFieldFocus,\n    classNameLabel: \"cr-email-form__label\",\n    classNameInput: \"cr-email-form__input\",\n    autoFocus: !isMobileDevice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), emailError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 40\n    }\n  }, emailError)), props.renderCaptcha, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-email-form__button-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    block: true,\n    type: \"button\",\n    disabled: isButtonDisabled(),\n    onClick: function onClick(e) {\n      return handleClick(e);\n    },\n    size: \"lg\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, isLoading ? 'Loading...' : buttonLabel ? buttonLabel : 'Send')))));\n});\nexport { EmailForm };","map":{"version":3,"names":["cr","React","Button","useSelector","CustomInput","CloseIcon","EMAIL_REGEX","selectMobileDeviceState","EmailForm","memo","props","isMobileDevice","title","buttonLabel","isLoading","emailLabel","message","email","emailFocused","emailError","captchaType","geetestCaptchaSuccess","reCaptchaSuccess","handleCancel","handleReturnBack","handleSubmitForm","OnSubmit","isValidForm","isEmailValid","match","isButtonDisabled","handleClick","e","preventDefault","validateForm","emailFormClass","emailGroupClass","handleInputEmail","handleFieldFocus","renderCaptcha"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/EmailForm/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport React, { FormEvent } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { CustomInput } from '../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { EMAIL_REGEX } from '../../helpers';\nimport { GeetestCaptchaResponse } from '../../modules';\nimport { selectMobileDeviceState } from '../../modules/public/globalSettings';\n\nexport interface EmailFormProps {\n    title?: string;\n    buttonLabel?: string;\n    errorMessage?: string;\n    isLoading?: boolean;\n    OnSubmit: () => void;\n    className?: string;\n    emailLabel?: string;\n    email: string;\n    message: string;\n    emailError: string;\n    emailFocused: boolean;\n    placeholder?: string;\n    validateForm: () => void;\n    handleInputEmail: (value: string) => void;\n    handleFieldFocus: () => void;\n    handleReturnBack: () => void;\n    captchaType?: 'recaptcha' | 'geetest' | 'none';\n    renderCaptcha?: JSX.Element | null;\n    reCaptchaSuccess?: boolean;\n    geetestCaptchaSuccess?: boolean;\n    captcha_response?: string | GeetestCaptchaResponse;\n}\n\nconst EmailForm = React.memo((props: EmailFormProps) => {\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n\n    const {\n        title,\n        buttonLabel,\n        isLoading,\n        emailLabel,\n        message,\n        email,\n        emailFocused,\n        emailError,\n        captchaType,\n        geetestCaptchaSuccess,\n        reCaptchaSuccess,\n    } = props;\n\n    const handleCancel = () => {\n        props.handleReturnBack();\n    };\n\n    const handleSubmitForm = () => {\n        props.OnSubmit();\n    };\n\n    const isValidForm = () => {\n        const isEmailValid = email.match(EMAIL_REGEX);\n\n        return email && isEmailValid;\n    };\n\n    const isButtonDisabled = (): boolean => {\n        if (isLoading || !email.match(EMAIL_REGEX)) {\n            return true;\n        }\n\n        if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n            return true;\n        }\n\n        if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const handleClick = (e: FormEvent<HTMLInputElement>) => {\n        if (e) {\n            e.preventDefault();\n        }\n        if (!isValidForm()) {\n            props.validateForm();\n        } else {\n            handleSubmitForm();\n        }\n    };\n\n    const emailFormClass = cr('cr-email-form', {\n        'cr-email-form--extended': captchaType && captchaType !== 'none',\n    });\n\n    const emailGroupClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': emailFocused,\n    });\n\n    return (\n        <form>\n            <div className={emailFormClass}>\n                {!isMobileDevice && (\n                    <div className=\"cr-email-form__options-group\">\n                        <div className=\"cr-email-form__option\">\n                            <div className=\"cr-email-form__option-inner\">\n                                {title || 'Forgot password'}\n                                <div className=\"cr-email-form__cros-icon\" onClick={handleCancel}>\n                                    <CloseIcon className=\"close-icon\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                <div className=\"cr-email-form__form-content\">\n                    <div className=\"cr-email-form__header\">{message}</div>\n                    <div className={emailGroupClass}>\n                        <CustomInput\n                            type=\"email\"\n                            label={emailLabel || 'Email'}\n                            placeholder={emailLabel || 'Email'}\n                            defaultLabel=\"Email\"\n                            handleChangeInput={props.handleInputEmail}\n                            inputValue={email}\n                            handleFocusInput={props.handleFieldFocus}\n                            classNameLabel=\"cr-email-form__label\"\n                            classNameInput=\"cr-email-form__input\"\n                            autoFocus={!isMobileDevice}\n                        />\n                        {emailError && <div className=\"cr-email-form__error\">{emailError}</div>}\n                    </div>\n                    {props.renderCaptcha}\n                    <div className=\"cr-email-form__button-wrapper\">\n                        <Button\n                            block={true}\n                            type=\"button\"\n                            disabled={isButtonDisabled()}\n                            onClick={e => handleClick(e as any)}\n                            size=\"lg\"\n                            variant=\"primary\">\n                            {isLoading ? 'Loading...' : buttonLabel ? buttonLabel : 'Send'}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n});\n\nexport { EmailForm };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}