{"ast":null,"code":"'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n  if (!enc) return this.pub;\n  var len = this.ec.curve.p.byteLength();\n  var x = this.pub.getX().toArray();\n  for (var i = x.length; i < len; i++) {\n    x.unshift(0);\n  }\n  var res;\n  if (this.ec.curve.type !== 'mont') {\n    if (compact) {\n      res = [this.pub.getY().isEven() ? 0x02 : 0x03].concat(x);\n    } else {\n      var y = this.pub.getY().toArray();\n      for (var i = y.length; i < len; i++) {\n        y.unshift(0);\n      }\n      var res = [0x04].concat(x, y);\n    }\n  } else {\n    res = x;\n  }\n  return utils.encode(res, enc);\n};\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.mod(this.ec.curve.n);\n};\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  key = utils.toArray(key, enc);\n  if (this.ec.curve.type !== 'mont') return this._importPublicShort(key);else return this._importPublicMont(key);\n};\nKeyPair.prototype._importPublicShort = function _importPublicShort(key) {\n  var len = this.ec.curve.p.byteLength();\n  if (key[0] === 0x04 && key.length - 1 === 2 * len) {\n    this.pub = this.ec.curve.point(key.slice(1, 1 + len), key.slice(1 + len, 1 + 2 * len));\n  } else if ((key[0] === 0x02 || key[0] === 0x03) && key.length - 1 === len) {\n    this.pub = this.ec.curve.pointFromX(key[0] === 0x03, key.slice(1, 1 + len));\n  }\n};\nKeyPair.prototype._importPublicMont = function _importPublicMont(key) {\n  this.pub = this.ec.curve.point(key, 1);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg) {\n  return this.ec.sign(msg, this);\n};\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};","map":{"version":3,"names":["bn","require","elliptic","utils","KeyPair","ec","options","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","module","exports","fromPublic","enc","fromPrivate","prototype","validate","getPublic","isInfinity","result","reason","mul","curve","n","compact","g","len","p","byteLength","x","getX","toArray","i","length","unshift","res","type","getY","isEven","concat","y","encode","getPrivate","toString","key","mod","point","_importPublicShort","_importPublicMont","slice","pointFromX","derive","sign","msg","verify","signature","inspect"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/node_modules/elliptic/lib/elliptic/ec/key.js"],"sourcesContent":["'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!enc)\n    return this.pub;\n\n  var len = this.ec.curve.p.byteLength();\n  var x = this.pub.getX().toArray();\n\n  for (var i = x.length; i < len; i++)\n    x.unshift(0);\n\n  var res;\n  if (this.ec.curve.type !== 'mont') {\n    if (compact) {\n      res = [ this.pub.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n    } else {\n      var y = this.pub.getY().toArray();\n      for (var i = y.length; i < len; i++)\n        y.unshift(0);\n      var res = [ 0x04 ].concat(x, y);\n    }\n  } else {\n    res = x;\n  }\n\n  return utils.encode(res, enc);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.mod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  key = utils.toArray(key, enc);\n  if (this.ec.curve.type !== 'mont')\n    return this._importPublicShort(key);\n  else\n    return this._importPublicMont(key);\n};\n\nKeyPair.prototype._importPublicShort = function _importPublicShort(key) {\n  var len = this.ec.curve.p.byteLength();\n  if (key[0] === 0x04 && key.length - 1 === 2 * len) {\n    this.pub = this.ec.curve.point(\n      key.slice(1, 1 + len),\n      key.slice(1 + len, 1 + 2 * len));\n  } else if ((key[0] === 0x02 || key[0] === 0x03) && key.length - 1 === len) {\n    this.pub = this.ec.curve.pointFromX(key[0] === 0x03, key.slice(1, 1 + len));\n  }\n};\n\nKeyPair.prototype._importPublicMont = function _importPublicMont(key) {\n  this.pub = this.ec.curve.point(key, 1);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg) {\n  return this.ec.sign(msg, this);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,OAAO,CAAC;AAEzB,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIE,KAAK,GAAGD,QAAQ,CAACC,KAAK;AAE1B,SAASC,OAAO,CAACC,EAAE,EAAEC,OAAO,EAAE;EAC5B,IAAI,CAACD,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACE,IAAI,GAAG,IAAI;EAChB,IAAI,CAACC,GAAG,GAAG,IAAI;;EAEf;EACA,IAAIF,OAAO,CAACC,IAAI,EACd,IAAI,CAACE,cAAc,CAACH,OAAO,CAACC,IAAI,EAAED,OAAO,CAACI,OAAO,CAAC;EACpD,IAAIJ,OAAO,CAACE,GAAG,EACb,IAAI,CAACG,aAAa,CAACL,OAAO,CAACE,GAAG,EAAEF,OAAO,CAACM,MAAM,CAAC;AACnD;AACAC,MAAM,CAACC,OAAO,GAAGV,OAAO;AAExBA,OAAO,CAACW,UAAU,GAAG,SAASA,UAAU,CAACV,EAAE,EAAEG,GAAG,EAAEQ,GAAG,EAAE;EACrD,IAAIR,GAAG,YAAYJ,OAAO,EACxB,OAAOI,GAAG;EAEZ,OAAO,IAAIJ,OAAO,CAACC,EAAE,EAAE;IACrBG,GAAG,EAAEA,GAAG;IACRI,MAAM,EAAEI;EACV,CAAC,CAAC;AACJ,CAAC;AAEDZ,OAAO,CAACa,WAAW,GAAG,SAASA,WAAW,CAACZ,EAAE,EAAEE,IAAI,EAAES,GAAG,EAAE;EACxD,IAAIT,IAAI,YAAYH,OAAO,EACzB,OAAOG,IAAI;EAEb,OAAO,IAAIH,OAAO,CAACC,EAAE,EAAE;IACrBE,IAAI,EAAEA,IAAI;IACVG,OAAO,EAAEM;EACX,CAAC,CAAC;AACJ,CAAC;AAEDZ,OAAO,CAACc,SAAS,CAACC,QAAQ,GAAG,SAASA,QAAQ,GAAG;EAC/C,IAAIX,GAAG,GAAG,IAAI,CAACY,SAAS,EAAE;EAE1B,IAAIZ,GAAG,CAACa,UAAU,EAAE,EAClB,OAAO;IAAEC,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAqB,CAAC;EACxD,IAAI,CAACf,GAAG,CAACW,QAAQ,EAAE,EACjB,OAAO;IAAEG,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAA4B,CAAC;EAC/D,IAAI,CAACf,GAAG,CAACgB,GAAG,CAAC,IAAI,CAACnB,EAAE,CAACoB,KAAK,CAACC,CAAC,CAAC,CAACL,UAAU,EAAE,EACxC,OAAO;IAAEC,MAAM,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAsB,CAAC;EAEzD,OAAO;IAAED,MAAM,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAK,CAAC;AACvC,CAAC;AAEDnB,OAAO,CAACc,SAAS,CAACE,SAAS,GAAG,SAASA,SAAS,CAACO,OAAO,EAAEX,GAAG,EAAE;EAC7D,IAAI,CAAC,IAAI,CAACR,GAAG,EACX,IAAI,CAACA,GAAG,GAAG,IAAI,CAACH,EAAE,CAACuB,CAAC,CAACJ,GAAG,CAAC,IAAI,CAACjB,IAAI,CAAC;;EAErC;EACA,IAAI,OAAOoB,OAAO,KAAK,QAAQ,EAAE;IAC/BX,GAAG,GAAGW,OAAO;IACbA,OAAO,GAAG,IAAI;EAChB;EAEA,IAAI,CAACX,GAAG,EACN,OAAO,IAAI,CAACR,GAAG;EAEjB,IAAIqB,GAAG,GAAG,IAAI,CAACxB,EAAE,CAACoB,KAAK,CAACK,CAAC,CAACC,UAAU,EAAE;EACtC,IAAIC,CAAC,GAAG,IAAI,CAACxB,GAAG,CAACyB,IAAI,EAAE,CAACC,OAAO,EAAE;EAEjC,KAAK,IAAIC,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,GAAGN,GAAG,EAAEM,CAAC,EAAE;IACjCH,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC;EAAC;EAEf,IAAIC,GAAG;EACP,IAAI,IAAI,CAACjC,EAAE,CAACoB,KAAK,CAACc,IAAI,KAAK,MAAM,EAAE;IACjC,IAAIZ,OAAO,EAAE;MACXW,GAAG,GAAG,CAAE,IAAI,CAAC9B,GAAG,CAACgC,IAAI,EAAE,CAACC,MAAM,EAAE,GAAG,IAAI,GAAG,IAAI,CAAE,CAACC,MAAM,CAACV,CAAC,CAAC;IAC5D,CAAC,MAAM;MACL,IAAIW,CAAC,GAAG,IAAI,CAACnC,GAAG,CAACgC,IAAI,EAAE,CAACN,OAAO,EAAE;MACjC,KAAK,IAAIC,CAAC,GAAGQ,CAAC,CAACP,MAAM,EAAED,CAAC,GAAGN,GAAG,EAAEM,CAAC,EAAE;QACjCQ,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC;MAAC;MACf,IAAIC,GAAG,GAAG,CAAE,IAAI,CAAE,CAACI,MAAM,CAACV,CAAC,EAAEW,CAAC,CAAC;IACjC;EACF,CAAC,MAAM;IACLL,GAAG,GAAGN,CAAC;EACT;EAEA,OAAO7B,KAAK,CAACyC,MAAM,CAACN,GAAG,EAAEtB,GAAG,CAAC;AAC/B,CAAC;AAEDZ,OAAO,CAACc,SAAS,CAAC2B,UAAU,GAAG,SAASA,UAAU,CAAC7B,GAAG,EAAE;EACtD,IAAIA,GAAG,KAAK,KAAK,EACf,OAAO,IAAI,CAACT,IAAI,CAACuC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAEjC,OAAO,IAAI,CAACvC,IAAI;AACpB,CAAC;AAEDH,OAAO,CAACc,SAAS,CAACT,cAAc,GAAG,SAASA,cAAc,CAACsC,GAAG,EAAE/B,GAAG,EAAE;EACnE,IAAI,CAACT,IAAI,GAAG,IAAIP,EAAE,CAAC+C,GAAG,EAAE/B,GAAG,IAAI,EAAE,CAAC;;EAElC;EACA;EACA,IAAI,CAACT,IAAI,GAAG,IAAI,CAACA,IAAI,CAACyC,GAAG,CAAC,IAAI,CAAC3C,EAAE,CAACoB,KAAK,CAACC,CAAC,CAAC;AAC5C,CAAC;AAEDtB,OAAO,CAACc,SAAS,CAACP,aAAa,GAAG,SAASA,aAAa,CAACoC,GAAG,EAAE/B,GAAG,EAAE;EACjE,IAAI+B,GAAG,CAACf,CAAC,IAAIe,GAAG,CAACJ,CAAC,EAAE;IAClB,IAAI,CAACnC,GAAG,GAAG,IAAI,CAACH,EAAE,CAACoB,KAAK,CAACwB,KAAK,CAACF,GAAG,CAACf,CAAC,EAAEe,GAAG,CAACJ,CAAC,CAAC;IAC5C;EACF;EAEAI,GAAG,GAAG5C,KAAK,CAAC+B,OAAO,CAACa,GAAG,EAAE/B,GAAG,CAAC;EAC7B,IAAI,IAAI,CAACX,EAAE,CAACoB,KAAK,CAACc,IAAI,KAAK,MAAM,EAC/B,OAAO,IAAI,CAACW,kBAAkB,CAACH,GAAG,CAAC,CAAC,KAEpC,OAAO,IAAI,CAACI,iBAAiB,CAACJ,GAAG,CAAC;AACtC,CAAC;AAED3C,OAAO,CAACc,SAAS,CAACgC,kBAAkB,GAAG,SAASA,kBAAkB,CAACH,GAAG,EAAE;EACtE,IAAIlB,GAAG,GAAG,IAAI,CAACxB,EAAE,CAACoB,KAAK,CAACK,CAAC,CAACC,UAAU,EAAE;EACtC,IAAIgB,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,GAAG,CAACX,MAAM,GAAG,CAAC,KAAK,CAAC,GAAGP,GAAG,EAAE;IACjD,IAAI,CAACrB,GAAG,GAAG,IAAI,CAACH,EAAE,CAACoB,KAAK,CAACwB,KAAK,CAC5BF,GAAG,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGvB,GAAG,CAAC,EACrBkB,GAAG,CAACK,KAAK,CAAC,CAAC,GAAGvB,GAAG,EAAE,CAAC,GAAG,CAAC,GAAGA,GAAG,CAAC,CAAC;EACpC,CAAC,MAAM,IAAI,CAACkB,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,KAAKA,GAAG,CAACX,MAAM,GAAG,CAAC,KAAKP,GAAG,EAAE;IACzE,IAAI,CAACrB,GAAG,GAAG,IAAI,CAACH,EAAE,CAACoB,KAAK,CAAC4B,UAAU,CAACN,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAEA,GAAG,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,GAAGvB,GAAG,CAAC,CAAC;EAC7E;AACF,CAAC;AAEDzB,OAAO,CAACc,SAAS,CAACiC,iBAAiB,GAAG,SAASA,iBAAiB,CAACJ,GAAG,EAAE;EACpE,IAAI,CAACvC,GAAG,GAAG,IAAI,CAACH,EAAE,CAACoB,KAAK,CAACwB,KAAK,CAACF,GAAG,EAAE,CAAC,CAAC;AACxC,CAAC;;AAED;AACA3C,OAAO,CAACc,SAAS,CAACoC,MAAM,GAAG,SAASA,MAAM,CAAC9C,GAAG,EAAE;EAC9C,OAAOA,GAAG,CAACgB,GAAG,CAAC,IAAI,CAACjB,IAAI,CAAC,CAAC0B,IAAI,EAAE;AAClC,CAAC;;AAED;AACA7B,OAAO,CAACc,SAAS,CAACqC,IAAI,GAAG,SAASA,IAAI,CAACC,GAAG,EAAE;EAC1C,OAAO,IAAI,CAACnD,EAAE,CAACkD,IAAI,CAACC,GAAG,EAAE,IAAI,CAAC;AAChC,CAAC;AAEDpD,OAAO,CAACc,SAAS,CAACuC,MAAM,GAAG,SAASA,MAAM,CAACD,GAAG,EAAEE,SAAS,EAAE;EACzD,OAAO,IAAI,CAACrD,EAAE,CAACoD,MAAM,CAACD,GAAG,EAAEE,SAAS,EAAE,IAAI,CAAC;AAC7C,CAAC;AAEDtD,OAAO,CAACc,SAAS,CAACyC,OAAO,GAAG,SAASA,OAAO,GAAG;EAC7C,OAAO,aAAa,IAAI,IAAI,CAACpD,IAAI,IAAI,IAAI,CAACA,IAAI,CAACuC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GACxD,QAAQ,IAAI,IAAI,CAACtC,GAAG,IAAI,IAAI,CAACA,GAAG,CAACmD,OAAO,EAAE,CAAC,GAAG,IAAI;AAC3D,CAAC"},"metadata":{},"sourceType":"script"}