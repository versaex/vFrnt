{"ast":null,"code":"import { ERROR_HANDLE_DATA, ERROR_HANDLE_FETCH } from './constants';\nexport var initialErrorHandlerState = {\n  processing: false\n};\nexport var errorHandlerReducer = function errorHandlerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialErrorHandlerState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ERROR_HANDLE_FETCH:\n      return {\n        processing: true\n      };\n    case ERROR_HANDLE_DATA:\n      return {\n        processing: false\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ERROR_HANDLE_DATA","ERROR_HANDLE_FETCH","initialErrorHandlerState","processing","errorHandlerReducer","state","action","type"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/public/errorHandler/reducer.ts"],"sourcesContent":["import { ErrorHandlerAction } from './actions';\nimport { ERROR_HANDLE_DATA, ERROR_HANDLE_FETCH } from './constants';\n\nexport interface ErrorHandlerState {\n    processing: boolean;\n}\n\nexport const initialErrorHandlerState: ErrorHandlerState = {\n    processing: false,\n};\n\nexport const errorHandlerReducer = (state = initialErrorHandlerState, action: ErrorHandlerAction) => {\n    switch (action.type) {\n        case ERROR_HANDLE_FETCH:\n            return {\n                processing: true,\n            };\n        case ERROR_HANDLE_DATA:\n            return {\n                processing: false,\n            };\n        default:\n            return state;\n    }\n};\n"],"mappings":"AACA,SAASA,iBAAiB,EAAEC,kBAAkB,QAAQ,aAAa;AAMnE,OAAO,IAAMC,wBAA2C,GAAG;EACvDC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAqE;EAAA,IAAjEC,KAAK,uEAAGH,wBAAwB;EAAA,IAAEI,MAA0B;EAC5F,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKN,kBAAkB;MACnB,OAAO;QACHE,UAAU,EAAE;MAChB,CAAC;IACL,KAAKH,iBAAiB;MAClB,OAAO;QACHG,UAAU,EAAE;MAChB,CAAC;IACL;MACI,OAAOE,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}