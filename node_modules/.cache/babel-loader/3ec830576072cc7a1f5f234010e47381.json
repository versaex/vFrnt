{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar _default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function verticalCompact(props\n  /*: Props*/) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn(\n      // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes.default.oneOf([\"vertical\", \"horizontal\"]),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props\n  /*: Props*/) {\n    var layout = props.layout; // I hope you're setting the data-grid property on the grid items\n\n    if (layout === undefined) return;\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n  // Margin between items [x, y] in px\n  margin: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  //\n  // Callbacks\n  //\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n  droppingItem: _propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  }),\n  // Children must not have duplicate keys.\n  children: function children(props\n  /*: Props*/, propName\n  /*: string*/) {\n    var children = props[propName]; // Check children keys for duplicates. Throw if found.\n\n    var keys = {};\n    _react.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n      keys[child.key] = true;\n    });\n  }\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_propTypes","_interopRequireDefault","require","_react","obj","__esModule","_default","className","string","style","object","width","number","autoSize","bool","cols","draggableCancel","draggableHandle","verticalCompact","props","process","env","NODE_ENV","console","warn","compactType","oneOf","layout","undefined","validateLayout","margin","arrayOf","containerPadding","rowHeight","maxRows","isDraggable","isResizable","preventCollision","useCSSTransforms","transformScale","isDroppable","onLayoutChange","func","onDragStart","onDrag","onDragStop","onResizeStart","onResize","onResizeStop","onDrop","droppingItem","shape","i","isRequired","w","h","children","propName","keys","Children","forEach","child","key","Error"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/react-grid-layout/build/ReactGridLayoutPropTypes.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = {\n  //\n  // Basic props\n  //\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  // This can be set explicitly. If it is not set, it will automatically\n  // be set to the container width. Note that resizes will *not* cause this to adjust.\n  // If you need that behavior, use WidthProvider.\n  width: _propTypes.default.number,\n  // If true, the container height swells and contracts to fit contents\n  autoSize: _propTypes.default.bool,\n  // # of cols.\n  cols: _propTypes.default.number,\n  // A selector that will not be draggable.\n  draggableCancel: _propTypes.default.string,\n  // A selector for the draggable handler\n  draggableHandle: _propTypes.default.string,\n  // Deprecated\n  verticalCompact: function verticalCompact(props\n  /*: Props*/\n  ) {\n    if (props.verticalCompact === false && process.env.NODE_ENV !== \"production\") {\n      console.warn( // eslint-disable-line no-console\n      \"`verticalCompact` on <ReactGridLayout> is deprecated and will be removed soon. \" + 'Use `compactType`: \"horizontal\" | \"vertical\" | null.');\n    }\n  },\n  // Choose vertical or hotizontal compaction\n  compactType: _propTypes.default.oneOf([\"vertical\", \"horizontal\"]),\n  // layout is an array of object with the format:\n  // {x: Number, y: Number, w: Number, h: Number, i: String}\n  layout: function layout(props\n  /*: Props*/\n  ) {\n    var layout = props.layout; // I hope you're setting the data-grid property on the grid items\n\n    if (layout === undefined) return;\n\n    require(\"./utils\").validateLayout(layout, \"layout\");\n  },\n  //\n  // Grid Dimensions\n  //\n  // Margin between items [x, y] in px\n  margin: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Padding inside the container [x, y] in px\n  containerPadding: _propTypes.default.arrayOf(_propTypes.default.number),\n  // Rows have a static height, but you can change this based on breakpoints if you like\n  rowHeight: _propTypes.default.number,\n  // Default Infinity, but you can specify a max here if you like.\n  // Note that this isn't fully fleshed out and won't error if you specify a layout that\n  // extends beyond the row capacity. It will, however, not allow users to drag/resize\n  // an item past the barrier. They can push items beyond the barrier, though.\n  // Intentionally not documented for this reason.\n  maxRows: _propTypes.default.number,\n  //\n  // Flags\n  //\n  isDraggable: _propTypes.default.bool,\n  isResizable: _propTypes.default.bool,\n  // If true, grid items won't change position when being dragged over.\n  preventCollision: _propTypes.default.bool,\n  // Use CSS transforms instead of top/left\n  useCSSTransforms: _propTypes.default.bool,\n  // parent layout transform scale\n  transformScale: _propTypes.default.number,\n  // If true, an external element can trigger onDrop callback with a specific grid position as a parameter\n  isDroppable: _propTypes.default.bool,\n  //\n  // Callbacks\n  //\n  // Callback so you can save the layout. Calls after each drag & resize stops.\n  onLayoutChange: _propTypes.default.func,\n  // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e, ?node).\n  // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n  onDragStart: _propTypes.default.func,\n  // Calls on each drag movement.\n  onDrag: _propTypes.default.func,\n  // Calls when drag is complete.\n  onDragStop: _propTypes.default.func,\n  //Calls when resize starts.\n  onResizeStart: _propTypes.default.func,\n  // Calls when resize movement happens.\n  onResize: _propTypes.default.func,\n  // Calls when resize is complete.\n  onResizeStop: _propTypes.default.func,\n  // Calls when some element is dropped.\n  onDrop: _propTypes.default.func,\n  //\n  // Other validations\n  //\n  droppingItem: _propTypes.default.shape({\n    i: _propTypes.default.string.isRequired,\n    w: _propTypes.default.number.isRequired,\n    h: _propTypes.default.number.isRequired\n  }),\n  // Children must not have duplicate keys.\n  children: function children(props\n  /*: Props*/\n  , propName\n  /*: string*/\n  ) {\n    var children = props[propName]; // Check children keys for duplicates. Throw if found.\n\n    var keys = {};\n\n    _react.default.Children.forEach(children, function (child) {\n      if (keys[child.key]) {\n        throw new Error('Duplicate child key \"' + child.key + '\" found! This will cause problems in ReactGridLayout.');\n      }\n\n      keys[child.key] = true;\n    });\n  }\n};\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}