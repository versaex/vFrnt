{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(signInSaga);\nimport { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API } from '../../../../api';\nimport { changeLanguage } from '../../../public/i18n';\nimport { userData } from '../../profile';\nimport { signInData, signInError, signInRequire2FA, signUpRequireVerification } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function signInSaga(action) {\n  var user;\n  return _regeneratorRuntime().wrap(function signInSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(sessionsConfig), '/identity/sessions', action.payload);\n        case 3:\n          user = _context.sent;\n          if (!(user.state === 'pending')) {\n            _context.next = 9;\n            break;\n          }\n          _context.next = 7;\n          return put(signUpRequireVerification({\n            requireVerification: true\n          }));\n        case 7:\n          _context.next = 17;\n          break;\n        case 9:\n          if (!(user.data && JSON.parse(user.data).language)) {\n            _context.next = 12;\n            break;\n          }\n          _context.next = 12;\n          return put(changeLanguage(JSON.parse(user.data).language));\n        case 12:\n          _context.next = 14;\n          return put(userData({\n            user: user\n          }));\n        case 14:\n          localStorage.setItem('csrfToken', user.csrf_token);\n          _context.next = 17;\n          return put(signInRequire2FA({\n            require2fa: user.otp\n          }));\n        case 17:\n          _context.next = 19;\n          return put(signInData());\n        case 19:\n          _context.next = 32;\n          break;\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          if (!(_context.t0.code === 401 && _context.t0.message.indexOf('identity.session.missing_otp') > -1)) {\n            _context.next = 30;\n            break;\n          }\n          _context.next = 26;\n          return put(signInRequire2FA({\n            require2fa: true\n          }));\n        case 26:\n          _context.next = 28;\n          return put(signInData());\n        case 28:\n          _context.next = 32;\n          break;\n        case 30:\n          _context.next = 32;\n          return put(sendError({\n            error: _context.t0,\n            processingType: 'alert',\n            extraOptions: {\n              actionError: signInError\n            }\n          }));\n        case 32:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 21]]);\n}","map":{"version":3,"names":["signInSaga","call","put","sendError","API","changeLanguage","userData","signInData","signInError","signInRequire2FA","signUpRequireVerification","sessionsConfig","apiVersion","action","post","payload","user","state","requireVerification","data","JSON","parse","language","localStorage","setItem","csrf_token","require2fa","otp","code","message","indexOf","error","processingType","extraOptions","actionError"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/auth/sagas/signInSaga.ts"],"sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport { sendError } from '../../../';\nimport { API, RequestOptions } from '../../../../api';\nimport { changeLanguage } from '../../../public/i18n';\nimport { userData } from '../../profile';\nimport {\n    signInData,\n    signInError,\n    SignInFetch,\n    signInRequire2FA,\n    signUpRequireVerification,\n} from '../actions';\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* signInSaga(action: SignInFetch) {\n    try {\n        const user = yield call(API.post(sessionsConfig), '/identity/sessions', action.payload);\n\n        if (user.state === 'pending') {\n            yield put(signUpRequireVerification({ requireVerification: true }));\n        } else {\n            if (user.data && JSON.parse(user.data).language) {\n                yield put(changeLanguage(JSON.parse(user.data).language));\n            }\n            yield put(userData({ user }));\n\n            localStorage.setItem('csrfToken', user.csrf_token);\n            yield put(signInRequire2FA({ require2fa: user.otp }));\n        }\n\n        yield put(signInData());\n    } catch (error) {\n        if (error.code === 401 && error.message.indexOf('identity.session.missing_otp') > -1) {\n            yield put(signInRequire2FA({ require2fa: true }));\n            yield put(signInData());\n        } else {\n          yield put(sendError({\n              error: error,\n              processingType: 'alert',\n              extraOptions: {\n                  actionError: signInError,\n              },\n          }));\n        }\n    }\n}\n"],"mappings":"+CACA;AAAA,sDAgBiBA,UAAU;AAjB3B,SAASC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9C,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,GAAG,QAAwB,iBAAiB;AACrD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SACIC,UAAU,EACVC,WAAW,EAEXC,gBAAgB,EAChBC,yBAAyB,QACtB,YAAY;AAEnB,IAAMC,cAA8B,GAAG;EACnCC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,SAAUZ,UAAU,CAACa,MAAmB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAE1B,OAAMZ,IAAI,CAACG,GAAG,CAACU,IAAI,CAACH,cAAc,CAAC,EAAE,oBAAoB,EAAEE,MAAM,CAACE,OAAO,CAAC;QAAA;UAAjFC,IAAI;UAAA,MAENA,IAAI,CAACC,KAAK,KAAK,SAAS;YAAA;YAAA;UAAA;UAAA;UACxB,OAAMf,GAAG,CAACQ,yBAAyB,CAAC;YAAEQ,mBAAmB,EAAE;UAAK,CAAC,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA,MAE/DF,IAAI,CAACG,IAAI,IAAIC,IAAI,CAACC,KAAK,CAACL,IAAI,CAACG,IAAI,CAAC,CAACG,QAAQ;YAAA;YAAA;UAAA;UAAA;UAC3C,OAAMpB,GAAG,CAACG,cAAc,CAACe,IAAI,CAACC,KAAK,CAACL,IAAI,CAACG,IAAI,CAAC,CAACG,QAAQ,CAAC,CAAC;QAAA;UAAA;UAE7D,OAAMpB,GAAG,CAACI,QAAQ,CAAC;YAAEU,IAAI,EAAJA;UAAK,CAAC,CAAC,CAAC;QAAA;UAE7BO,YAAY,CAACC,OAAO,CAAC,WAAW,EAAER,IAAI,CAACS,UAAU,CAAC;UAAC;UACnD,OAAMvB,GAAG,CAACO,gBAAgB,CAAC;YAAEiB,UAAU,EAAEV,IAAI,CAACW;UAAI,CAAC,CAAC,CAAC;QAAA;UAAA;UAGzD,OAAMzB,GAAG,CAACK,UAAU,EAAE,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA,MAEnB,YAAMqB,IAAI,KAAK,GAAG,IAAI,YAAMC,OAAO,CAACC,OAAO,CAAC,8BAA8B,CAAC,GAAG,CAAC,CAAC;YAAA;YAAA;UAAA;UAAA;UAChF,OAAM5B,GAAG,CAACO,gBAAgB,CAAC;YAAEiB,UAAU,EAAE;UAAK,CAAC,CAAC,CAAC;QAAA;UAAA;UACjD,OAAMxB,GAAG,CAACK,UAAU,EAAE,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAEzB,OAAML,GAAG,CAACC,SAAS,CAAC;YAChB4B,KAAK,aAAO;YACZC,cAAc,EAAE,OAAO;YACvBC,YAAY,EAAE;cACVC,WAAW,EAAE1B;YACjB;UACJ,CAAC,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}