{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar JSUtil = require('../util/js');\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script), 'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis), 'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function () {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex + ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function () {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function (data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\nmodule.exports = UnspentOutput;","map":{"version":3,"names":["_","require","$","JSUtil","Script","Address","Unit","UnspentOutput","data","checkArgument","isObject","address","undefined","txId","txid","isHexaString","length","Error","outputIndex","isUndefined","vout","isNumber","scriptPubKey","script","amount","satoshis","fromBTC","toSatoshis","defineImmutable","prototype","inspect","toString","fromObject","toObject","toJSON","toBuffer","fromSatoshis","toBTC","module","exports"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/bitcoincashjs/src/transaction/unspentoutput.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                  'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}