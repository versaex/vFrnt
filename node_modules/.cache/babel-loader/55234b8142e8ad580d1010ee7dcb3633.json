{"ast":null,"code":"import { __read, __spread } from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */function () {\n  function InboundFilters(_options) {\n    if (_options === void 0) {\n      _options = {};\n    }\n    this._options = _options;\n    /**\n     * @inheritDoc\n     */\n    this.name = InboundFilters.id;\n  }\n  /**\n   * @inheritDoc\n   */\n  InboundFilters.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      var hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      var self = hub.getIntegration(InboundFilters);\n      if (self) {\n        var client = hub.getClient();\n        var clientOptions = client ? client.getOptions() : {};\n        var options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  };\n  /** JSDoc */\n  InboundFilters.prototype._shouldDropEvent = function (event, options) {\n    if (this._isSentryError(event, options)) {\n      logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `denyUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\"Event dropped due to not being matched by `allowUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n    return false;\n  };\n  /** JSDoc */\n  InboundFilters.prototype._isSentryError = function (event, options) {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n    try {\n      return event && event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].type === 'SentryError' || false;\n    } catch (_oO) {\n      return false;\n    }\n  };\n  /** JSDoc */\n  InboundFilters.prototype._isIgnoredError = function (event, options) {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n    return this._getPossibleEventMessages(event).some(function (message) {\n      // Not sure why TypeScript complains here...\n      return options.ignoreErrors.some(function (pattern) {\n        return isMatchingPattern(message, pattern);\n      });\n    });\n  };\n  /** JSDoc */\n  InboundFilters.prototype._isDeniedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    var url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n  InboundFilters.prototype._isAllowedUrl = function (event, options) {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    var url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n  InboundFilters.prototype._mergeOptions = function (clientOptions) {\n    if (clientOptions === void 0) {\n      clientOptions = {};\n    }\n    return {\n      allowUrls: __spread(this._options.whitelistUrls || [], this._options.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),\n      denyUrls: __spread(this._options.blacklistUrls || [], this._options.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),\n      ignoreErrors: __spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true\n    };\n  };\n  /** JSDoc */\n  InboundFilters.prototype._getPossibleEventMessages = function (event) {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        var _a = event.exception.values && event.exception.values[0] || {},\n          _b = _a.type,\n          type = _b === void 0 ? '' : _b,\n          _c = _a.value,\n          value = _c === void 0 ? '' : _c;\n        return [\"\" + value, type + \": \" + value];\n      } catch (oO) {\n        logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n        return [];\n      }\n    }\n    return [];\n  };\n  /** JSDoc */\n  InboundFilters.prototype._getEventFilterUrl = function (event) {\n    try {\n      if (event.stacktrace) {\n        var frames_1 = event.stacktrace.frames;\n        return frames_1 && frames_1[frames_1.length - 1].filename || null;\n      }\n      if (event.exception) {\n        var frames_2 = event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return frames_2 && frames_2[frames_2.length - 1].filename || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n  InboundFilters.id = 'InboundFilters';\n  return InboundFilters;\n}();\nexport { InboundFilters };","map":{"version":3,"sources":["../../src/integrations/inboundfilters.ts"],"names":[],"mappings":";AAAA,SAAS,uBAAuB,EAAE,aAAa,QAAQ,aAAa;AAEpE,SAAS,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,QAAQ,eAAe;AAE9E;AACA;AACA,IAAM,qBAAqB,GAAG,CAAC,mBAAmB,EAAE,+CAA+C,CAAC;AAepG;AACA,IAAA,cAAA,GAAA,aAAA,YAAA;EAWE,SAAA,cAAA,CAAoC,QAA6C,EAAA;IAA7C,IAAA,QAAA,KAAA,KAAA,CAAA,EAAA;MAAA,QAAA,GAAA,CAAA,CAA6C;IAAA;IAA7C,IAAA,CAAA,QAAQ,GAAR,QAAQ;IAL5C;;AAEG;IACI,IAAA,CAAA,IAAI,GAAW,cAAc,CAAC,EAAE;EAE6C;EAEpF;;AAEG;EACI,cAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,YAAA;IACE,uBAAuB,CAAC,UAAC,KAAY,EAAA;MACnC,IAAM,GAAG,GAAG,aAAa,EAAE;MAC3B,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,KAAK;MACb;MACD,IAAM,IAAI,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC;MAC/C,IAAI,IAAI,EAAE;QACR,IAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE;QAC9B,IAAM,aAAa,GAAG,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,GAAG,CAAA,CAAE;QACvD,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC;QACjD,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;UACzC,OAAO,IAAI;QACZ;MACF;MACD,OAAO,KAAK;IACd,CAAC,CAAC;EACJ,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,gBAAgB,GAAxB,UAAyB,KAAY,EAAE,OAAuC,EAAA;IAC5E,IAAI,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;MACvC,MAAM,CAAC,IAAI,CAAC,4DAAA,GAA6D,mBAAmB,CAAC,KAAK,CAAG,CAAC;MACtG,OAAO,IAAI;IACZ;IACD,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;MACxC,MAAM,CAAC,IAAI,CACT,uEAAA,GAA0E,mBAAmB,CAAC,KAAK,CAAG,CACvG;MACD,OAAO,IAAI;IACZ;IACD,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;MACrC,MAAM,CAAC,IAAI,CACT,mEAAA,GAAsE,mBAAmB,CACvF,KAAK,CACN,GAAA,UAAA,GAAW,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,CAC7C;MACD,OAAO,IAAI;IACZ;IACD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE;MACvC,MAAM,CAAC,IAAI,CACT,wEAAA,GAA2E,mBAAmB,CAC5F,KAAK,CACN,GAAA,UAAA,GAAW,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAG,CAC7C;MACD,OAAO,IAAI;IACZ;IACD,OAAO,KAAK;EACd,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,cAAc,GAAtB,UAAuB,KAAY,EAAE,OAAuC,EAAA;IAC1E,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;MAC3B,OAAO,KAAK;IACb;IAED,IAAI;MACF,OACG,KAAK,IACJ,KAAK,CAAC,SAAS,IACf,KAAK,CAAC,SAAS,CAAC,MAAM,IACtB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IACzB,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,IAClD,KAAK;KAER,CAAC,OAAO,GAAG,EAAE;MACZ,OAAO,KAAK;IACb;EACH,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,eAAe,GAAvB,UAAwB,KAAY,EAAE,OAAuC,EAAA;IAC3E,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE;MACzD,OAAO,KAAK;IACb;IAED,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO,EAAA;MACvD;MACA,OAAC,OAAO,CAAC,YAAuC,CAAC,IAAI,CAAC,UAAA,OAAO,EAAA;QAAI,OAAA,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC;MAAnC,CAAmC,CAAC;IAArG,CAAqG,CACtG;EACH,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,YAAY,GAApB,UAAqB,KAAY,EAAE,OAAuC,EAAA;IACxE;IACA,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE;MACjD,OAAO,KAAK;IACb;IACD,IAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC1C,OAAO,CAAC,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAA,OAAO,EAAA;MAAI,OAAA,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC;IAA/B,CAA+B,CAAC;EACzF,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,aAAa,GAArB,UAAsB,KAAY,EAAE,OAAuC,EAAA;IACzE;IACA,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE;MACnD,OAAO,IAAI;IACZ;IACD,IAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC1C,OAAO,CAAC,GAAG,GAAG,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,UAAA,OAAO,EAAA;MAAI,OAAA,iBAAiB,CAAC,GAAG,EAAE,OAAO,CAAC;IAA/B,CAA+B,CAAC;EACzF,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,aAAa,GAArB,UAAsB,aAAkD,EAAA;IAAlD,IAAA,aAAA,KAAA,KAAA,CAAA,EAAA;MAAA,aAAA,GAAA,CAAA,CAAkD;IAAA;IACtE,OAAO;MACL,SAAS,EAAA,QAAA,CAEH,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,EAAE,EACjC,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,EAE7B,aAAa,CAAC,aAAa,IAAI,EAAE,EACjC,aAAa,CAAC,SAAS,IAAI,EAAE,CAClC;MACD,QAAQ,EAAA,QAAA,CAEF,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,EAAE,EACjC,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,EAE5B,aAAa,CAAC,aAAa,IAAI,EAAE,EACjC,aAAa,CAAC,QAAQ,IAAI,EAAE,CACjC;MACD,YAAY,EAAA,QAAA,CACN,IAAI,CAAC,QAAQ,CAAC,YAAY,IAAI,EAAE,EAChC,aAAa,CAAC,YAAY,IAAI,EAAE,EACjC,qBAAqB,CACzB;MACD,cAAc,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,cAAc,KAAK,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,GAAG;KACtG;EACH,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,yBAAyB,GAAjC,UAAkC,KAAY,EAAA;IAC5C,IAAI,KAAK,CAAC,OAAO,EAAE;MACjB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;IACvB;IACD,IAAI,KAAK,CAAC,SAAS,EAAE;MACnB,IAAI;QACI,IAAA,EAAA,GAAA,KAAA,CAAA,SAAA,CAAA,MAAA,IAAA,KAAA,CAAA,SAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAuF;UAArF,EAAA,GAAA,EAAA,CAAA,IAAS;UAAT,IAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAS;UAAE,EAAA,GAAA,EAAA,CAAA,KAAU;UAAV,KAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAA0E;QAC7F,OAAO,CAAC,EAAA,GAAG,KAAO,EAAK,IAAI,GAAA,IAAA,GAAK,KAAO,CAAC;OACzC,CAAC,OAAO,EAAE,EAAE;QACX,MAAM,CAAC,KAAK,CAAC,mCAAA,GAAoC,mBAAmB,CAAC,KAAK,CAAG,CAAC;QAC9E,OAAO,EAAE;MACV;IACF;IACD,OAAO,EAAE;EACX,CAAC;EAED;EACQ,cAAA,CAAA,SAAA,CAAA,kBAAkB,GAA1B,UAA2B,KAAY,EAAA;IACrC,IAAI;MACF,IAAI,KAAK,CAAC,UAAU,EAAE;QACpB,IAAM,QAAM,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM;QACtC,OAAQ,QAAM,IAAI,QAAM,CAAC,QAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAK,IAAI;MAC9D;MACD,IAAI,KAAK,CAAC,SAAS,EAAE;QACnB,IAAM,QAAM,GACV,KAAK,CAAC,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM;QAC/G,OAAQ,QAAM,IAAI,QAAM,CAAC,QAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAK,IAAI;MAC9D;MACD,OAAO,IAAI;KACZ,CAAC,OAAO,EAAE,EAAE;MACX,MAAM,CAAC,KAAK,CAAC,+BAAA,GAAgC,mBAAmB,CAAC,KAAK,CAAG,CAAC;MAC1E,OAAO,IAAI;IACZ;EACH,CAAC;EAnLD;;AAEG;EACW,cAAA,CAAA,EAAE,GAAW,gBAAgB;EAiL7C,OAAA,cAAC;CAAA,EAAA;SArLY,cAAc","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { Event, Integration } from '@sentry/types';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** JSDoc */\ninterface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreInternal: boolean;\n\n  /** @deprecated use {@link InboundFiltersOptions.allowUrls} instead. */\n  whitelistUrls: Array<string | RegExp>;\n  /** @deprecated use {@link InboundFiltersOptions.denyUrls} instead. */\n  blacklistUrls: Array<string | RegExp>;\n}\n\n/** Inbound filters configurable by the user */\nexport class InboundFilters implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'InboundFilters';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = InboundFilters.id;\n\n  public constructor(private readonly _options: Partial<InboundFiltersOptions> = {}) {}\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      const hub = getCurrentHub();\n      if (!hub) {\n        return event;\n      }\n      const self = hub.getIntegration(InboundFilters);\n      if (self) {\n        const client = hub.getClient();\n        const clientOptions = client ? client.getOptions() : {};\n        const options = self._mergeOptions(clientOptions);\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n  private _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (this._isSentryError(event, options)) {\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n      return true;\n    }\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n      return true;\n    }\n    if (this._isDeniedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    if (!this._isAllowedUrl(event, options)) {\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${this._getEventFilterUrl(event)}`,\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /** JSDoc */\n  private _isSentryError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      return (\n        (event &&\n          event.exception &&\n          event.exception.values &&\n          event.exception.values[0] &&\n          event.exception.values[0].type === 'SentryError') ||\n        false\n      );\n    } catch (_oO) {\n      return false;\n    }\n  }\n\n  /** JSDoc */\n  private _isIgnoredError(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(message =>\n      // Not sure why TypeScript complains here...\n      (options.ignoreErrors as Array<RegExp | string>).some(pattern => isMatchingPattern(message, pattern)),\n    );\n  }\n\n  /** JSDoc */\n  private _isDeniedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.denyUrls || !options.denyUrls.length) {\n      return false;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? false : options.denyUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _isAllowedUrl(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n    // TODO: Use Glob instead?\n    if (!options.allowUrls || !options.allowUrls.length) {\n      return true;\n    }\n    const url = this._getEventFilterUrl(event);\n    return !url ? true : options.allowUrls.some(pattern => isMatchingPattern(url, pattern));\n  }\n\n  /** JSDoc */\n  private _mergeOptions(clientOptions: Partial<InboundFiltersOptions> = {}): Partial<InboundFiltersOptions> {\n    return {\n      allowUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.whitelistUrls || []),\n        ...(this._options.allowUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.whitelistUrls || []),\n        ...(clientOptions.allowUrls || []),\n      ],\n      denyUrls: [\n        // eslint-disable-next-line deprecation/deprecation\n        ...(this._options.blacklistUrls || []),\n        ...(this._options.denyUrls || []),\n        // eslint-disable-next-line deprecation/deprecation\n        ...(clientOptions.blacklistUrls || []),\n        ...(clientOptions.denyUrls || []),\n      ],\n      ignoreErrors: [\n        ...(this._options.ignoreErrors || []),\n        ...(clientOptions.ignoreErrors || []),\n        ...DEFAULT_IGNORE_ERRORS,\n      ],\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n    };\n  }\n\n  /** JSDoc */\n  private _getPossibleEventMessages(event: Event): string[] {\n    if (event.message) {\n      return [event.message];\n    }\n    if (event.exception) {\n      try {\n        const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n        return [`${value}`, `${type}: ${value}`];\n      } catch (oO) {\n        logger.error(`Cannot extract message for event ${getEventDescription(event)}`);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  /** JSDoc */\n  private _getEventFilterUrl(event: Event): string | null {\n    try {\n      if (event.stacktrace) {\n        const frames = event.stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      if (event.exception) {\n        const frames =\n          event.exception.values && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;\n        return (frames && frames[frames.length - 1].filename) || null;\n      }\n      return null;\n    } catch (oO) {\n      logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n      return null;\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}