{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\mobile\\\\screens\\\\ProfileLanguage\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { languages } from '../../../api/config';\nimport { getLanguageName } from '../../../helpers';\nimport { changeLanguage, changeUserDataFetch, selectCurrentLanguage, selectUserInfo, selectUserLoggedIn } from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\nvar ProfileLanguageMobileScreenComponent = function ProfileLanguageMobileScreenComponent() {\n  var dispatch = useDispatch();\n  var intl = useIntl();\n  var history = useHistory();\n  var user = useSelector(selectUserInfo);\n  var isLoggedIn = useSelector(selectUserLoggedIn);\n  var currentLanguage = useSelector(selectCurrentLanguage);\n  var handleChangeLanguage = function handleChangeLanguage(language) {\n    if (isLoggedIn) {\n      var data = user.data && JSON.parse(user.data);\n      if (data && data.language && data.language !== language) {\n        var payload = _objectSpread(_objectSpread({}, user), {}, {\n          data: JSON.stringify(_objectSpread(_objectSpread({}, data), {}, {\n            language: language\n          }))\n        });\n        dispatch(changeUserDataFetch({\n          user: payload\n        }));\n      }\n    }\n    dispatch(changeLanguage(language));\n  };\n  var renderLanguageListItem = function renderLanguageListItem(language, index) {\n    var listItemClassName = classnames('pg-mobile-profile-language-screen__list__item', {\n      'pg-mobile-profile-language-screen__list__item--active': language === currentLanguage\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: listItemClassName,\n      onClick: function onClick() {\n        return handleChangeLanguage(language);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, getLanguageName(language)), /*#__PURE__*/React.createElement(CheckIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheader, {\n    title: intl.formatMessage({\n      id: 'page.mobile.profile.language.title'\n    }),\n    backTitle: intl.formatMessage({\n      id: 'page.body.profile.header.account'\n    }),\n    onGoBack: function onGoBack() {\n      return history.push('/profile');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-language-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-mobile-profile-language-screen__list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, languages.map(renderLanguageListItem))));\n};\nexport var ProfileLanguageMobileScreen = React.memo(ProfileLanguageMobileScreenComponent);","map":{"version":3,"names":["classnames","React","useIntl","useDispatch","useSelector","useHistory","languages","getLanguageName","changeLanguage","changeUserDataFetch","selectCurrentLanguage","selectUserInfo","selectUserLoggedIn","CheckIcon","Subheader","ProfileLanguageMobileScreenComponent","dispatch","intl","history","user","isLoggedIn","currentLanguage","handleChangeLanguage","language","data","JSON","parse","payload","stringify","renderLanguageListItem","index","listItemClassName","formatMessage","id","push","map","ProfileLanguageMobileScreen","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/mobile/screens/ProfileLanguage/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { languages } from '../../../api/config';\nimport { getLanguageName } from '../../../helpers';\nimport {\n    changeLanguage,\n    changeUserDataFetch,\n    selectCurrentLanguage,\n    selectUserInfo,\n    selectUserLoggedIn,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst ProfileLanguageMobileScreenComponent: React.FC = () => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const user = useSelector(selectUserInfo);\n    const isLoggedIn = useSelector(selectUserLoggedIn);\n    const currentLanguage = useSelector(selectCurrentLanguage);\n\n    const handleChangeLanguage = (language: string) => {\n        if (isLoggedIn) {\n            const data = user.data && JSON.parse(user.data);\n\n            if (data && data.language && data.language !== language) {\n                const payload = {\n                    ...user,\n                    data: JSON.stringify({\n                        ...data,\n                        language,\n                    }),\n                };\n\n                dispatch(changeUserDataFetch({ user: payload }));\n            }\n        }\n\n        dispatch(changeLanguage(language));\n    };\n\n    const renderLanguageListItem = (language, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-language-screen__list__item', {\n            'pg-mobile-profile-language-screen__list__item--active': language === currentLanguage,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeLanguage(language)}\n            >\n                <span>{getLanguageName(language)}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.language.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-language-screen\">\n                <div className=\"pg-mobile-profile-language-screen__list\">\n                    {languages.map(renderLanguageListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileLanguageMobileScreen = React.memo(ProfileLanguageMobileScreenComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}