{"ast":null,"code":"export var TYPE;\n(function (TYPE) {\n  /**\n   * Raw text\n   */\n  TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n  /**\n   * Variable w/o any format, e.g `var` in `this is a {var}`\n   */\n  TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n  /**\n   * Variable w/ number format\n   */\n  TYPE[TYPE[\"number\"] = 2] = \"number\";\n  /**\n   * Variable w/ date format\n   */\n  TYPE[TYPE[\"date\"] = 3] = \"date\";\n  /**\n   * Variable w/ time format\n   */\n  TYPE[TYPE[\"time\"] = 4] = \"time\";\n  /**\n   * Variable w/ select format\n   */\n  TYPE[TYPE[\"select\"] = 5] = \"select\";\n  /**\n   * Variable w/ plural format\n   */\n  TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n  /**\n   * Only possible within plural argument.\n   * This is the `#` symbol that will be substituted with the count.\n   */\n  TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n  return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n  return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n  return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n  return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n  return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n  return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n  return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n  return el.type === TYPE.pound;\n}\nexport function isNumberSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\n\nexport function isDateTimeSkeleton(el) {\n  return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\n\nexport function createLiteralElement(value) {\n  return {\n    type: TYPE.literal,\n    value: value\n  };\n}\nexport function createNumberElement(value, style) {\n  return {\n    type: TYPE.number,\n    value: value,\n    style: style\n  };\n}","map":{"version":3,"names":["TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isNumberSkeleton","isDateTimeSkeleton","createLiteralElement","value","createNumberElement","style"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/intl-messageformat-parser/lib/types.js"],"sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n})(TYPE || (TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n"],"mappings":"AAAA,OAAO,IAAIA,IAAI;AACf,CAAC,UAAUA,IAAI,EAAE;EACb;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS;EACrC;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU;EACvC;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACnC;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/B;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM;EAC/B;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACnC;AACJ;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ;EACnC;AACJ;AACA;AACA;EACIA,IAAI,CAACA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO;AACrC,CAAC,EAAEA,IAAI,KAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB;AACA;AACA;AACA,OAAO,SAASC,gBAAgB,CAACC,EAAE,EAAE;EACjC,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACI,OAAO;AACnC;AACA,OAAO,SAASC,iBAAiB,CAACH,EAAE,EAAE;EAClC,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACM,QAAQ;AACpC;AACA,OAAO,SAASC,eAAe,CAACL,EAAE,EAAE;EAChC,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACQ,MAAM;AAClC;AACA,OAAO,SAASC,aAAa,CAACP,EAAE,EAAE;EAC9B,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACU,IAAI;AAChC;AACA,OAAO,SAASC,aAAa,CAACT,EAAE,EAAE;EAC9B,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACY,IAAI;AAChC;AACA,OAAO,SAASC,eAAe,CAACX,EAAE,EAAE;EAChC,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACc,MAAM;AAClC;AACA,OAAO,SAASC,eAAe,CAACb,EAAE,EAAE;EAChC,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACgB,MAAM;AAClC;AACA,OAAO,SAASC,cAAc,CAACf,EAAE,EAAE;EAC/B,OAAOA,EAAE,CAACC,IAAI,KAAKH,IAAI,CAACkB,KAAK;AACjC;AACA,OAAO,SAASC,gBAAgB,CAACjB,EAAE,EAAE;EACjC,OAAO,CAAC,EAAEA,EAAE,IAAI,OAAOA,EAAE,KAAK,QAAQ,IAAIA,EAAE,CAACC,IAAI,KAAK,CAAC,CAAC,aAAa;AACzE;;AACA,OAAO,SAASiB,kBAAkB,CAAClB,EAAE,EAAE;EACnC,OAAO,CAAC,EAAEA,EAAE,IAAI,OAAOA,EAAE,KAAK,QAAQ,IAAIA,EAAE,CAACC,IAAI,KAAK,CAAC,CAAC,eAAe;AAC3E;;AACA,OAAO,SAASkB,oBAAoB,CAACC,KAAK,EAAE;EACxC,OAAO;IACHnB,IAAI,EAAEH,IAAI,CAACI,OAAO;IAClBkB,KAAK,EAAEA;EACX,CAAC;AACL;AACA,OAAO,SAASC,mBAAmB,CAACD,KAAK,EAAEE,KAAK,EAAE;EAC9C,OAAO;IACHrB,IAAI,EAAEH,IAAI,CAACQ,MAAM;IACjBc,KAAK,EAAEA,KAAK;IACZE,KAAK,EAAEA;EACX,CAAC;AACL"},"metadata":{},"sourceType":"module"}