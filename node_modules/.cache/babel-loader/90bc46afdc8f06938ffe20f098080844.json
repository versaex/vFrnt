{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\MarketsTable\\\\index.tsx\";\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Decimal, TickerTable } from '../../components';\nimport { useMarketsFetch, useMarketsTickersFetch } from '../../hooks';\nimport { selectMarkets, selectMarketTickers, setCurrentMarket } from '../../modules';\nvar defaultTicker = {\n  amount: '0.0',\n  last: '0.0',\n  high: '0.0',\n  open: '0.0',\n  low: '0.0',\n  price_change_percent: '+0.00%',\n  volume: '0.0'\n};\nvar MarketsTableComponent = function MarketsTableComponent(props) {\n  useMarketsFetch();\n  useMarketsTickersFetch();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var markets = useSelector(selectMarkets);\n  var marketTickers = useSelector(selectMarketTickers);\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentBidUnit = _React$useState2[0],\n    setCurrentBidUnit = _React$useState2[1];\n  var handleRedirectToTrading = function handleRedirectToTrading(id) {\n    var currentMarket = markets.find(function (item) {\n      return item.id === id;\n    });\n    if (currentMarket) {\n      props.handleChangeCurrentMarket && props.handleChangeCurrentMarket(currentMarket);\n      dispatch(setCurrentMarket(currentMarket));\n      history.push(\"/trading/\".concat(currentMarket.id));\n    }\n  };\n  var formatFilteredMarkets = function formatFilteredMarkets(list, market) {\n    if (!list.includes(market.quote_unit)) {\n      list.push(market.quote_unit);\n    }\n    return list;\n  };\n  var currentBidUnitsList = [''];\n  if (markets.length > 0) {\n    currentBidUnitsList = markets.reduce(formatFilteredMarkets, currentBidUnitsList);\n  }\n  var currentBidUnitMarkets = props.markets || markets;\n  if (currentBidUnit) {\n    currentBidUnitMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.filter(function (market) {\n      return market.quote_unit === currentBidUnit;\n    }) : [];\n  }\n  var formattedMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.map(function (market) {\n    return _objectSpread(_objectSpread({}, market), {}, {\n      last: Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision),\n      open: Decimal.format(Number((marketTickers[market.id] || defaultTicker).open), market.price_precision),\n      price_change_percent: String((marketTickers[market.id] || defaultTicker).price_change_percent),\n      high: Decimal.format(Number((marketTickers[market.id] || defaultTicker).high), market.amount_precision),\n      low: Decimal.format(Number((marketTickers[market.id] || defaultTicker).low), market.amount_precision),\n      volume: Decimal.format(Number((marketTickers[market.id] || defaultTicker).volume), market.amount_precision)\n    });\n  }).map(function (market) {\n    return _objectSpread(_objectSpread({}, market), {}, {\n      change: Decimal.format((+market.last - +market.open).toFixed(market.price_precision), market.price_precision)\n    });\n  }) : [];\n  return /*#__PURE__*/React.createElement(TickerTable, {\n    currentBidUnit: currentBidUnit,\n    currentBidUnitsList: currentBidUnitsList,\n    markets: formattedMarkets,\n    redirectToTrading: handleRedirectToTrading,\n    setCurrentBidUnit: setCurrentBidUnit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  });\n};\nexport var MarketsTable = React.memo(MarketsTableComponent);","map":{"version":3,"names":["React","useDispatch","useSelector","useHistory","Decimal","TickerTable","useMarketsFetch","useMarketsTickersFetch","selectMarkets","selectMarketTickers","setCurrentMarket","defaultTicker","amount","last","high","open","low","price_change_percent","volume","MarketsTableComponent","props","history","dispatch","markets","marketTickers","useState","currentBidUnit","setCurrentBidUnit","handleRedirectToTrading","id","currentMarket","find","item","handleChangeCurrentMarket","push","formatFilteredMarkets","list","market","includes","quote_unit","currentBidUnitsList","length","reduce","currentBidUnitMarkets","filter","formattedMarkets","map","format","Number","amount_precision","price_precision","String","change","toFixed","MarketsTable","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/MarketsTable/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Decimal, TickerTable } from '../../components';\nimport {\n    useMarketsFetch,\n    useMarketsTickersFetch,\n} from '../../hooks';\nimport {\n    Market,\n    selectMarkets,\n    selectMarketTickers,\n    setCurrentMarket,\n} from '../../modules';\n\nconst defaultTicker = {\n    amount: '0.0',\n    last: '0.0',\n    high: '0.0',\n    open: '0.0',\n    low: '0.0',\n    price_change_percent: '+0.00%',\n    volume: '0.0',\n};\n\nconst MarketsTableComponent = props => {\n    useMarketsFetch();\n    useMarketsTickersFetch();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const markets = useSelector(selectMarkets);\n    const marketTickers = useSelector(selectMarketTickers);\n    const [currentBidUnit, setCurrentBidUnit] = React.useState('');\n\n    const handleRedirectToTrading = (id: string) => {\n        const currentMarket: Market | undefined = markets.find(item => item.id === id);\n\n        if (currentMarket) {\n            props.handleChangeCurrentMarket && props.handleChangeCurrentMarket(currentMarket);\n            dispatch(setCurrentMarket(currentMarket));\n            history.push(`/trading/${currentMarket.id}`);\n        }\n    };\n\n    const formatFilteredMarkets = (list: string[], market: Market) => {\n        if (!list.includes(market.quote_unit)) {\n            list.push(market.quote_unit);\n        }\n\n        return list;\n    };\n\n    let currentBidUnitsList: string[] = [''];\n\n    if (markets.length > 0) {\n        currentBidUnitsList = markets.reduce(formatFilteredMarkets, currentBidUnitsList);\n    }\n\n    let currentBidUnitMarkets = props.markets || markets;\n\n    if (currentBidUnit) {\n        currentBidUnitMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.filter(market => market.quote_unit === currentBidUnit) : [];\n    }\n\n    const formattedMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.map(market =>\n        ({\n            ...market,\n            last: Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision),\n            open: Decimal.format(Number((marketTickers[market.id] || defaultTicker).open), market.price_precision),\n            price_change_percent: String((marketTickers[market.id] || defaultTicker).price_change_percent),\n            high: Decimal.format(Number((marketTickers[market.id] || defaultTicker).high), market.amount_precision),\n            low: Decimal.format(Number((marketTickers[market.id] || defaultTicker).low), market.amount_precision),\n            volume: Decimal.format(Number((marketTickers[market.id] || defaultTicker).volume), market.amount_precision),\n        }),\n    ).map(market =>\n        ({\n            ...market,\n            change: Decimal.format((+market.last - +market.open)\n                .toFixed(market.price_precision), market.price_precision),\n        }),\n    ) : [];\n\n    return (\n        <TickerTable\n            currentBidUnit={currentBidUnit}\n            currentBidUnitsList={currentBidUnitsList}\n            markets={formattedMarkets}\n            redirectToTrading={handleRedirectToTrading}\n            setCurrentBidUnit={setCurrentBidUnit}\n        />\n    );\n};\n\nexport const MarketsTable = React.memo(MarketsTableComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}