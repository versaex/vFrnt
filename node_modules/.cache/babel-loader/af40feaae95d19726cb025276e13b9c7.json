{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"at\"];\nexport var convertOrderEvent = function convertOrderEvent(orderEvent) {\n  var at = orderEvent.at,\n    order = _objectWithoutProperties(orderEvent, _excluded);\n  return _objectSpread(_objectSpread({}, order), {}, {\n    ord_type: order.order_type || order.ord_type\n  });\n};\nexport var insertOrUpdate = function insertOrUpdate(list, order) {\n  var state = order.state,\n    id = order.id,\n    uuid = order.uuid;\n  switch (state) {\n    case 'wait':\n      var index = list.findIndex(function (value) {\n        return value.uuid && value.uuid === uuid || value.id === id;\n      });\n      if (index === -1) {\n        return [_objectSpread({}, order)].concat(_toConsumableArray(list));\n      }\n      return list.map(function (item) {\n        if (item.uuid && item.uuid === order.uuid || item.id === order.id) {\n          return _objectSpread({}, order);\n        }\n        return item;\n      });\n    default:\n      return list.reduce(function (memo, item, i) {\n        if (item.uuid && item.uuid !== uuid || item.id !== id) {\n          memo.push(item);\n        }\n        if (item.uuid && item.uuid === uuid) {\n          memo.splice(i, 1);\n        }\n        return memo;\n      }, []);\n  }\n};\nexport var insertIfNotExisted = function insertIfNotExisted(list, order) {\n  var index = list.findIndex(function (value) {\n    return order.confirmed ? value.id === order.id : value.uuid === order.uuid;\n  });\n  return index === -1 ? [_objectSpread({}, order)].concat(_toConsumableArray(list)) : _toConsumableArray(list);\n};","map":{"version":3,"names":["convertOrderEvent","orderEvent","at","order","ord_type","order_type","insertOrUpdate","list","state","id","uuid","index","findIndex","value","map","item","reduce","memo","i","push","splice","insertIfNotExisted","confirmed"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/openOrders/helpers.ts"],"sourcesContent":["import { OrderCommon, OrderEvent } from '../../types';\n\nexport const convertOrderEvent = (orderEvent: OrderEvent): OrderCommon => {\n    const { at, ...order } = orderEvent;\n\n    return {\n        ...order,\n        ord_type: order.order_type || order.ord_type,\n    };\n};\n\nexport const insertOrUpdate = (list: OrderCommon[], order: OrderCommon): OrderCommon[] => {\n    const { state, id, uuid } = order;\n    switch (state) {\n        case 'wait':\n            const index = list.findIndex((value: OrderCommon) => (value.uuid && value.uuid === uuid) || value.id === id);\n            if (index === -1) {\n                return [{...order}, ...list];\n            }\n\n            return list.map(item => {\n                if ((item.uuid && item.uuid === order.uuid) || (item.id === order.id)) {\n                    return {...order};\n                }\n\n                return item;\n            });\n        default:\n            return list.reduce((memo: OrderCommon[], item: OrderCommon, i: number): OrderCommon[] => {\n                if ((item.uuid && item.uuid !== uuid) || item.id !== id) {\n                    memo.push(item);\n                }\n\n                if (item.uuid && item.uuid === uuid) {\n                    memo.splice(i, 1);\n                }\n\n                return memo;\n            }, []);\n    }\n};\n\nexport const insertIfNotExisted = (list: OrderCommon[], order: OrderCommon): OrderCommon[] => {\n    const index = list.findIndex((value: OrderCommon) =>\n        order.confirmed ? value.id === order.id : value.uuid === order.uuid);\n\n    return (index === -1) ? [{...order}, ...list] : [...list];\n};\n"],"mappings":";;;;AAEA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,UAAsB,EAAkB;EACtE,IAAQC,EAAE,GAAeD,UAAU,CAA3BC,EAAE;IAAKC,KAAK,4BAAKF,UAAU;EAEnC,uCACOE,KAAK;IACRC,QAAQ,EAAED,KAAK,CAACE,UAAU,IAAIF,KAAK,CAACC;EAAQ;AAEpD,CAAC;AAED,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAc,CAAIC,IAAmB,EAAEJ,KAAkB,EAAoB;EACtF,IAAQK,KAAK,GAAeL,KAAK,CAAzBK,KAAK;IAAEC,EAAE,GAAWN,KAAK,CAAlBM,EAAE;IAAEC,IAAI,GAAKP,KAAK,CAAdO,IAAI;EACvB,QAAQF,KAAK;IACT,KAAK,MAAM;MACP,IAAMG,KAAK,GAAGJ,IAAI,CAACK,SAAS,CAAC,UAACC,KAAkB;QAAA,OAAMA,KAAK,CAACH,IAAI,IAAIG,KAAK,CAACH,IAAI,KAAKA,IAAI,IAAKG,KAAK,CAACJ,EAAE,KAAKA,EAAE;MAAA,EAAC;MAC5G,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QACd,0BAAYR,KAAK,6BAAMI,IAAI;MAC/B;MAEA,OAAOA,IAAI,CAACO,GAAG,CAAC,UAAAC,IAAI,EAAI;QACpB,IAAKA,IAAI,CAACL,IAAI,IAAIK,IAAI,CAACL,IAAI,KAAKP,KAAK,CAACO,IAAI,IAAMK,IAAI,CAACN,EAAE,KAAKN,KAAK,CAACM,EAAG,EAAE;UACnE,yBAAWN,KAAK;QACpB;QAEA,OAAOY,IAAI;MACf,CAAC,CAAC;IACN;MACI,OAAOR,IAAI,CAACS,MAAM,CAAC,UAACC,IAAmB,EAAEF,IAAiB,EAAEG,CAAS,EAAoB;QACrF,IAAKH,IAAI,CAACL,IAAI,IAAIK,IAAI,CAACL,IAAI,KAAKA,IAAI,IAAKK,IAAI,CAACN,EAAE,KAAKA,EAAE,EAAE;UACrDQ,IAAI,CAACE,IAAI,CAACJ,IAAI,CAAC;QACnB;QAEA,IAAIA,IAAI,CAACL,IAAI,IAAIK,IAAI,CAACL,IAAI,KAAKA,IAAI,EAAE;UACjCO,IAAI,CAACG,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;QACrB;QAEA,OAAOD,IAAI;MACf,CAAC,EAAE,EAAE,CAAC;EAAC;AAEnB,CAAC;AAED,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkB,CAAId,IAAmB,EAAEJ,KAAkB,EAAoB;EAC1F,IAAMQ,KAAK,GAAGJ,IAAI,CAACK,SAAS,CAAC,UAACC,KAAkB;IAAA,OAC5CV,KAAK,CAACmB,SAAS,GAAGT,KAAK,CAACJ,EAAE,KAAKN,KAAK,CAACM,EAAE,GAAGI,KAAK,CAACH,IAAI,KAAKP,KAAK,CAACO,IAAI;EAAA,EAAC;EAExE,OAAQC,KAAK,KAAK,CAAC,CAAC,sBAASR,KAAK,6BAAMI,IAAI,wBAAQA,IAAI,CAAC;AAC7D,CAAC"},"metadata":{},"sourceType":"module"}