{"ast":null,"code":"import * as moment from 'moment-timezone';\nvar timezone = '';\nexport var getTimezone = function getTimezone() {\n  return timezone.length > 0 ? timezone : moment.tz.guess();\n};\nexport var setTimezone = function setTimezone(tz) {\n  return timezone = tz;\n};\nexport var stdTimezoneOffset = function stdTimezoneOffset(date) {\n  var jan = new Date(date.getFullYear(), 0, 1);\n  var jul = new Date(date.getFullYear(), 6, 1);\n  return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n};","map":{"version":3,"names":["moment","timezone","getTimezone","length","tz","guess","setTimezone","stdTimezoneOffset","date","jan","Date","getFullYear","jul","Math","max","getTimezoneOffset"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/timezone.ts"],"sourcesContent":["import * as moment from 'moment-timezone';\n\nlet timezone = '';\nexport const getTimezone = () => timezone.length > 0 ? timezone : moment.tz.guess();\nexport const setTimezone = (tz: string) => timezone = tz;\n\nexport const stdTimezoneOffset = (date: Date) => {\n    const jan = new Date(date.getFullYear(), 0, 1);\n    const jul = new Date(date.getFullYear(), 6, 1);\n\n    return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n};\n"],"mappings":"AAAA,OAAO,KAAKA,MAAM,MAAM,iBAAiB;AAEzC,IAAIC,QAAQ,GAAG,EAAE;AACjB,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW;EAAA,OAASD,QAAQ,CAACE,MAAM,GAAG,CAAC,GAAGF,QAAQ,GAAGD,MAAM,CAACI,EAAE,CAACC,KAAK,EAAE;AAAA;AACnF,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAIF,EAAU;EAAA,OAAKH,QAAQ,GAAGG,EAAE;AAAA;AAExD,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,IAAU,EAAK;EAC7C,IAAMC,GAAG,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAC9C,IAAMC,GAAG,GAAG,IAAIF,IAAI,CAACF,IAAI,CAACG,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;EAE9C,OAAOE,IAAI,CAACC,GAAG,CAACL,GAAG,CAACM,iBAAiB,EAAE,EAAEH,GAAG,CAACG,iBAAiB,EAAE,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module"}