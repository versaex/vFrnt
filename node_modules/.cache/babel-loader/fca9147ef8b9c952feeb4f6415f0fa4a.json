{"ast":null,"code":"import bch from 'bitcoincashjs';\nexport var formatCCYAddress = function formatCCYAddress(currency, address) {\n  if (address) {\n    if (currency === 'BCH') {\n      if (bch.Address.isValid(address)) {\n        return bch.Address(address).toString(bch.Address.CashAddrFormat);\n      } else {\n        return '';\n      }\n    } else {\n      return address;\n    }\n  } else {\n    return '';\n  }\n};","map":{"version":3,"names":["bch","formatCCYAddress","currency","address","Address","isValid","toString","CashAddrFormat"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/helpers/formatCCYAddress.ts"],"sourcesContent":["import bch from 'bitcoincashjs';\n\nexport const formatCCYAddress = (currency: string, address: string): string => {\n    if (address) {\n        if (currency === 'BCH') {\n            if (bch.Address.isValid(address)) {\n                return bch.Address(address).toString(bch.Address.CashAddrFormat);\n            } else {\n                return '';\n            }\n        } else {\n            return address;\n        }\n    } else {\n        return '';\n    }\n};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,eAAe;AAE/B,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,QAAgB,EAAEC,OAAe,EAAa;EAC3E,IAAIA,OAAO,EAAE;IACT,IAAID,QAAQ,KAAK,KAAK,EAAE;MACpB,IAAIF,GAAG,CAACI,OAAO,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;QAC9B,OAAOH,GAAG,CAACI,OAAO,CAACD,OAAO,CAAC,CAACG,QAAQ,CAACN,GAAG,CAACI,OAAO,CAACG,cAAc,CAAC;MACpE,CAAC,MAAM;QACH,OAAO,EAAE;MACb;IACJ,CAAC,MAAM;MACH,OAAOJ,OAAO;IAClB;EACJ,CAAC,MAAM;IACH,OAAO,EAAE;EACb;AACJ,CAAC"},"metadata":{},"sourceType":"module"}