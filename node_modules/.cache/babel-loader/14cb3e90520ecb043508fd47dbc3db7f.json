{"ast":null,"code":"import { AUTH_ENTROPY_PASSWORD_DATA, AUTH_ENTROPY_PASSWORD_ERROR, AUTH_ENTROPY_PASSWORD_FETCH, AUTH_LOGOUT_FAILURE, AUTH_LOGOUT_FETCH, AUTH_SIGN_IN_DATA, AUTH_SIGN_IN_ERROR, AUTH_SIGN_IN_FETCH, AUTH_SIGN_IN_REQUIRE_2FA, AUTH_SIGN_IN_REQUIRE_2FA_RESET, AUTH_SIGN_UP_DATA, AUTH_SIGN_UP_ERROR, AUTH_SIGN_UP_FETCH, AUTH_SIGN_UP_REQUIRE_VERIFICATION, AUTH_VERIFICATION_FETCH, AUTH_VERIFICATION_SUCCESS } from './constants';\nexport var entropyPasswordFetch = function entropyPasswordFetch(payload) {\n  return {\n    type: AUTH_ENTROPY_PASSWORD_FETCH,\n    payload: payload\n  };\n};\nexport var entropyPasswordData = function entropyPasswordData(payload) {\n  return {\n    type: AUTH_ENTROPY_PASSWORD_DATA,\n    payload: payload\n  };\n};\nexport var entropyPasswordError = function entropyPasswordError(error) {\n  return {\n    type: AUTH_ENTROPY_PASSWORD_ERROR,\n    error: error\n  };\n};\nexport var signIn = function signIn(payload) {\n  return {\n    type: AUTH_SIGN_IN_FETCH,\n    payload: payload\n  };\n};\nexport var signInData = function signInData() {\n  return {\n    type: AUTH_SIGN_IN_DATA\n  };\n};\nexport var signInError = function signInError(error) {\n  return {\n    type: AUTH_SIGN_IN_ERROR,\n    error: error\n  };\n};\nexport var signInRequire2FA = function signInRequire2FA(payload) {\n  return {\n    type: AUTH_SIGN_IN_REQUIRE_2FA,\n    payload: payload\n  };\n};\nexport var signUp = function signUp(payload) {\n  return {\n    type: AUTH_SIGN_UP_FETCH,\n    payload: payload\n  };\n};\nexport var signUpData = function signUpData() {\n  return {\n    type: AUTH_SIGN_UP_DATA\n  };\n};\nexport var signUpError = function signUpError(error) {\n  return {\n    type: AUTH_SIGN_UP_ERROR,\n    error: error\n  };\n};\nexport var signUpRequireVerification = function signUpRequireVerification(payload) {\n  return {\n    type: AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    payload: payload\n  };\n};\nexport var verificationFetch = function verificationFetch(payload) {\n  return {\n    type: AUTH_VERIFICATION_FETCH,\n    payload: payload\n  };\n};\nexport var verificationSuccess = function verificationSuccess() {\n  return {\n    type: AUTH_VERIFICATION_SUCCESS\n  };\n};\nexport var logoutFetch = function logoutFetch() {\n  return {\n    type: AUTH_LOGOUT_FETCH\n  };\n};\nexport var logoutError = function logoutError(error) {\n  return {\n    type: AUTH_LOGOUT_FAILURE,\n    error: error\n  };\n};\nexport var require2FAReset = function require2FAReset() {\n  return {\n    type: AUTH_SIGN_IN_REQUIRE_2FA_RESET\n  };\n};","map":{"version":3,"names":["AUTH_ENTROPY_PASSWORD_DATA","AUTH_ENTROPY_PASSWORD_ERROR","AUTH_ENTROPY_PASSWORD_FETCH","AUTH_LOGOUT_FAILURE","AUTH_LOGOUT_FETCH","AUTH_SIGN_IN_DATA","AUTH_SIGN_IN_ERROR","AUTH_SIGN_IN_FETCH","AUTH_SIGN_IN_REQUIRE_2FA","AUTH_SIGN_IN_REQUIRE_2FA_RESET","AUTH_SIGN_UP_DATA","AUTH_SIGN_UP_ERROR","AUTH_SIGN_UP_FETCH","AUTH_SIGN_UP_REQUIRE_VERIFICATION","AUTH_VERIFICATION_FETCH","AUTH_VERIFICATION_SUCCESS","entropyPasswordFetch","payload","type","entropyPasswordData","entropyPasswordError","error","signIn","signInData","signInError","signInRequire2FA","signUp","signUpData","signUpError","signUpRequireVerification","verificationFetch","verificationSuccess","logoutFetch","logoutError","require2FAReset"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/auth/actions.ts"],"sourcesContent":["import { CommonError } from '../../types';\nimport {\n    AUTH_ENTROPY_PASSWORD_DATA,\n    AUTH_ENTROPY_PASSWORD_ERROR,\n    AUTH_ENTROPY_PASSWORD_FETCH,\n    AUTH_LOGOUT_FAILURE,\n    AUTH_LOGOUT_FETCH,\n    AUTH_SIGN_IN_DATA,\n    AUTH_SIGN_IN_ERROR,\n    AUTH_SIGN_IN_FETCH,\n    AUTH_SIGN_IN_REQUIRE_2FA,\n    AUTH_SIGN_IN_REQUIRE_2FA_RESET,\n    AUTH_SIGN_UP_DATA,\n    AUTH_SIGN_UP_ERROR,\n    AUTH_SIGN_UP_FETCH,\n    AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    AUTH_TEST_STATE,\n    AUTH_VERIFICATION_FETCH,\n    AUTH_VERIFICATION_SUCCESS,\n} from './constants';\n\nexport interface GeetestCaptchaResponse {\n    geetest_challenge: string;\n    geetest_validate: string;\n    geetest_seccode: string;\n}\n\nexport interface EntropyPasswordFetch {\n    type: typeof AUTH_ENTROPY_PASSWORD_FETCH;\n    payload: {\n        password: string,\n    };\n}\n\nexport interface EntropyPasswordError {\n    type: typeof AUTH_ENTROPY_PASSWORD_ERROR;\n    error: CommonError;\n}\n\nexport interface EntropyPasswordData {\n    type: typeof AUTH_ENTROPY_PASSWORD_DATA;\n    payload: {\n        entropy: number;\n    };\n}\nexport interface SignInFetch {\n    type: typeof AUTH_SIGN_IN_FETCH;\n    payload: {\n        email: string;\n        password: string;\n        data?: string;\n        otp_code?: string;\n        captcha_response?: string | GeetestCaptchaResponse;\n    };\n}\n\nexport interface SignInError {\n    type: typeof AUTH_SIGN_IN_ERROR;\n    error: CommonError;\n}\n\nexport interface SignInRequire2FA {\n    type: typeof AUTH_SIGN_IN_REQUIRE_2FA;\n    payload: {\n        require2fa: boolean;\n    };\n}\n\nexport interface SignInData {\n    type: typeof AUTH_SIGN_IN_DATA;\n}\n\nexport interface SignUpFetch {\n    type: typeof AUTH_SIGN_UP_FETCH;\n    payload: {\n        username?: string;\n        email: string;\n        password: string;\n        data: string;\n        captcha_response?: string | GeetestCaptchaResponse;\n        refid?: string;\n    };\n}\n\nexport interface SignUpData {\n    type: typeof AUTH_SIGN_UP_DATA;\n}\n\nexport interface SignUpError {\n    type: typeof AUTH_SIGN_UP_ERROR;\n    error: CommonError;\n}\n\nexport interface SignUpRequireVerification {\n    type: typeof AUTH_SIGN_UP_REQUIRE_VERIFICATION;\n    payload: {\n        requireVerification: boolean;\n    };\n}\n\nexport interface VerificationFetch {\n    type: typeof AUTH_VERIFICATION_FETCH;\n    payload: {\n        token: string;\n    };\n}\n\nexport interface VerificationSuccess {\n    type: typeof AUTH_VERIFICATION_SUCCESS;\n}\n\nexport interface LogoutFetch {\n    type: typeof AUTH_LOGOUT_FETCH;\n}\n\nexport interface LogoutFailed {\n    type: typeof AUTH_LOGOUT_FAILURE;\n    error: CommonError;\n}\n\nexport interface TestAuthState {\n    type: typeof AUTH_TEST_STATE;\n}\n\nexport interface AuthSignInRequire2FAReset {\n    type: typeof AUTH_SIGN_IN_REQUIRE_2FA_RESET;\n}\n\nexport type AuthAction =\n    | SignInFetch\n    | SignInData\n    | SignInError\n    | SignInRequire2FA\n    | SignUpData\n    | SignUpFetch\n    | SignUpError\n    | SignUpRequireVerification\n    | VerificationFetch\n    | VerificationSuccess\n    | LogoutFailed\n    | LogoutFetch\n    | TestAuthState\n    | EntropyPasswordFetch\n    | EntropyPasswordData\n    | EntropyPasswordError\n    | AuthSignInRequire2FAReset;\n\nexport const entropyPasswordFetch = (payload: EntropyPasswordFetch['payload']): EntropyPasswordFetch => ({\n    type: AUTH_ENTROPY_PASSWORD_FETCH,\n    payload,\n});\n\nexport const entropyPasswordData = (payload: EntropyPasswordData['payload']): EntropyPasswordData => ({\n    type: AUTH_ENTROPY_PASSWORD_DATA,\n    payload,\n});\n\nexport const entropyPasswordError = (error: CommonError): EntropyPasswordError => ({\n    type: AUTH_ENTROPY_PASSWORD_ERROR,\n    error,\n});\n\nexport const signIn = (payload: SignInFetch['payload']): SignInFetch => ({\n    type: AUTH_SIGN_IN_FETCH,\n    payload,\n});\n\nexport const signInData = (): SignInData => ({\n    type: AUTH_SIGN_IN_DATA,\n});\n\nexport const signInError = (error: CommonError): SignInError => ({\n    type: AUTH_SIGN_IN_ERROR,\n    error,\n});\n\nexport const signInRequire2FA = (payload: SignInRequire2FA['payload']): SignInRequire2FA => ({\n    type: AUTH_SIGN_IN_REQUIRE_2FA,\n    payload,\n});\n\nexport const signUp = (payload: SignUpFetch['payload']): SignUpFetch => ({\n    type: AUTH_SIGN_UP_FETCH,\n    payload,\n});\n\nexport const signUpData = (): SignUpData => ({\n    type: AUTH_SIGN_UP_DATA,\n});\n\nexport const signUpError = (error: CommonError): SignUpError => ({\n    type: AUTH_SIGN_UP_ERROR,\n    error,\n});\n\nexport const signUpRequireVerification = (payload: SignUpRequireVerification['payload']): SignUpRequireVerification => ({\n    type: AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    payload,\n});\n\nexport const verificationFetch = (payload: VerificationFetch['payload']): VerificationFetch => ({\n    type: AUTH_VERIFICATION_FETCH,\n    payload,\n});\n\nexport const verificationSuccess = (): VerificationSuccess => ({\n    type: AUTH_VERIFICATION_SUCCESS,\n});\n\nexport const logoutFetch = (): LogoutFetch => ({\n    type: AUTH_LOGOUT_FETCH,\n});\n\nexport const logoutError = (error: CommonError): LogoutFailed => ({\n    type: AUTH_LOGOUT_FAILURE,\n    error,\n});\n\nexport const require2FAReset = (): AuthSignInRequire2FAReset => ({\n    type: AUTH_SIGN_IN_REQUIRE_2FA_RESET,\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}