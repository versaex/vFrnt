{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { PHONE_RESEND_CODE_DATA, PHONE_RESEND_CODE_ERROR, PHONE_RESEND_CODE_FETCH, PHONE_SEND_CODE_DATA, PHONE_SEND_CODE_ERROR, PHONE_SEND_CODE_FETCH, PHONE_VERIFY_DATA, PHONE_VERIFY_ERROR, PHONE_VERIFY_FETCH } from './constants';\nexport var initialPhoneState = {\n  codeSend: false\n};\nexport var phoneReducer = function phoneReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPhoneState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PHONE_SEND_CODE_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        codeSend: false,\n        error: undefined,\n        successMessage: undefined\n      });\n    case PHONE_SEND_CODE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        codeSend: true\n      });\n    case PHONE_SEND_CODE_ERROR:\n      return {\n        codeSend: false,\n        error: action.error\n      };\n    case PHONE_VERIFY_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        successMessage: action.payload.message,\n        error: undefined\n      });\n    case PHONE_VERIFY_ERROR:\n      return {\n        codeSend: false,\n        error: action.error\n      };\n    case PHONE_VERIFY_FETCH:\n    case PHONE_RESEND_CODE_FETCH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        codeSend: false,\n        error: undefined,\n        successMessage: undefined\n      });\n    case PHONE_RESEND_CODE_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        codeSend: true\n      });\n    case PHONE_RESEND_CODE_ERROR:\n      return {\n        codeSend: false,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["PHONE_RESEND_CODE_DATA","PHONE_RESEND_CODE_ERROR","PHONE_RESEND_CODE_FETCH","PHONE_SEND_CODE_DATA","PHONE_SEND_CODE_ERROR","PHONE_SEND_CODE_FETCH","PHONE_VERIFY_DATA","PHONE_VERIFY_ERROR","PHONE_VERIFY_FETCH","initialPhoneState","codeSend","phoneReducer","state","action","type","error","undefined","successMessage","payload","message"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/modules/user/kyc/phone/reducer.ts"],"sourcesContent":["import { CommonError } from '../../../types';\nimport { PhoneAction } from './actions';\nimport {\n    PHONE_RESEND_CODE_DATA,\n    PHONE_RESEND_CODE_ERROR,\n    PHONE_RESEND_CODE_FETCH,\n    PHONE_SEND_CODE_DATA,\n    PHONE_SEND_CODE_ERROR,\n    PHONE_SEND_CODE_FETCH,\n    PHONE_VERIFY_DATA,\n    PHONE_VERIFY_ERROR,\n    PHONE_VERIFY_FETCH,\n} from './constants';\n\nexport interface PhoneState {\n    codeSend: boolean;\n    error?: CommonError;\n    successMessage?: string;\n}\n\nexport const initialPhoneState: PhoneState = {\n    codeSend: false,\n};\n\nexport const phoneReducer = (state = initialPhoneState, action: PhoneAction) => {\n    switch (action.type) {\n        case PHONE_SEND_CODE_FETCH:\n            return {\n                ...state,\n                codeSend: false,\n                error: undefined,\n                successMessage: undefined,\n            };\n        case PHONE_SEND_CODE_DATA:\n            return {\n                ...state,\n                codeSend: true,\n            };\n        case PHONE_SEND_CODE_ERROR:\n            return {\n                codeSend: false,\n                error: action.error,\n            };\n        case PHONE_VERIFY_DATA:\n            return {\n                ...state,\n                successMessage: action.payload.message,\n                error: undefined,\n            };\n        case PHONE_VERIFY_ERROR:\n            return {\n                codeSend: false,\n                error: action.error,\n            };\n        case PHONE_VERIFY_FETCH:\n        case PHONE_RESEND_CODE_FETCH:\n            return {\n                ...state,\n                codeSend: false,\n                error: undefined,\n                successMessage: undefined,\n            };\n        case PHONE_RESEND_CODE_DATA:\n            return {\n                ...state,\n                codeSend: true,\n            };\n\n        case PHONE_RESEND_CODE_ERROR:\n            return {\n                codeSend: false,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\n"],"mappings":";AAEA,SACIA,sBAAsB,EACtBC,uBAAuB,EACvBC,uBAAuB,EACvBC,oBAAoB,EACpBC,qBAAqB,EACrBC,qBAAqB,EACrBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,QACf,aAAa;AAQpB,OAAO,IAAMC,iBAA6B,GAAG;EACzCC,QAAQ,EAAE;AACd,CAAC;AAED,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAuD;EAAA,IAAnDC,KAAK,uEAAGH,iBAAiB;EAAA,IAAEI,MAAmB;EACvE,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,qBAAqB;MACtB,uCACOO,KAAK;QACRF,QAAQ,EAAE,KAAK;QACfK,KAAK,EAAEC,SAAS;QAChBC,cAAc,EAAED;MAAS;IAEjC,KAAKb,oBAAoB;MACrB,uCACOS,KAAK;QACRF,QAAQ,EAAE;MAAI;IAEtB,KAAKN,qBAAqB;MACtB,OAAO;QACHM,QAAQ,EAAE,KAAK;QACfK,KAAK,EAAEF,MAAM,CAACE;MAClB,CAAC;IACL,KAAKT,iBAAiB;MAClB,uCACOM,KAAK;QACRK,cAAc,EAAEJ,MAAM,CAACK,OAAO,CAACC,OAAO;QACtCJ,KAAK,EAAEC;MAAS;IAExB,KAAKT,kBAAkB;MACnB,OAAO;QACHG,QAAQ,EAAE,KAAK;QACfK,KAAK,EAAEF,MAAM,CAACE;MAClB,CAAC;IACL,KAAKP,kBAAkB;IACvB,KAAKN,uBAAuB;MACxB,uCACOU,KAAK;QACRF,QAAQ,EAAE,KAAK;QACfK,KAAK,EAAEC,SAAS;QAChBC,cAAc,EAAED;MAAS;IAEjC,KAAKhB,sBAAsB;MACvB,uCACOY,KAAK;QACRF,QAAQ,EAAE;MAAI;IAGtB,KAAKT,uBAAuB;MACxB,OAAO;QACHS,QAAQ,EAAE,KAAK;QACfK,KAAK,EAAEF,MAAM,CAACE;MAClB,CAAC;IACL;MACI,OAAOH,KAAK;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module"}