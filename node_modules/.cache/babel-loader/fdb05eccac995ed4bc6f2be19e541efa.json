{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\Confirm\\\\Identity\\\\index.tsx\";\nimport cr from 'classnames';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport MaskInput from 'react-maskinput';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { languages } from '../../../api/config';\nimport { CustomInput, SearchDropdown } from '../../../components';\nimport { formatDate, isDateInFuture } from '../../../helpers';\nimport { editIdentity as _editIdentity, labelFetch as _labelFetch, selectCurrentLanguage, selectEditIdentitySuccess, selectLabelData, selectSendIdentitySuccess, selectUserInfo, sendIdentity as _sendIdentity } from '../../../modules';\nimport * as countries from 'i18n-iso-countries';\nvar IdentityComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(IdentityComponent, _React$Component);\n  var _super = _createSuper(IdentityComponent);\n  function IdentityComponent() {\n    var _this;\n    _classCallCheck(this, IdentityComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      city: '',\n      countryOfBirth: '',\n      dateOfBirth: '',\n      firstName: '',\n      lastName: '',\n      postcode: '',\n      residentialAddress: '',\n      cityFocused: false,\n      dateOfBirthFocused: false,\n      firstNameFocused: false,\n      lastNameFocused: false,\n      postcodeFocused: false,\n      residentialAddressFocused: false\n    };\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n    _this.scrollToElement = function (displayedElem) {\n      var element = document.getElementsByClassName('pg-confirm__content-identity__forms__row')[displayedElem];\n      element && element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n        inline: 'nearest'\n      });\n    };\n    _this.handleFieldFocus = function (field) {\n      return function () {\n        switch (field) {\n          case 'city':\n            _this.setState({\n              cityFocused: !_this.state.cityFocused\n            });\n            _this.scrollToElement(6);\n            break;\n          case 'dateOfBirth':\n            _this.setState({\n              dateOfBirthFocused: !_this.state.dateOfBirthFocused\n            });\n            _this.scrollToElement(2);\n            break;\n          case 'firstName':\n            _this.setState({\n              firstNameFocused: !_this.state.firstNameFocused\n            });\n            _this.scrollToElement(0);\n            break;\n          case 'lastName':\n            _this.setState({\n              lastNameFocused: !_this.state.lastNameFocused\n            });\n            _this.scrollToElement(1);\n            break;\n          case 'postcode':\n            _this.setState({\n              postcodeFocused: !_this.state.postcodeFocused\n            });\n            _this.scrollToElement(7);\n            break;\n          case 'residentialAddress':\n            _this.setState({\n              residentialAddressFocused: !_this.state.residentialAddressFocused\n            });\n            _this.scrollToElement(4);\n            break;\n          default:\n            break;\n        }\n      };\n    };\n    _this.handleChange = function (value, key) {\n      // @ts-ignore\n      _this.setState(_defineProperty({}, key, value));\n    };\n    _this.handleConfirmEnterPress = function (event) {\n      if (event.key === 'Enter' && !_this.handleCheckButtonDisabled()) {\n        event.preventDefault();\n        _this.sendData(event);\n      }\n    };\n    _this.handleChangeDate = function (e) {\n      _this.setState({\n        dateOfBirth: formatDate(e.target.value)\n      });\n    };\n    _this.selectCountry = function (option) {\n      _this.setState({\n        countryOfBirth: countries.getAlpha2Code(option.value, _this.props.lang)\n      });\n    };\n    _this.handleValidateInput = function (field, value) {\n      switch (field) {\n        case 'firstName':\n          var firstNameRegex = new RegExp(\"^[a-zA-Z]{1,100}$\");\n          return value.match(firstNameRegex) ? true : false;\n        case 'lastName':\n          var lastNameRegex = new RegExp(\"^[a-zA-Z]{1,100}$\");\n          return value.match(lastNameRegex) ? true : false;\n        case 'residentialAddress':\n          var residentialAddressRegex = new RegExp(\"^[a-zA-Z0-9-,.;/\\\\s]+$\");\n          return value.match(residentialAddressRegex) ? true : false;\n        case 'city':\n          var cityRegex = new RegExp(\"^[a-zA-Z]+$\");\n          return value.match(cityRegex) ? true : false;\n        case 'postcode':\n          var postcodeRegex = new RegExp(\"^[a-zA-Z0-9]{1,12}$\");\n          return value.match(postcodeRegex) ? true : false;\n        case 'dateOfBirth':\n          if (value.length === 10) {\n            return moment(value, 'DD/MM/YYYY').unix() < Date.now() / 1000;\n          }\n          return false;\n        default:\n          return true;\n      }\n    };\n    _this.handleCheckButtonDisabled = function () {\n      var _this$state = _this.state,\n        city = _this$state.city,\n        dateOfBirth = _this$state.dateOfBirth,\n        firstName = _this$state.firstName,\n        lastName = _this$state.lastName,\n        postcode = _this$state.postcode,\n        residentialAddress = _this$state.residentialAddress,\n        countryOfBirth = _this$state.countryOfBirth;\n      var firstNameValid = _this.handleValidateInput('firstName', firstName);\n      var lastNameValid = _this.handleValidateInput('lastName', lastName);\n      var residentialAddressValid = _this.handleValidateInput('residentialAddress', residentialAddress);\n      var cityValid = _this.handleValidateInput('city', city);\n      var postcodeValid = _this.handleValidateInput('postcode', postcode);\n      var dateOfBirthValid = _this.handleValidateInput('dateOfBirth', dateOfBirth);\n      return !firstNameValid || !lastNameValid || !residentialAddressValid || !countryOfBirth || !cityValid || !postcodeValid || !dateOfBirthValid;\n    };\n    _this.sendData = function (event) {\n      event.preventDefault();\n      var _this$props = _this.props,\n        labels = _this$props.labels,\n        user = _this$props.user;\n      var dob = !isDateInFuture(_this.state.dateOfBirth) ? _this.state.dateOfBirth : '';\n      var profileInfo = {\n        first_name: _this.state.firstName,\n        last_name: _this.state.lastName,\n        dob: dob,\n        address: _this.state.residentialAddress,\n        postcode: _this.state.postcode,\n        city: _this.state.city,\n        country: _this.state.countryOfBirth,\n        confirm: true\n      };\n      var isIdentity = labels.length && labels.find(function (w) {\n        return w.key === 'profile' && w.value === 'verified' && w.scope === 'private';\n      });\n      var verifiedProfiles = user.profiles.length ? user.profiles.filter(function (i) {\n        return i.state === 'verified';\n      }) : [];\n      var lastVerifiedProfile = verifiedProfiles.length && verifiedProfiles[verifiedProfiles.length - 1];\n      if (!isIdentity && lastVerifiedProfile && lastVerifiedProfile.address) {\n        _this.props.editIdentity(profileInfo);\n      } else {\n        _this.props.sendIdentity(profileInfo);\n      }\n    };\n    return _this;\n  }\n  _createClass(IdentityComponent, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      var _this$props2 = this.props,\n        history = _this$props2.history,\n        editSuccess = _this$props2.editSuccess,\n        sendSuccess = _this$props2.sendSuccess;\n      if (!prev.editSuccess && editSuccess || !prev.sendSuccess && sendSuccess) {\n        this.props.labelFetch();\n        history.push('/profile');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        editSuccess = _this$props3.editSuccess,\n        sendSuccess = _this$props3.sendSuccess,\n        lang = _this$props3.lang;\n      var _this$state2 = this.state,\n        city = _this$state2.city,\n        dateOfBirth = _this$state2.dateOfBirth,\n        firstName = _this$state2.firstName,\n        lastName = _this$state2.lastName,\n        postcode = _this$state2.postcode,\n        residentialAddress = _this$state2.residentialAddress,\n        cityFocused = _this$state2.cityFocused,\n        dateOfBirthFocused = _this$state2.dateOfBirthFocused,\n        firstNameFocused = _this$state2.firstNameFocused,\n        lastNameFocused = _this$state2.lastNameFocused,\n        postcodeFocused = _this$state2.postcodeFocused,\n        residentialAddressFocused = _this$state2.residentialAddressFocused;\n      var firstNameGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': firstNameFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': firstName && !this.handleValidateInput('firstName', firstName)\n      });\n      var lastNameGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': lastNameFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': lastName && !this.handleValidateInput('lastName', lastName)\n      });\n      var dateOfBirthGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': dateOfBirthFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': dateOfBirth && !this.handleValidateInput('dateOfBirth', dateOfBirth)\n      });\n      var residentialAddressGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': residentialAddressFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': residentialAddress && !this.handleValidateInput('residentialAddress', residentialAddress)\n      });\n      var cityGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': cityFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': city && !this.handleValidateInput('city', city)\n      });\n      var postcodeGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n        'pg-confirm__content-identity__forms__row__content--focused': postcodeFocused,\n        'pg-confirm__content-identity__forms__row__content--wrong': postcode && !this.handleValidateInput('postcode', postcode)\n      });\n\n      /* tslint:disable */\n      languages.map(function (l) {\n        return countries.registerLocale(require(\"i18n-iso-countries/langs/\".concat(l, \".json\")));\n      });\n\n      /* tslint:enable */\n\n      var dataCountries = Object.values(countries.getNames(lang)).map(function (item) {\n        return {\n          label: item,\n          value: item\n        };\n      });\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: \"pg-confirm__content-identity\",\n        autoComplete: \"on\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: firstNameGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"string\",\n        name: \"fname\",\n        autoComplete: \"given-name\",\n        inputValue: firstName,\n        placeholder: this.translate('page.body.kyc.identity.firstName'),\n        handleChangeInput: function handleChangeInput(e) {\n          return _this2.handleChange(e, 'firstName');\n        },\n        autoFocus: true,\n        label: this.translate('page.body.kyc.identity.firstName'),\n        defaultLabel: '',\n        handleFocusInput: this.handleFieldFocus('firstName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: lastNameGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"string\",\n        name: \"lname\",\n        autoComplete: \"family-name\",\n        inputValue: lastName,\n        handleChangeInput: function handleChangeInput(e) {\n          return _this2.handleChange(e, 'lastName');\n        },\n        placeholder: this.translate('page.body.kyc.identity.lastName'),\n        label: this.translate('page.body.kyc.identity.lastName'),\n        defaultLabel: '',\n        handleFocusInput: this.handleFieldFocus('lastName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: dateOfBirthGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"custom-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, dateOfBirth ? /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 44\n        }\n      }, this.translate('page.body.kyc.identity.dateOfBirth')) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-group input-group-lg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(MaskInput, {\n        className: \"pg-confirm__content-identity__forms__row__content-number\",\n        maskString: \"00/00/0000\",\n        mask: \"00/00/0000\",\n        onChange: this.handleChangeDate,\n        onFocus: this.handleFieldFocus('dateOfBirth'),\n        onBlur: this.handleFieldFocus('dateOfBirth'),\n        value: dateOfBirth,\n        placeholder: this.translate('page.body.kyc.identity.dateOfBirth.placeholder'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(SearchDropdown, {\n        className: \"pg-confirm__content-identity__forms__row__content-number-dropdown\",\n        options: dataCountries,\n        onSelect: this.selectCountry,\n        placeholder: this.translate('page.body.kyc.identity.CoR'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: residentialAddressGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"string\",\n        name: \"ship-address\",\n        autoComplete: \"shipping street-address\",\n        inputValue: residentialAddress,\n        placeholder: this.translate('page.body.kyc.identity.residentialAddress'),\n        label: this.translate('page.body.kyc.identity.residentialAddress'),\n        defaultLabel: '',\n        handleChangeInput: function handleChangeInput(e) {\n          return _this2.handleChange(e, 'residentialAddress');\n        },\n        handleFocusInput: this.handleFieldFocus('residentialAddress'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-identity__forms__row input-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: cityGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        type: \"string\",\n        name: \"ship-city\",\n        autoComplete: \"shipping locality\",\n        inputValue: city,\n        handleChangeInput: function handleChangeInput(e) {\n          return _this2.handleChange(e, 'city');\n        },\n        placeholder: this.translate('page.body.kyc.identity.city'),\n        label: this.translate('page.body.kyc.identity.city'),\n        defaultLabel: '',\n        handleFocusInput: this.handleFieldFocus('city'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"fieldset\", {\n        className: postcodeGroupClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CustomInput, {\n        label: this.translate('page.body.kyc.identity.postcode'),\n        defaultLabel: this.translate('page.body.kyc.identity.postcode'),\n        type: \"string\",\n        name: \"ship-zip\",\n        autoComplete: \"shipping postal-code\",\n        inputValue: postcode,\n        handleChangeInput: function handleChangeInput(e) {\n          return _this2.handleChange(e, 'postcode');\n        },\n        onKeyPress: this.handleConfirmEnterPress,\n        placeholder: this.translate('page.body.kyc.identity.postcode'),\n        handleFocusInput: this.handleFieldFocus('postcode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      })))), sendSuccess && !editSuccess && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-confirm__success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 47\n        }\n      }, this.translate(sendSuccess)), editSuccess && !sendSuccess && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"pg-confirm__success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 47\n        }\n      }, this.translate(editSuccess)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content-deep\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.sendData,\n        disabled: this.handleCheckButtonDisabled(),\n        size: \"lg\",\n        variant: \"primary\",\n        type: \"submit\",\n        block: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, this.translate('page.body.kyc.next'))));\n    }\n  }]);\n  return IdentityComponent;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    editSuccess: selectEditIdentitySuccess(state),\n    sendSuccess: selectSendIdentitySuccess(state),\n    lang: selectCurrentLanguage(state),\n    labels: selectLabelData(state),\n    user: selectUserInfo(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    editIdentity: function editIdentity(payload) {\n      return dispatch(_editIdentity(payload));\n    },\n    sendIdentity: function sendIdentity(payload) {\n      return dispatch(_sendIdentity(payload));\n    },\n    labelFetch: function labelFetch() {\n      return dispatch(_labelFetch());\n    }\n  };\n};\nexport var Identity = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(IdentityComponent); // tslint:disable-line","map":{"version":3,"names":["cr","moment","React","Button","injectIntl","MaskInput","connect","withRouter","compose","languages","CustomInput","SearchDropdown","formatDate","isDateInFuture","editIdentity","labelFetch","selectCurrentLanguage","selectEditIdentitySuccess","selectLabelData","selectSendIdentitySuccess","selectUserInfo","sendIdentity","countries","IdentityComponent","state","city","countryOfBirth","dateOfBirth","firstName","lastName","postcode","residentialAddress","cityFocused","dateOfBirthFocused","firstNameFocused","lastNameFocused","postcodeFocused","residentialAddressFocused","translate","e","props","intl","formatMessage","id","scrollToElement","displayedElem","element","document","getElementsByClassName","scrollIntoView","behavior","block","inline","handleFieldFocus","field","setState","handleChange","value","key","handleConfirmEnterPress","event","handleCheckButtonDisabled","preventDefault","sendData","handleChangeDate","target","selectCountry","option","getAlpha2Code","lang","handleValidateInput","firstNameRegex","RegExp","match","lastNameRegex","residentialAddressRegex","cityRegex","postcodeRegex","length","unix","Date","now","firstNameValid","lastNameValid","residentialAddressValid","cityValid","postcodeValid","dateOfBirthValid","labels","user","dob","profileInfo","first_name","last_name","address","country","confirm","isIdentity","find","w","scope","verifiedProfiles","profiles","filter","i","lastVerifiedProfile","prev","history","editSuccess","sendSuccess","push","firstNameGroupClass","lastNameGroupClass","dateOfBirthGroupClass","residentialAddressGroupClass","cityGroupClass","postcodeGroupClass","map","l","registerLocale","require","dataCountries","Object","values","getNames","item","label","Component","mapStateToProps","mapDispatchToProps","dispatch","payload","Identity"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/Confirm/Identity/index.tsx"],"sourcesContent":["import cr from 'classnames';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport MaskInput from 'react-maskinput';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../../';\nimport { languages } from '../../../api/config';\nimport { CustomInput, SearchDropdown } from '../../../components';\nimport { formatDate, isDateInFuture } from '../../../helpers';\nimport {\n    editIdentity,\n    Label,\n    labelFetch,\n    RootState,\n    selectCurrentLanguage,\n    selectEditIdentitySuccess,\n    selectLabelData,\n    selectSendIdentitySuccess,\n    selectUserInfo,\n    sendIdentity,\n    User,\n} from '../../../modules';\nimport { IdentityData } from '../../../modules/user/kyc/identity/types';\n\nimport * as countries from 'i18n-iso-countries';\n\ninterface ReduxProps {\n    editSuccess?: string;\n    sendSuccess?: string;\n    lang: string;\n    labels: Label[];\n    user: User;\n}\n\ninterface DispatchProps {\n    editIdentity: typeof editIdentity;\n    sendIdentity: typeof sendIdentity;\n    labelFetch: typeof labelFetch;\n}\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\n\ninterface IdentityState {\n    city: string;\n    countryOfBirth: string;\n    dateOfBirth: string;\n    firstName: string;\n    lastName: string;\n    postcode: string;\n    residentialAddress: string;\n    cityFocused: boolean;\n    dateOfBirthFocused: boolean;\n    firstNameFocused: boolean;\n    lastNameFocused: boolean;\n    postcodeFocused: boolean;\n    residentialAddressFocused: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nclass IdentityComponent extends React.Component<Props, IdentityState> {\n    public state = {\n        city: '',\n        countryOfBirth: '',\n        dateOfBirth: '',\n        firstName: '',\n        lastName: '',\n        postcode: '',\n        residentialAddress: '',\n        cityFocused: false,\n        dateOfBirthFocused: false,\n        firstNameFocused: false,\n        lastNameFocused: false,\n        postcodeFocused: false,\n        residentialAddressFocused: false,\n    };\n\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({id: e});\n    };\n\n    public componentDidUpdate(prev: Props) {\n        const {\n            history,\n            editSuccess,\n            sendSuccess,\n        } = this.props;\n\n        if ((!prev.editSuccess && editSuccess) || (!prev.sendSuccess && sendSuccess)) {\n            this.props.labelFetch();\n            history.push('/profile');\n        }\n    }\n\n    public render() {\n        const {\n            editSuccess,\n            sendSuccess,\n            lang,\n        } = this.props;\n        const {\n            city,\n            dateOfBirth,\n            firstName,\n            lastName,\n            postcode,\n            residentialAddress,\n            cityFocused,\n            dateOfBirthFocused,\n            firstNameFocused,\n            lastNameFocused,\n            postcodeFocused,\n            residentialAddressFocused,\n        } = this.state;\n\n        const firstNameGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': firstNameFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': firstName && !this.handleValidateInput('firstName', firstName),\n        });\n\n        const lastNameGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': lastNameFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': lastName && !this.handleValidateInput('lastName', lastName),\n        });\n\n        const dateOfBirthGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': dateOfBirthFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': dateOfBirth && !this.handleValidateInput('dateOfBirth', dateOfBirth),\n        });\n\n        const residentialAddressGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': residentialAddressFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': residentialAddress && !this.handleValidateInput('residentialAddress', residentialAddress),\n        });\n\n        const cityGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': cityFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': city && !this.handleValidateInput('city', city),\n        });\n\n        const postcodeGroupClass = cr('pg-confirm__content-identity__forms__row__content', {\n            'pg-confirm__content-identity__forms__row__content--focused': postcodeFocused,\n            'pg-confirm__content-identity__forms__row__content--wrong': postcode && !this.handleValidateInput('postcode', postcode),\n        });\n\n        /* tslint:disable */\n        languages.map((l: string) => countries.registerLocale(require(`i18n-iso-countries/langs/${l}.json`)));\n\n        /* tslint:enable */\n\n        const dataCountries = Object.values(countries.getNames(lang)).map(item => {\n            return { label: item, value: item };\n        });\n\n        return (\n          <form className=\"pg-confirm__content-identity\" autoComplete=\"on\">\n            <div className=\"pg-confirm__content-identity__forms\">\n                <div className=\"pg-confirm__content-identity__forms__row input-group\">\n                    <fieldset className={firstNameGroupClass}>\n                        <CustomInput\n                            type=\"string\"\n                            name=\"fname\"\n                            autoComplete=\"given-name\"\n                            inputValue={firstName}\n                            placeholder={this.translate('page.body.kyc.identity.firstName')}\n                            handleChangeInput={e => this.handleChange(e, 'firstName')}\n                            autoFocus={true}\n                            label={this.translate('page.body.kyc.identity.firstName')}\n                            defaultLabel={''}\n                            handleFocusInput={this.handleFieldFocus('firstName')}\n                        />\n                    </fieldset>\n                    <fieldset className={lastNameGroupClass}>\n                        <CustomInput\n                            type=\"string\"\n                            name=\"lname\"\n                            autoComplete=\"family-name\"\n                            inputValue={lastName}\n                            handleChangeInput={e => this.handleChange(e, 'lastName')}\n                            placeholder={this.translate('page.body.kyc.identity.lastName')}\n                            label={this.translate('page.body.kyc.identity.lastName')}\n                            defaultLabel={''}\n                            handleFocusInput={this.handleFieldFocus('lastName')}\n                        />\n                    </fieldset>\n                </div>\n                <div className=\"pg-confirm__content-identity__forms__row\">\n                    <fieldset className={dateOfBirthGroupClass}>\n                        <div className=\"custom-input\">\n                            {dateOfBirth ? <label>{this.translate('page.body.kyc.identity.dateOfBirth')}</label> : null}\n                            <div className=\"input-group input-group-lg\">\n                                <MaskInput\n                                    className=\"pg-confirm__content-identity__forms__row__content-number\"\n                                    maskString=\"00/00/0000\"\n                                    mask=\"00/00/0000\"\n                                    onChange={this.handleChangeDate}\n                                    onFocus={this.handleFieldFocus('dateOfBirth')}\n                                    onBlur={this.handleFieldFocus('dateOfBirth')}\n                                    value={dateOfBirth}\n                                    placeholder={this.translate('page.body.kyc.identity.dateOfBirth.placeholder')}\n                                />\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n                <div className=\"pg-confirm__content-identity__forms__row\">\n                    <div className=\"pg-confirm__content-identity__forms__row__content\">\n                        <SearchDropdown\n                            className=\"pg-confirm__content-identity__forms__row__content-number-dropdown\"\n                            options={dataCountries}\n                            onSelect={this.selectCountry}\n                            placeholder={this.translate('page.body.kyc.identity.CoR')}\n                        />\n                    </div>\n                </div>\n                <div className=\"pg-confirm__content-identity__forms__row\">\n                    <fieldset className={residentialAddressGroupClass}>\n                        <CustomInput\n                            type=\"string\"\n                            name=\"ship-address\"\n                            autoComplete=\"shipping street-address\"\n                            inputValue={residentialAddress}\n                            placeholder={this.translate('page.body.kyc.identity.residentialAddress')}\n                            label={this.translate('page.body.kyc.identity.residentialAddress')}\n                            defaultLabel={''}\n                            handleChangeInput={e => this.handleChange(e, 'residentialAddress')}\n                            handleFocusInput={this.handleFieldFocus('residentialAddress')}\n                        />\n                    </fieldset>\n                </div>\n                <div className=\"pg-confirm__content-identity__forms__row input-group\">\n                    <fieldset className={cityGroupClass}>\n                        <CustomInput\n                            type=\"string\"\n                            name=\"ship-city\"\n                            autoComplete=\"shipping locality\"\n                            inputValue={city}\n                            handleChangeInput={e => this.handleChange(e, 'city')}\n                            placeholder={this.translate('page.body.kyc.identity.city')}\n                            label={this.translate('page.body.kyc.identity.city')}\n                            defaultLabel={''}\n                            handleFocusInput={this.handleFieldFocus('city')}\n                        />\n                    </fieldset>\n                    <fieldset className={postcodeGroupClass}>\n                        <CustomInput\n                            label={this.translate('page.body.kyc.identity.postcode')}\n                            defaultLabel={this.translate('page.body.kyc.identity.postcode')}\n                            type=\"string\"\n                            name=\"ship-zip\"\n                            autoComplete=\"shipping postal-code\"\n                            inputValue={postcode}\n                            handleChangeInput={e => this.handleChange(e, 'postcode')}\n                            onKeyPress={this.handleConfirmEnterPress}\n                            placeholder={this.translate('page.body.kyc.identity.postcode')}\n                            handleFocusInput={this.handleFieldFocus('postcode')}\n                        />\n                    </fieldset>\n                </div>\n              </div>\n              {sendSuccess && !editSuccess && <p className=\"pg-confirm__success\">{this.translate(sendSuccess)}</p>}\n              {editSuccess && !sendSuccess && <p className=\"pg-confirm__success\">{this.translate(editSuccess)}</p>}\n              <div className=\"pg-confirm__content-deep\">\n                    <Button\n                        onClick={this.sendData}\n                        disabled={this.handleCheckButtonDisabled()}\n                        size=\"lg\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        block={true}\n                    >\n                        {this.translate('page.body.kyc.next')}\n                    </Button>\n              </div>\n          </form>\n        );\n    }\n\n    private scrollToElement = (displayedElem: number) => {\n        const element: HTMLElement = document.getElementsByClassName('pg-confirm__content-identity__forms__row')[displayedElem] as HTMLElement;\n        element && element.scrollIntoView({behavior: 'smooth', block: 'center', inline: 'nearest'});\n    };\n\n    private handleFieldFocus = (field: string) => {\n        return () => {\n            switch (field) {\n                case 'city':\n                    this.setState({\n                        cityFocused: !this.state.cityFocused,\n                    });\n                    this.scrollToElement(6);\n                    break;\n                case 'dateOfBirth':\n                    this.setState({\n                        dateOfBirthFocused: !this.state.dateOfBirthFocused,\n                    });\n                    this.scrollToElement(2);\n                    break;\n                case 'firstName':\n                    this.setState({\n                        firstNameFocused: !this.state.firstNameFocused,\n                    });\n                    this.scrollToElement(0);\n                    break;\n                case 'lastName':\n                    this.setState({\n                        lastNameFocused: !this.state.lastNameFocused,\n                    });\n                    this.scrollToElement(1);\n                    break;\n                case 'postcode':\n                    this.setState({\n                        postcodeFocused: !this.state.postcodeFocused,\n                    });\n                    this.scrollToElement(7);\n                    break;\n                case 'residentialAddress':\n                    this.setState({\n                        residentialAddressFocused: !this.state.residentialAddressFocused,\n                    });\n                    this.scrollToElement(4);\n                    break;\n                default:\n                    break;\n            }\n        };\n    };\n\n    private handleChange = (value: string, key: string) => {\n        // @ts-ignore\n        this.setState({\n            [key]: value,\n        });\n    };\n\n    private handleConfirmEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter' && !this.handleCheckButtonDisabled()) {\n            event.preventDefault();\n            this.sendData(event);\n        }\n    };\n\n    private handleChangeDate = (e: OnChangeEvent) => {\n        this.setState({\n            dateOfBirth: formatDate(e.target.value),\n        });\n    };\n\n    private selectCountry = option => {\n        this.setState({\n            countryOfBirth: countries.getAlpha2Code(option.value, this.props.lang),\n        });\n    };\n\n    private handleValidateInput = (field: string, value: string): boolean => {\n        switch (field) {\n            case 'firstName':\n                const firstNameRegex = new RegExp(`^[a-zA-Z]{1,100}$`);\n\n                return value.match(firstNameRegex) ? true : false;\n            case 'lastName':\n                const lastNameRegex = new RegExp(`^[a-zA-Z]{1,100}$`);\n\n                return value.match(lastNameRegex) ? true : false;\n            case 'residentialAddress':\n                const residentialAddressRegex = new RegExp(`^[a-zA-Z0-9-,.;/\\\\s]+$`);\n\n                return value.match(residentialAddressRegex) ? true : false;\n            case 'city':\n                const cityRegex = new RegExp(`^[a-zA-Z]+$`);\n\n                return value.match(cityRegex) ? true : false;\n            case 'postcode':\n                const postcodeRegex = new RegExp(`^[a-zA-Z0-9]{1,12}$`);\n\n                return value.match(postcodeRegex) ? true : false;\n            case 'dateOfBirth':\n                if (value.length === 10) {\n                    return moment(value, 'DD/MM/YYYY').unix() < (Date.now() / 1000);\n                }\n\n                return false;\n            default:\n                return true;\n        }\n    };\n\n    private handleCheckButtonDisabled = () => {\n        const {\n            city,\n            dateOfBirth,\n            firstName,\n            lastName,\n            postcode,\n            residentialAddress,\n            countryOfBirth,\n        } = this.state;\n\n        const firstNameValid = this.handleValidateInput('firstName', firstName);\n        const lastNameValid = this.handleValidateInput('lastName', lastName);\n        const residentialAddressValid = this.handleValidateInput('residentialAddress', residentialAddress);\n        const cityValid = this.handleValidateInput('city', city);\n        const postcodeValid = this.handleValidateInput('postcode', postcode);\n        const dateOfBirthValid = this.handleValidateInput('dateOfBirth', dateOfBirth);\n\n        return (\n            !firstNameValid\n            || !lastNameValid\n            || !residentialAddressValid\n            || !countryOfBirth\n            || !cityValid\n            || !postcodeValid\n            || !dateOfBirthValid\n        );\n    };\n\n    private sendData = event => {\n        event.preventDefault();\n        const { labels, user } = this.props;\n        const dob = !isDateInFuture(this.state.dateOfBirth) ? this.state.dateOfBirth : '';\n        const profileInfo: IdentityData = {\n            first_name: this.state.firstName,\n            last_name: this.state.lastName,\n            dob,\n            address: this.state.residentialAddress,\n            postcode: this.state.postcode,\n            city: this.state.city,\n            country: this.state.countryOfBirth,\n            confirm: true,\n        };\n        const isIdentity = labels.length && labels.find(w => w.key === 'profile' && w.value === 'verified' && w.scope === 'private');\n        const verifiedProfiles = user.profiles.length ? user.profiles.filter(i => i.state === 'verified') : [];\n        const lastVerifiedProfile = verifiedProfiles.length && verifiedProfiles[verifiedProfiles.length - 1];\n\n        if (!isIdentity && lastVerifiedProfile && lastVerifiedProfile.address) {\n            this.props.editIdentity(profileInfo);\n        } else {\n            this.props.sendIdentity(profileInfo);\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    editSuccess: selectEditIdentitySuccess(state),\n    sendSuccess: selectSendIdentitySuccess(state),\n    lang: selectCurrentLanguage(state),\n    labels: selectLabelData(state),\n    user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        editIdentity: payload => dispatch(editIdentity(payload)),\n        sendIdentity: payload => dispatch(sendIdentity(payload)),\n        labelFetch: () => dispatch(labelFetch()),\n    });\n\nexport const Identity = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(IdentityComponent) as any; // tslint:disable-line\n"],"mappings":";;;;;;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAChC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,OAAO,QAAoC,aAAa;AAEjE,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,WAAW,EAAEC,cAAc,QAAQ,qBAAqB;AACjE,SAASC,UAAU,EAAEC,cAAc,QAAQ,kBAAkB;AAC7D,SACIC,YAAY,IAAZA,aAAY,EAEZC,UAAU,IAAVA,WAAU,EAEVC,qBAAqB,EACrBC,yBAAyB,EACzBC,eAAe,EACfC,yBAAyB,EACzBC,cAAc,EACdC,YAAY,IAAZA,aAAY,QAET,kBAAkB;AAGzB,OAAO,KAAKC,SAAS,MAAM,oBAAoB;AAAC,IAwC1CC,iBAAiB;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MACZC,KAAK,GAAG;MACXC,IAAI,EAAE,EAAE;MACRC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,kBAAkB,EAAE,EAAE;MACtBC,WAAW,EAAE,KAAK;MAClBC,kBAAkB,EAAE,KAAK;MACzBC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,KAAK;MACtBC,eAAe,EAAE,KAAK;MACtBC,yBAAyB,EAAE;IAC/B,CAAC;IAAA,MAEMC,SAAS,GAAG,UAACC,CAAS,EAAK;MAC9B,OAAO,MAAKC,KAAK,CAACC,IAAI,CAACC,aAAa,CAAC;QAACC,EAAE,EAAEJ;MAAC,CAAC,CAAC;IACjD,CAAC;IAAA,MAuMOK,eAAe,GAAG,UAACC,aAAqB,EAAK;MACjD,IAAMC,OAAoB,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,0CAA0C,CAAC,CAACH,aAAa,CAAgB;MACtIC,OAAO,IAAIA,OAAO,CAACG,cAAc,CAAC;QAACC,QAAQ,EAAE,QAAQ;QAAEC,KAAK,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAS,CAAC,CAAC;IAC/F,CAAC;IAAA,MAEOC,gBAAgB,GAAG,UAACC,KAAa,EAAK;MAC1C,OAAO,YAAM;QACT,QAAQA,KAAK;UACT,KAAK,MAAM;YACP,MAAKC,QAAQ,CAAC;cACVvB,WAAW,EAAE,CAAC,MAAKR,KAAK,CAACQ;YAC7B,CAAC,CAAC;YACF,MAAKY,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ,KAAK,aAAa;YACd,MAAKW,QAAQ,CAAC;cACVtB,kBAAkB,EAAE,CAAC,MAAKT,KAAK,CAACS;YACpC,CAAC,CAAC;YACF,MAAKW,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ,KAAK,WAAW;YACZ,MAAKW,QAAQ,CAAC;cACVrB,gBAAgB,EAAE,CAAC,MAAKV,KAAK,CAACU;YAClC,CAAC,CAAC;YACF,MAAKU,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ,KAAK,UAAU;YACX,MAAKW,QAAQ,CAAC;cACVpB,eAAe,EAAE,CAAC,MAAKX,KAAK,CAACW;YACjC,CAAC,CAAC;YACF,MAAKS,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ,KAAK,UAAU;YACX,MAAKW,QAAQ,CAAC;cACVnB,eAAe,EAAE,CAAC,MAAKZ,KAAK,CAACY;YACjC,CAAC,CAAC;YACF,MAAKQ,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ,KAAK,oBAAoB;YACrB,MAAKW,QAAQ,CAAC;cACVlB,yBAAyB,EAAE,CAAC,MAAKb,KAAK,CAACa;YAC3C,CAAC,CAAC;YACF,MAAKO,eAAe,CAAC,CAAC,CAAC;YACvB;UACJ;YACI;QAAM;MAElB,CAAC;IACL,CAAC;IAAA,MAEOY,YAAY,GAAG,UAACC,KAAa,EAAEC,GAAW,EAAK;MACnD;MACA,MAAKH,QAAQ,qBACRG,GAAG,EAAGD,KAAK,EACd;IACN,CAAC;IAAA,MAEOE,uBAAuB,GAAG,UAACC,KAA4C,EAAK;MAChF,IAAIA,KAAK,CAACF,GAAG,KAAK,OAAO,IAAI,CAAC,MAAKG,yBAAyB,EAAE,EAAE;QAC5DD,KAAK,CAACE,cAAc,EAAE;QACtB,MAAKC,QAAQ,CAACH,KAAK,CAAC;MACxB;IACJ,CAAC;IAAA,MAEOI,gBAAgB,GAAG,UAACzB,CAAgB,EAAK;MAC7C,MAAKgB,QAAQ,CAAC;QACV5B,WAAW,EAAEf,UAAU,CAAC2B,CAAC,CAAC0B,MAAM,CAACR,KAAK;MAC1C,CAAC,CAAC;IACN,CAAC;IAAA,MAEOS,aAAa,GAAG,UAAAC,MAAM,EAAI;MAC9B,MAAKZ,QAAQ,CAAC;QACV7B,cAAc,EAAEJ,SAAS,CAAC8C,aAAa,CAACD,MAAM,CAACV,KAAK,EAAE,MAAKjB,KAAK,CAAC6B,IAAI;MACzE,CAAC,CAAC;IACN,CAAC;IAAA,MAEOC,mBAAmB,GAAG,UAAChB,KAAa,EAAEG,KAAa,EAAc;MACrE,QAAQH,KAAK;QACT,KAAK,WAAW;UACZ,IAAMiB,cAAc,GAAG,IAAIC,MAAM,qBAAqB;UAEtD,OAAOf,KAAK,CAACgB,KAAK,CAACF,cAAc,CAAC,GAAG,IAAI,GAAG,KAAK;QACrD,KAAK,UAAU;UACX,IAAMG,aAAa,GAAG,IAAIF,MAAM,qBAAqB;UAErD,OAAOf,KAAK,CAACgB,KAAK,CAACC,aAAa,CAAC,GAAG,IAAI,GAAG,KAAK;QACpD,KAAK,oBAAoB;UACrB,IAAMC,uBAAuB,GAAG,IAAIH,MAAM,0BAA0B;UAEpE,OAAOf,KAAK,CAACgB,KAAK,CAACE,uBAAuB,CAAC,GAAG,IAAI,GAAG,KAAK;QAC9D,KAAK,MAAM;UACP,IAAMC,SAAS,GAAG,IAAIJ,MAAM,eAAe;UAE3C,OAAOf,KAAK,CAACgB,KAAK,CAACG,SAAS,CAAC,GAAG,IAAI,GAAG,KAAK;QAChD,KAAK,UAAU;UACX,IAAMC,aAAa,GAAG,IAAIL,MAAM,uBAAuB;UAEvD,OAAOf,KAAK,CAACgB,KAAK,CAACI,aAAa,CAAC,GAAG,IAAI,GAAG,KAAK;QACpD,KAAK,aAAa;UACd,IAAIpB,KAAK,CAACqB,MAAM,KAAK,EAAE,EAAE;YACrB,OAAO7E,MAAM,CAACwD,KAAK,EAAE,YAAY,CAAC,CAACsB,IAAI,EAAE,GAAIC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAK;UACnE;UAEA,OAAO,KAAK;QAChB;UACI,OAAO,IAAI;MAAC;IAExB,CAAC;IAAA,MAEOpB,yBAAyB,GAAG,YAAM;MACtC,kBAQI,MAAKrC,KAAK;QAPVC,IAAI,eAAJA,IAAI;QACJE,WAAW,eAAXA,WAAW;QACXC,SAAS,eAATA,SAAS;QACTC,QAAQ,eAARA,QAAQ;QACRC,QAAQ,eAARA,QAAQ;QACRC,kBAAkB,eAAlBA,kBAAkB;QAClBL,cAAc,eAAdA,cAAc;MAGlB,IAAMwD,cAAc,GAAG,MAAKZ,mBAAmB,CAAC,WAAW,EAAE1C,SAAS,CAAC;MACvE,IAAMuD,aAAa,GAAG,MAAKb,mBAAmB,CAAC,UAAU,EAAEzC,QAAQ,CAAC;MACpE,IAAMuD,uBAAuB,GAAG,MAAKd,mBAAmB,CAAC,oBAAoB,EAAEvC,kBAAkB,CAAC;MAClG,IAAMsD,SAAS,GAAG,MAAKf,mBAAmB,CAAC,MAAM,EAAE7C,IAAI,CAAC;MACxD,IAAM6D,aAAa,GAAG,MAAKhB,mBAAmB,CAAC,UAAU,EAAExC,QAAQ,CAAC;MACpE,IAAMyD,gBAAgB,GAAG,MAAKjB,mBAAmB,CAAC,aAAa,EAAE3C,WAAW,CAAC;MAE7E,OACI,CAACuD,cAAc,IACZ,CAACC,aAAa,IACd,CAACC,uBAAuB,IACxB,CAAC1D,cAAc,IACf,CAAC2D,SAAS,IACV,CAACC,aAAa,IACd,CAACC,gBAAgB;IAE5B,CAAC;IAAA,MAEOxB,QAAQ,GAAG,UAAAH,KAAK,EAAI;MACxBA,KAAK,CAACE,cAAc,EAAE;MACtB,kBAAyB,MAAKtB,KAAK;QAA3BgD,MAAM,eAANA,MAAM;QAAEC,IAAI,eAAJA,IAAI;MACpB,IAAMC,GAAG,GAAG,CAAC7E,cAAc,CAAC,MAAKW,KAAK,CAACG,WAAW,CAAC,GAAG,MAAKH,KAAK,CAACG,WAAW,GAAG,EAAE;MACjF,IAAMgE,WAAyB,GAAG;QAC9BC,UAAU,EAAE,MAAKpE,KAAK,CAACI,SAAS;QAChCiE,SAAS,EAAE,MAAKrE,KAAK,CAACK,QAAQ;QAC9B6D,GAAG,EAAHA,GAAG;QACHI,OAAO,EAAE,MAAKtE,KAAK,CAACO,kBAAkB;QACtCD,QAAQ,EAAE,MAAKN,KAAK,CAACM,QAAQ;QAC7BL,IAAI,EAAE,MAAKD,KAAK,CAACC,IAAI;QACrBsE,OAAO,EAAE,MAAKvE,KAAK,CAACE,cAAc;QAClCsE,OAAO,EAAE;MACb,CAAC;MACD,IAAMC,UAAU,GAAGT,MAAM,CAACV,MAAM,IAAIU,MAAM,CAACU,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACzC,GAAG,KAAK,SAAS,IAAIyC,CAAC,CAAC1C,KAAK,KAAK,UAAU,IAAI0C,CAAC,CAACC,KAAK,KAAK,SAAS;MAAA,EAAC;MAC5H,IAAMC,gBAAgB,GAAGZ,IAAI,CAACa,QAAQ,CAACxB,MAAM,GAAGW,IAAI,CAACa,QAAQ,CAACC,MAAM,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAAChF,KAAK,KAAK,UAAU;MAAA,EAAC,GAAG,EAAE;MACtG,IAAMiF,mBAAmB,GAAGJ,gBAAgB,CAACvB,MAAM,IAAIuB,gBAAgB,CAACA,gBAAgB,CAACvB,MAAM,GAAG,CAAC,CAAC;MAEpG,IAAI,CAACmB,UAAU,IAAIQ,mBAAmB,IAAIA,mBAAmB,CAACX,OAAO,EAAE;QACnE,MAAKtD,KAAK,CAAC1B,YAAY,CAAC6E,WAAW,CAAC;MACxC,CAAC,MAAM;QACH,MAAKnD,KAAK,CAACnB,YAAY,CAACsE,WAAW,CAAC;MACxC;IACJ,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAtWD,4BAA0Be,IAAW,EAAE;MACnC,mBAII,IAAI,CAAClE,KAAK;QAHVmE,OAAO,gBAAPA,OAAO;QACPC,WAAW,gBAAXA,WAAW;QACXC,WAAW,gBAAXA,WAAW;MAGf,IAAK,CAACH,IAAI,CAACE,WAAW,IAAIA,WAAW,IAAM,CAACF,IAAI,CAACG,WAAW,IAAIA,WAAY,EAAE;QAC1E,IAAI,CAACrE,KAAK,CAACzB,UAAU,EAAE;QACvB4F,OAAO,CAACG,IAAI,CAAC,UAAU,CAAC;MAC5B;IACJ;EAAC;IAAA;IAAA,OAED,kBAAgB;MAAA;MACZ,mBAII,IAAI,CAACtE,KAAK;QAHVoE,WAAW,gBAAXA,WAAW;QACXC,WAAW,gBAAXA,WAAW;QACXxC,IAAI,gBAAJA,IAAI;MAER,mBAaI,IAAI,CAAC7C,KAAK;QAZVC,IAAI,gBAAJA,IAAI;QACJE,WAAW,gBAAXA,WAAW;QACXC,SAAS,gBAATA,SAAS;QACTC,QAAQ,gBAARA,QAAQ;QACRC,QAAQ,gBAARA,QAAQ;QACRC,kBAAkB,gBAAlBA,kBAAkB;QAClBC,WAAW,gBAAXA,WAAW;QACXC,kBAAkB,gBAAlBA,kBAAkB;QAClBC,gBAAgB,gBAAhBA,gBAAgB;QAChBC,eAAe,gBAAfA,eAAe;QACfC,eAAe,gBAAfA,eAAe;QACfC,yBAAyB,gBAAzBA,yBAAyB;MAG7B,IAAM0E,mBAAmB,GAAG/G,EAAE,CAAC,mDAAmD,EAAE;QAChF,4DAA4D,EAAEkC,gBAAgB;QAC9E,0DAA0D,EAAEN,SAAS,IAAI,CAAC,IAAI,CAAC0C,mBAAmB,CAAC,WAAW,EAAE1C,SAAS;MAC7H,CAAC,CAAC;MAEF,IAAMoF,kBAAkB,GAAGhH,EAAE,CAAC,mDAAmD,EAAE;QAC/E,4DAA4D,EAAEmC,eAAe;QAC7E,0DAA0D,EAAEN,QAAQ,IAAI,CAAC,IAAI,CAACyC,mBAAmB,CAAC,UAAU,EAAEzC,QAAQ;MAC1H,CAAC,CAAC;MAEF,IAAMoF,qBAAqB,GAAGjH,EAAE,CAAC,mDAAmD,EAAE;QAClF,4DAA4D,EAAEiC,kBAAkB;QAChF,0DAA0D,EAAEN,WAAW,IAAI,CAAC,IAAI,CAAC2C,mBAAmB,CAAC,aAAa,EAAE3C,WAAW;MACnI,CAAC,CAAC;MAEF,IAAMuF,4BAA4B,GAAGlH,EAAE,CAAC,mDAAmD,EAAE;QACzF,4DAA4D,EAAEqC,yBAAyB;QACvF,0DAA0D,EAAEN,kBAAkB,IAAI,CAAC,IAAI,CAACuC,mBAAmB,CAAC,oBAAoB,EAAEvC,kBAAkB;MACxJ,CAAC,CAAC;MAEF,IAAMoF,cAAc,GAAGnH,EAAE,CAAC,mDAAmD,EAAE;QAC3E,4DAA4D,EAAEgC,WAAW;QACzE,0DAA0D,EAAEP,IAAI,IAAI,CAAC,IAAI,CAAC6C,mBAAmB,CAAC,MAAM,EAAE7C,IAAI;MAC9G,CAAC,CAAC;MAEF,IAAM2F,kBAAkB,GAAGpH,EAAE,CAAC,mDAAmD,EAAE;QAC/E,4DAA4D,EAAEoC,eAAe;QAC7E,0DAA0D,EAAEN,QAAQ,IAAI,CAAC,IAAI,CAACwC,mBAAmB,CAAC,UAAU,EAAExC,QAAQ;MAC1H,CAAC,CAAC;;MAEF;MACArB,SAAS,CAAC4G,GAAG,CAAC,UAACC,CAAS;QAAA,OAAKhG,SAAS,CAACiG,cAAc,CAACC,OAAO,oCAA6BF,CAAC,WAAQ,CAAC;MAAA,EAAC;;MAErG;;MAEA,IAAMG,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACrG,SAAS,CAACsG,QAAQ,CAACvD,IAAI,CAAC,CAAC,CAACgD,GAAG,CAAC,UAAAQ,IAAI,EAAI;QACtE,OAAO;UAAEC,KAAK,EAAED,IAAI;UAAEpE,KAAK,EAAEoE;QAAK,CAAC;MACvC,CAAC,CAAC;MAEF,oBACE;QAAM,SAAS,EAAC,8BAA8B;QAAC,YAAY,EAAC,IAAI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC9D;QAAK,SAAS,EAAC,qCAAqC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChD;QAAK,SAAS,EAAC,sDAAsD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjE;QAAU,SAAS,EAAEd,mBAAoB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrC,oBAAC,WAAW;QACR,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,OAAO;QACZ,YAAY,EAAC,YAAY;QACzB,UAAU,EAAEnF,SAAU;QACtB,WAAW,EAAE,IAAI,CAACU,SAAS,CAAC,kCAAkC,CAAE;QAChE,iBAAiB,EAAE,2BAAAC,CAAC;UAAA,OAAI,MAAI,CAACiB,YAAY,CAACjB,CAAC,EAAE,WAAW,CAAC;QAAA,CAAC;QAC1D,SAAS,EAAE,IAAK;QAChB,KAAK,EAAE,IAAI,CAACD,SAAS,CAAC,kCAAkC,CAAE;QAC1D,YAAY,EAAE,EAAG;QACjB,gBAAgB,EAAE,IAAI,CAACe,gBAAgB,CAAC,WAAW,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACvD,CACK,eACX;QAAU,SAAS,EAAE2D,kBAAmB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACpC,oBAAC,WAAW;QACR,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,OAAO;QACZ,YAAY,EAAC,aAAa;QAC1B,UAAU,EAAEnF,QAAS;QACrB,iBAAiB,EAAE,2BAAAU,CAAC;UAAA,OAAI,MAAI,CAACiB,YAAY,CAACjB,CAAC,EAAE,UAAU,CAAC;QAAA,CAAC;QACzD,WAAW,EAAE,IAAI,CAACD,SAAS,CAAC,iCAAiC,CAAE;QAC/D,KAAK,EAAE,IAAI,CAACA,SAAS,CAAC,iCAAiC,CAAE;QACzD,YAAY,EAAE,EAAG;QACjB,gBAAgB,EAAE,IAAI,CAACe,gBAAgB,CAAC,UAAU,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACtD,CACK,CACT,eACN;QAAK,SAAS,EAAC,0CAA0C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrD;QAAU,SAAS,EAAE4D,qBAAsB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvC;QAAK,SAAS,EAAC,cAAc;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACxBtF,WAAW,gBAAG;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAQ,IAAI,CAACW,SAAS,CAAC,oCAAoC,CAAC,CAAS,GAAG,IAAI,eAC3F;QAAK,SAAS,EAAC,4BAA4B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvC,oBAAC,SAAS;QACN,SAAS,EAAC,0DAA0D;QACpE,UAAU,EAAC,YAAY;QACvB,IAAI,EAAC,YAAY;QACjB,QAAQ,EAAE,IAAI,CAAC0B,gBAAiB;QAChC,OAAO,EAAE,IAAI,CAACX,gBAAgB,CAAC,aAAa,CAAE;QAC9C,MAAM,EAAE,IAAI,CAACA,gBAAgB,CAAC,aAAa,CAAE;QAC7C,KAAK,EAAE1B,WAAY;QACnB,WAAW,EAAE,IAAI,CAACW,SAAS,CAAC,gDAAgD,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChF,CACA,CACJ,CACC,CACT,eACN;QAAK,SAAS,EAAC,0CAA0C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrD;QAAK,SAAS,EAAC,mDAAmD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC9D,oBAAC,cAAc;QACX,SAAS,EAAC,mEAAmE;QAC7E,OAAO,EAAEmF,aAAc;QACvB,QAAQ,EAAE,IAAI,CAACvD,aAAc;QAC7B,WAAW,EAAE,IAAI,CAAC5B,SAAS,CAAC,4BAA4B,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAC5D,CACA,CACJ,eACN;QAAK,SAAS,EAAC,0CAA0C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACrD;QAAU,SAAS,EAAE4E,4BAA6B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAC9C,oBAAC,WAAW;QACR,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,cAAc;QACnB,YAAY,EAAC,yBAAyB;QACtC,UAAU,EAAEnF,kBAAmB;QAC/B,WAAW,EAAE,IAAI,CAACO,SAAS,CAAC,2CAA2C,CAAE;QACzE,KAAK,EAAE,IAAI,CAACA,SAAS,CAAC,2CAA2C,CAAE;QACnE,YAAY,EAAE,EAAG;QACjB,iBAAiB,EAAE,2BAAAC,CAAC;UAAA,OAAI,MAAI,CAACiB,YAAY,CAACjB,CAAC,EAAE,oBAAoB,CAAC;QAAA,CAAC;QACnE,gBAAgB,EAAE,IAAI,CAACc,gBAAgB,CAAC,oBAAoB,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAChE,CACK,CACT,eACN;QAAK,SAAS,EAAC,sDAAsD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACjE;QAAU,SAAS,EAAE8D,cAAe;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAChC,oBAAC,WAAW;QACR,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,WAAW;QAChB,YAAY,EAAC,mBAAmB;QAChC,UAAU,EAAE1F,IAAK;QACjB,iBAAiB,EAAE,2BAAAc,CAAC;UAAA,OAAI,MAAI,CAACiB,YAAY,CAACjB,CAAC,EAAE,MAAM,CAAC;QAAA,CAAC;QACrD,WAAW,EAAE,IAAI,CAACD,SAAS,CAAC,6BAA6B,CAAE;QAC3D,KAAK,EAAE,IAAI,CAACA,SAAS,CAAC,6BAA6B,CAAE;QACrD,YAAY,EAAE,EAAG;QACjB,gBAAgB,EAAE,IAAI,CAACe,gBAAgB,CAAC,MAAM,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAClD,CACK,eACX;QAAU,SAAS,EAAE+D,kBAAmB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACpC,oBAAC,WAAW;QACR,KAAK,EAAE,IAAI,CAAC9E,SAAS,CAAC,iCAAiC,CAAE;QACzD,YAAY,EAAE,IAAI,CAACA,SAAS,CAAC,iCAAiC,CAAE;QAChE,IAAI,EAAC,QAAQ;QACb,IAAI,EAAC,UAAU;QACf,YAAY,EAAC,sBAAsB;QACnC,UAAU,EAAER,QAAS;QACrB,iBAAiB,EAAE,2BAAAS,CAAC;UAAA,OAAI,MAAI,CAACiB,YAAY,CAACjB,CAAC,EAAE,UAAU,CAAC;QAAA,CAAC;QACzD,UAAU,EAAE,IAAI,CAACoB,uBAAwB;QACzC,WAAW,EAAE,IAAI,CAACrB,SAAS,CAAC,iCAAiC,CAAE;QAC/D,gBAAgB,EAAE,IAAI,CAACe,gBAAgB,CAAC,UAAU,CAAE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EACtD,CACK,CACT,CACF,EACLwD,WAAW,IAAI,CAACD,WAAW,iBAAI;QAAG,SAAS,EAAC,qBAAqB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAE,IAAI,CAACtE,SAAS,CAACuE,WAAW,CAAC,CAAK,EACnGD,WAAW,IAAI,CAACC,WAAW,iBAAI;QAAG,SAAS,EAAC,qBAAqB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAE,IAAI,CAACvE,SAAS,CAACsE,WAAW,CAAC,CAAK,eACpG;QAAK,SAAS,EAAC,0BAA0B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACnC,oBAAC,MAAM;QACH,OAAO,EAAE,IAAI,CAAC7C,QAAS;QACvB,QAAQ,EAAE,IAAI,CAACF,yBAAyB,EAAG;QAC3C,IAAI,EAAC,IAAI;QACT,OAAO,EAAC,SAAS;QACjB,IAAI,EAAC,QAAQ;QACb,KAAK,EAAE,IAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEX,IAAI,CAACvB,SAAS,CAAC,oBAAoB,CAAC,CAChC,CACT,CACH;IAEb;EAAC;EAAA;AAAA,EAxN2BpC,KAAK,CAAC6H,SAAS;AA8X/C,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIxG,KAAgB;EAAA,OAAkB;IACvDoF,WAAW,EAAE3F,yBAAyB,CAACO,KAAK,CAAC;IAC7CqF,WAAW,EAAE1F,yBAAyB,CAACK,KAAK,CAAC;IAC7C6C,IAAI,EAAErD,qBAAqB,CAACQ,KAAK,CAAC;IAClCgE,MAAM,EAAEtE,eAAe,CAACM,KAAK,CAAC;IAC9BiE,IAAI,EAAErE,cAAc,CAACI,KAAK;EAC9B,CAAC;AAAA,CAAC;AAEF,IAAMyG,kBAAiE,GACnE,SADEA,kBAAiE,CACnEC,QAAQ;EAAA,OAAK;IACTpH,YAAY,EAAE,sBAAAqH,OAAO;MAAA,OAAID,QAAQ,CAACpH,aAAY,CAACqH,OAAO,CAAC,CAAC;IAAA;IACxD9G,YAAY,EAAE,sBAAA8G,OAAO;MAAA,OAAID,QAAQ,CAAC7G,aAAY,CAAC8G,OAAO,CAAC,CAAC;IAAA;IACxDpH,UAAU,EAAE;MAAA,OAAMmH,QAAQ,CAACnH,WAAU,EAAE,CAAC;IAAA;EAC5C,CAAC;AAAA,CAAC;AAEN,OAAO,IAAMqH,QAAQ,GAAG5H,OAAO,CAC3BJ,UAAU,EACVG,UAAU,EACVD,OAAO,CAAC0H,eAAe,EAAEC,kBAAkB,CAAC,CAC/C,CAAC1G,iBAAiB,CAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}