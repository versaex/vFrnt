{"ast":null,"code":"import { filterProps, createError } from '../utils';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_ref, getPluralRules, value) {\n  var locale = _ref.locale,\n    onError = _ref.onError;\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  if (!Intl.PluralRules) {\n    onError(createError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\"));\n  }\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(createError('Error formatting plural.', e));\n  }\n  return 'other';\n}","map":{"version":3,"names":["filterProps","createError","PLURAL_FORMAT_OPTIONS","formatPlural","getPluralRules","value","locale","onError","options","Intl","PluralRules","filteredOptions","select","e"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/react-intl/lib/formatters/plural.js"],"sourcesContent":["import { filterProps, createError } from '../utils';\nconst PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural({ locale, onError }, getPluralRules, value, options = {}) {\n    if (!Intl.PluralRules) {\n        onError(createError(`Intl.PluralRules is not available in this environment.\nTry polyfilling it using \"@formatjs/intl-pluralrules\"\n`));\n    }\n    const filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(createError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,UAAU;AACnD,IAAMC,qBAAqB,GAAG,CAC1B,eAAe,EACf,MAAM,CACT;AACD,OAAO,SAASC,YAAY,OAAsBC,cAAc,EAAEC,KAAK,EAAgB;EAAA,IAAxDC,MAAM,QAANA,MAAM;IAAEC,OAAO,QAAPA,OAAO;EAAA,IAA2BC,OAAO,uEAAG,CAAC,CAAC;EACjF,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE;IACnBH,OAAO,CAACN,WAAW,qHAEzB,CAAC;EACC;EACA,IAAMU,eAAe,GAAGX,WAAW,CAACQ,OAAO,EAAEN,qBAAqB,CAAC;EACnE,IAAI;IACA,OAAOE,cAAc,CAACE,MAAM,EAAEK,eAAe,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC;EAChE,CAAC,CACD,OAAOQ,CAAC,EAAE;IACNN,OAAO,CAACN,WAAW,CAAC,0BAA0B,EAAEY,CAAC,CAAC,CAAC;EACvD;EACA,OAAO,OAAO;AAClB"},"metadata":{},"sourceType":"module"}