{"ast":null,"code":"import { invariant } from '../utils';\nimport { Type } from '../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\nexport function SingularRelativeTimeUnit(unit) {\n  invariant(Type(unit) === 'String', 'unit must be a string');\n  if (unit === 'seconds') return 'second';\n  if (unit === 'minutes') return 'minute';\n  if (unit === 'hours') return 'hour';\n  if (unit === 'days') return 'day';\n  if (unit === 'weeks') return 'week';\n  if (unit === 'months') return 'month';\n  if (unit === 'quarters') return 'quarter';\n  if (unit === 'years') return 'year';\n  if (unit !== 'second' && unit !== 'minute' && unit !== 'hour' && unit !== 'day' && unit !== 'week' && unit !== 'month' && unit !== 'quarter' && unit !== 'year') {\n    throw new RangeError('invalid unit');\n  }\n  return unit;\n}","map":{"version":3,"names":["invariant","Type","SingularRelativeTimeUnit","unit","RangeError"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/node_modules/@formatjs/ecma402-abstract/lib/RelativeTimeFormat/SingularRelativeTimeUnit.js"],"sourcesContent":["import { invariant } from '../utils';\nimport { Type } from '../262';\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\nexport function SingularRelativeTimeUnit(unit) {\n    invariant(Type(unit) === 'String', 'unit must be a string');\n    if (unit === 'seconds')\n        return 'second';\n    if (unit === 'minutes')\n        return 'minute';\n    if (unit === 'hours')\n        return 'hour';\n    if (unit === 'days')\n        return 'day';\n    if (unit === 'weeks')\n        return 'week';\n    if (unit === 'months')\n        return 'month';\n    if (unit === 'quarters')\n        return 'quarter';\n    if (unit === 'years')\n        return 'year';\n    if (unit !== 'second' &&\n        unit !== 'minute' &&\n        unit !== 'hour' &&\n        unit !== 'day' &&\n        unit !== 'week' &&\n        unit !== 'month' &&\n        unit !== 'quarter' &&\n        unit !== 'year') {\n        throw new RangeError('invalid unit');\n    }\n    return unit;\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,UAAU;AACpC,SAASC,IAAI,QAAQ,QAAQ;AAC7B;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwB,CAACC,IAAI,EAAE;EAC3CH,SAAS,CAACC,IAAI,CAACE,IAAI,CAAC,KAAK,QAAQ,EAAE,uBAAuB,CAAC;EAC3D,IAAIA,IAAI,KAAK,SAAS,EAClB,OAAO,QAAQ;EACnB,IAAIA,IAAI,KAAK,SAAS,EAClB,OAAO,QAAQ;EACnB,IAAIA,IAAI,KAAK,OAAO,EAChB,OAAO,MAAM;EACjB,IAAIA,IAAI,KAAK,MAAM,EACf,OAAO,KAAK;EAChB,IAAIA,IAAI,KAAK,OAAO,EAChB,OAAO,MAAM;EACjB,IAAIA,IAAI,KAAK,QAAQ,EACjB,OAAO,OAAO;EAClB,IAAIA,IAAI,KAAK,UAAU,EACnB,OAAO,SAAS;EACpB,IAAIA,IAAI,KAAK,OAAO,EAChB,OAAO,MAAM;EACjB,IAAIA,IAAI,KAAK,QAAQ,IACjBA,IAAI,KAAK,QAAQ,IACjBA,IAAI,KAAK,MAAM,IACfA,IAAI,KAAK,KAAK,IACdA,IAAI,KAAK,MAAM,IACfA,IAAI,KAAK,OAAO,IAChBA,IAAI,KAAK,SAAS,IAClBA,IAAI,KAAK,MAAM,EAAE;IACjB,MAAM,IAAIC,UAAU,CAAC,cAAc,CAAC;EACxC;EACA,OAAOD,IAAI;AACf"},"metadata":{},"sourceType":"module"}