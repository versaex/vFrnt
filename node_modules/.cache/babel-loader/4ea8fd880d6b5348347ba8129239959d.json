{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\screens\\\\ConfirmScreen\\\\index.tsx\";\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { kycSteps } from '../../api';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { Address, Documents, Identity, Phone } from '../../containers';\nimport { getVerificationStep, setDocumentTitle } from '../../helpers';\nimport { labelFetch as _labelFetch, selectLabelData, selectSidebarState, toggleSidebar as _toggleSidebar } from '../../modules';\nvar ConfirmComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConfirmComponent, _React$Component);\n  var _super = _createSuper(ConfirmComponent);\n  function ConfirmComponent() {\n    var _this;\n    _classCallCheck(this, ConfirmComponent);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.renderVerificationStep = function (step) {\n      switch (step) {\n        case 'phone':\n          return /*#__PURE__*/React.createElement(Phone, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }\n          });\n        case 'profile':\n          return /*#__PURE__*/React.createElement(Identity, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }\n          });\n        case 'document':\n          return /*#__PURE__*/React.createElement(Documents, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }\n          });\n        case 'address':\n          return /*#__PURE__*/React.createElement(Address, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }\n          });\n        default:\n          return 'Something went wrong';\n      }\n    };\n    _this.handleGetVerificationStep = function () {\n      var labels = _this.props.labels;\n      return getVerificationStep(labels);\n    };\n    _this.handleCheckUserLabels = function (labels) {\n      var pendingLabelExists = Boolean(labels.find(function (label) {\n        return kycSteps().includes(label.key) && ['pending', 'drafted', 'submitted'].includes(label.value) && label.scope === 'private';\n      }));\n      var passedSteps = kycSteps().filter(function (step) {\n        return labels.find(function (label) {\n          return step === label.key && label.value === 'verified' && label.scope === 'private';\n        });\n      });\n      if (pendingLabelExists || kycSteps().length === passedSteps.length) {\n        _this.props.history.push('/profile');\n      }\n    };\n    return _this;\n  }\n  _createClass(ConfirmComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        labels = _this$props.labels,\n        isSidebarOpen = _this$props.isSidebarOpen;\n      setDocumentTitle('Confirm');\n      this.props.labelFetch();\n      if (labels.length) {\n        this.handleCheckUserLabels(labels);\n      }\n      isSidebarOpen && this.props.toggleSidebar(false);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var labels = this.props.labels;\n      if (labels.length && JSON.stringify(labels) !== JSON.stringify(prevProps.labels)) {\n        this.handleCheckUserLabels(labels);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var history = this.props.history;\n      var step = this.handleGetVerificationStep();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-container pg-confirm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LogoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"pg-confirm__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"page.confirm.title.\".concat(step),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CrossIcon, {\n        className: \"pg-confirm__title__icon\",\n        onClick: function onClick(e) {\n          return history.push('/profile');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-confirm__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, this.renderVerificationStep(step)));\n    }\n  }]);\n  return ConfirmComponent;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSidebarOpen: selectSidebarState(state),\n    labels: selectLabelData(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    labelFetch: function labelFetch() {\n      return dispatch(_labelFetch());\n    },\n    toggleSidebar: function toggleSidebar(payload) {\n      return dispatch(_toggleSidebar(payload));\n    }\n  };\n};\nexport var ConfirmScreen = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(ConfirmComponent); // tslint:disable-line","map":{"version":3,"names":["React","FormattedMessage","injectIntl","connect","withRouter","compose","kycSteps","CrossIcon","LogoIcon","Address","Documents","Identity","Phone","getVerificationStep","setDocumentTitle","labelFetch","selectLabelData","selectSidebarState","toggleSidebar","ConfirmComponent","renderVerificationStep","step","handleGetVerificationStep","labels","props","handleCheckUserLabels","pendingLabelExists","Boolean","find","label","includes","key","value","scope","passedSteps","filter","length","history","push","isSidebarOpen","prevProps","JSON","stringify","e","Component","mapStateToProps","state","mapDispatchToProps","dispatch","payload","ConfirmScreen"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/screens/ConfirmScreen/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { kycSteps } from '../../api';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { Address, Documents, Identity, Phone } from '../../containers';\nimport { getVerificationStep, setDocumentTitle } from '../../helpers';\nimport {\n    Label,\n    labelFetch,\n    RootState,\n    selectLabelData,\n    selectSidebarState,\n    toggleSidebar,\n} from '../../modules';\n\ninterface ReduxProps {\n    isSidebarOpen: boolean;\n    labels: Label[];\n}\n\ninterface DispatchProps {\n    labelFetch: typeof labelFetch;\n    toggleSidebar: typeof toggleSidebar;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nclass ConfirmComponent extends React.Component<Props> {\n    public componentDidMount() {\n        const { labels, isSidebarOpen } = this.props;\n        setDocumentTitle('Confirm');\n        this.props.labelFetch();\n\n        if (labels.length) {\n            this.handleCheckUserLabels(labels);\n        }\n\n        isSidebarOpen && this.props.toggleSidebar(false);\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        const { labels } = this.props;\n\n        if (labels.length && JSON.stringify(labels) !== JSON.stringify(prevProps.labels)) {\n            this.handleCheckUserLabels(labels);\n        }\n    }\n\n    public renderVerificationStep = (step: string) => {\n        switch (step) {\n            case 'phone':    return <Phone />;\n            case 'profile':  return <Identity />;\n            case 'document': return <Documents />;\n            case 'address':  return <Address />;\n            default: return 'Something went wrong';\n        }\n    };\n\n    public render() {\n        const { history } = this.props;\n        const step = this.handleGetVerificationStep();\n\n        return (\n            <div className=\"pg-container pg-confirm\">\n                <div className=\"pg-confirm__logo\">\n                    <LogoIcon />\n                </div>\n                <h3 className=\"pg-confirm__title\">\n                    <FormattedMessage id={`page.confirm.title.${step}`} />\n                    <CrossIcon\n                        className=\"pg-confirm__title__icon\"\n                        onClick={e => history.push('/profile')}\n                    />\n                </h3>\n                <div className=\"pg-confirm__content\">\n                    {this.renderVerificationStep(step)}\n                </div>\n            </div>\n        );\n    }\n\n    private handleGetVerificationStep = (): string => {\n        const { labels } = this.props;\n\n        return getVerificationStep(labels);\n    };\n\n    private handleCheckUserLabels = (labels: Label[]) => {\n        const pendingLabelExists = Boolean(labels.find(label => kycSteps().includes(label.key) && ['pending', 'drafted', 'submitted'].includes(label.value) && label.scope === 'private'));\n        const passedSteps = kycSteps().filter((step: string) => labels.find(label => step === label.key && label.value === 'verified' && label.scope === 'private'));\n\n        if (pendingLabelExists || (kycSteps().length === passedSteps.length)) {\n            this.props.history.push('/profile');\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    isSidebarOpen: selectSidebarState(state),\n    labels: selectLabelData(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    labelFetch: () => dispatch(labelFetch()),\n    toggleSidebar: (payload) => dispatch(toggleSidebar(payload)),\n});\n\nexport const ConfirmScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmComponent) as any; // tslint:disable-line\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}