{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"component\", \"loading\", \"isLogged\"],\n  _excluded2 = [\"component\", \"loading\", \"isLogged\"];\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\routes\\\\Layout\\\\index.tsx\";\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { minutesUntilAutoLogout, sessionCheckInterval, showLanding } from '../../api';\nimport { ExpiredSessionModal } from '../../components';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport { ChangeForgottenPasswordMobileScreen, ConfirmMobileScreen, EmailVerificationMobileScreen, ForgotPasswordMobileScreen,\n//LandingScreenMobile,\nOrdersMobileScreen, ProfileAccountActivityMobileScreen, ProfileApiKeysMobileScreen, ProfileAuthMobileScreen, ProfileChangePasswordMobileScreen, ProfileLanguageMobileScreen, ProfileMobileScreen, ProfileThemeMobileScreen, ProfileVerificationMobileScreen, SelectedWalletMobileScreen, SignInMobileScreen, SignUpMobileScreen, TradingScreenMobile, WalletDeposit, WalletsMobileScreen, WalletWithdraw } from '../../mobile/screens';\nimport { configsFetch, logoutFetch, selectConfigsLoading, selectConfigsSuccess, selectCurrentColorTheme, selectCurrentMarket, selectMobileDeviceState, selectPlatformAccessStatus, selectUserFetching, selectUserInfo, selectUserLoggedIn, toggleChartRebuild as _toggleChartRebuild, userFetch as _userFetch, walletsReset as _walletsReset } from '../../modules';\nimport { customizationFetch, selectCustomizationData } from '../../modules/public/customization';\nimport { rangerConnectFetch, selectRanger } from '../../modules/public/ranger';\nimport { ChangeForgottenPasswordScreen, ConfirmScreen, DocumentationScreen, EmailVerificationScreen, ForgotPasswordScreen, HistoryScreen, LandingScreen, MagicLink, MaintenanceScreen, OrdersTabScreen, ProfileScreen, ProfileTwoFactorAuthScreen, RestrictedScreen, SignInScreen, SignUpScreen, TradingScreen, VerificationScreen, WalletsScreen } from '../../screens';\nvar renderLoader = function renderLoader() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-loader-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }));\n};\nvar STORE_KEY = 'lastAction';\n\n//tslint:disable-next-line no-any\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var CustomComponent = _ref.component,\n    loading = _ref.loading,\n    isLogged = _ref.isLogged,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  if (loading) {\n    return renderLoader();\n  }\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return /*#__PURE__*/React.createElement(CustomComponent, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 46\n      }\n    }));\n  };\n  if (isLogged) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      render: renderCustomerComponent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Redirect, {\n    to: '/signin',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }));\n};\n\n//tslint:disable-next-line no-any\nvar PublicRoute = function PublicRoute(_ref2) {\n  var CustomComponent = _ref2.component,\n    loading = _ref2.loading,\n    isLogged = _ref2.isLogged,\n    rest = _objectWithoutProperties(_ref2, _excluded2);\n  if (loading) {\n    return renderLoader();\n  }\n  if (isLogged) {\n    return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: '/wallets',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }));\n  }\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return /*#__PURE__*/React.createElement(CustomComponent, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 46\n      }\n    }));\n  };\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: renderCustomerComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }\n  }));\n};\nvar LayoutComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(LayoutComponent, _React$Component);\n  var _super = _createSuper(LayoutComponent);\n  function LayoutComponent(props) {\n    var _this2;\n    _classCallCheck(this, LayoutComponent);\n    _this2 = _super.call(this, props);\n    _this2.timer = void 0;\n    _this2.walletsFetchInterval = void 0;\n    _this2.translate = function (key) {\n      return _this2.props.intl.formatMessage({\n        id: key\n      });\n    };\n    _this2.getLastAction = function () {\n      if (localStorage.getItem(STORE_KEY) !== null) {\n        return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n      }\n      return 0;\n    };\n    _this2.setLastAction = function (lastAction) {\n      localStorage.setItem(STORE_KEY, lastAction.toString());\n    };\n    _this2.initListener = function () {\n      _this2.reset();\n      var _iterator = _createForOfIteratorHelper(LayoutComponent.eventsListen),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var type = _step.value;\n          document.body.addEventListener(type, _this2.reset);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n    _this2.reset = function () {\n      _this2.setLastAction(Date.now());\n    };\n    _this2.initInterval = function () {\n      _this2.timer = setInterval(function () {\n        _this2.check();\n      }, parseFloat(sessionCheckInterval()));\n    };\n    _this2.check = function () {\n      var user = _this2.props.user;\n      var now = Date.now();\n      var timeleft = _this2.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n      var diff = timeleft - now;\n      var isTimeout = diff < 0;\n      if (isTimeout && user.email) {\n        if (user.state === 'active') {\n          _this2.handleChangeExpSessionModalState();\n        }\n        _this2.props.logout();\n      }\n    };\n    _this2.handleSubmitExpSessionModal = function () {\n      var history = _this2.props.history;\n      _this2.handleChangeExpSessionModalState();\n      history.push('/signin');\n    };\n    _this2.handleRenderExpiredSessionModal = function () {\n      return /*#__PURE__*/React.createElement(ExpiredSessionModal, {\n        title: _this2.translate('page.modal.expired.title'),\n        buttonLabel: _this2.translate('page.modal.expired.submit'),\n        handleChangeExpSessionModalState: _this2.handleChangeExpSessionModalState,\n        handleSubmitExpSessionModal: _this2.handleSubmitExpSessionModal,\n        __self: _assertThisInitialized(_this2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 9\n        }\n      });\n    };\n    _this2.handleChangeExpSessionModalState = function () {\n      _this2.setState({\n        isShownExpSessionModal: !_this2.state.isShownExpSessionModal\n      });\n    };\n    _this2.handleApplyCustomization = function (customization) {\n      var rootElement = document.documentElement;\n      var parsedSettings = customization && customization.settings ? JSON.parse(customization.settings) : null;\n      if (rootElement && parsedSettings && parsedSettings.theme_colors) {\n        parsedSettings.theme_colors.reduce(function (result, item) {\n          var newItemColor = item.value;\n          if (newItemColor) {\n            rootElement.style.setProperty(item.key, item.value);\n          }\n          return result;\n        }, {});\n        _this2.props.toggleChartRebuild();\n      }\n    };\n    _this2.initListener();\n    _this2.state = {\n      isShownExpSessionModal: false\n    };\n    return _this2;\n  }\n  _createClass(LayoutComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        history = _this$props.history,\n        isLoggedIn = _this$props.isLoggedIn,\n        location = _this$props.location,\n        platformAccessStatus = _this$props.platformAccessStatus,\n        rangerState = _this$props.rangerState;\n      this.props.fetchConfigs();\n      if (!(location.pathname.includes('/magic-link') || location.pathname.includes('/404') || location.pathname.includes('/500'))) {\n        switch (platformAccessStatus) {\n          case 'restricted':\n            history.replace('/404');\n            break;\n          case 'maintenance':\n            history.replace('/500');\n            break;\n          default:\n            var token = localStorage.getItem('csrfToken');\n            if (token) {\n              this.props.userFetch();\n              this.initInterval();\n              this.check();\n            }\n        }\n      }\n      if (!rangerState.connected) {\n        this.props.rangerConnect({\n          withAuth: isLoggedIn\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!(nextProps.location.pathname.includes('/magic-link') || nextProps.location.pathname.includes('/404') || nextProps.location.pathname.includes('/500')) || this.props.platformAccessStatus !== nextProps.platformAccessStatus) {\n        switch (nextProps.platformAccessStatus) {\n          case 'restricted':\n            this.props.history.replace('/404');\n            break;\n          case 'maintenance':\n            this.props.history.replace('/500');\n            break;\n          default:\n            break;\n        }\n      }\n      if (!this.props.user.email && nextProps.user.email) {\n        this.props.userFetch();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n        customization = _this$props2.customization,\n        isLoggedIn = _this$props2.isLoggedIn,\n        rangerState = _this$props2.rangerState,\n        userLoading = _this$props2.userLoading;\n      if (!isLoggedIn && prevProps.isLoggedIn && !userLoading) {\n        this.props.walletsReset();\n        if (!this.props.location.pathname.includes('/trading')) {\n          this.props.history.push('/trading/');\n        }\n      }\n      if (customization && customization !== prevProps.customization) {\n        this.handleApplyCustomization(customization);\n      }\n      if (isLoggedIn !== prevProps.isLoggedIn || !rangerState.connected && prevProps.rangerState.connected) {\n        this.props.rangerConnect({\n          withAuth: isLoggedIn\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _iterator2 = _createForOfIteratorHelper(LayoutComponent.eventsListen),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var type = _step2.value;\n          document.body.removeEventListener(type, this.reset);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      clearInterval(this.timer);\n      clearInterval(this.walletsFetchInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        colorTheme = _this$props3.colorTheme,\n        isLoggedIn = _this$props3.isLoggedIn,\n        isMobileDevice = _this$props3.isMobileDevice,\n        userLoading = _this$props3.userLoading,\n        location = _this$props3.location,\n        configsLoading = _this$props3.configsLoading,\n        platformAccessStatus = _this$props3.platformAccessStatus;\n      var isShownExpSessionModal = this.state.isShownExpSessionModal;\n      var tradingCls = location.pathname.includes('/trading') ? 'trading-layout' : '';\n      toggleColorTheme(colorTheme);\n      if (configsLoading && !platformAccessStatus.length) {\n        return renderLoader();\n      }\n      if (isMobileDevice) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'container-fluid pg-layout pg-layout--mobile',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Switch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/signin\",\n          component: SignInMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/signup\",\n          component: SignUpMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/forgot_password\",\n          component: ForgotPasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/accounts/password_reset\",\n          component: ChangeForgottenPasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/accounts/confirmation\",\n          component: VerificationScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PublicRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/email-verification\",\n          component: EmailVerificationMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/history\",\n          component: SelectedWalletMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/deposit\",\n          component: WalletDeposit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets/:currency/withdraw\",\n          component: WalletWithdraw,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/confirm\",\n          component: ConfirmMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/wallets\",\n          component: WalletsMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/orders\",\n          component: OrdersMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/account-activity\",\n          component: ProfileAccountActivityMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/api-keys\",\n          component: ProfileApiKeysMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/language\",\n          component: ProfileLanguageMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/2fa\",\n          component: ProfileAuthMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/change-password\",\n          component: ProfileChangePasswordMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/verification\",\n          component: ProfileVerificationMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile/theme\",\n          component: ProfileThemeMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(PrivateRoute, {\n          loading: userLoading,\n          isLogged: isLoggedIn,\n          path: \"/profile\",\n          component: ProfileMobileScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/trading/:market?\",\n          component: TradingScreenMobile,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 25\n          }\n        }), showLanding() && /*#__PURE__*/React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: LandingScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 43\n          }\n        }), /*#__PURE__*/React.createElement(Route, {\n          path: \"**\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/trading/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 42\n          }\n        }))), isLoggedIn && /*#__PURE__*/React.createElement(WalletsFetch, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 36\n          }\n        }), isShownExpSessionModal && this.handleRenderExpiredSessionModal());\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid pg-layout \".concat(tradingCls),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/magic-link\",\n        component: MagicLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signin\",\n        component: SignInScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/confirmation\",\n        component: VerificationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signup\",\n        component: SignUpScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/forgot_password\",\n        component: ForgotPasswordScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/password_reset\",\n        component: ChangeForgottenPasswordScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/email-verification\",\n        component: EmailVerificationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/404\",\n        component: RestrictedScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/500\",\n        component: MaintenanceScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/trading/:market?\",\n        component: TradingScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }), showLanding() && /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 39\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/orders\",\n        component: OrdersTabScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/history\",\n        component: HistoryScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/confirm\",\n        component: ConfirmScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/profile\",\n        component: ProfileScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/wallets\",\n        component: WalletsScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/security/2fa\",\n        component: ProfileTwoFactorAuthScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/api\",\n        component: DocumentationScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"**\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/trading/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 38\n        }\n      }))), isLoggedIn && /*#__PURE__*/React.createElement(WalletsFetch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 32\n        }\n      }), isShownExpSessionModal && this.handleRenderExpiredSessionModal());\n    }\n  }]);\n  return LayoutComponent;\n}(React.Component);\nLayoutComponent.eventsListen = ['click', 'keydown', 'scroll', 'resize', 'mousemove', 'TabSelect', 'TabHide'];\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    colorTheme: selectCurrentColorTheme(state),\n    configsLoading: selectConfigsLoading(state),\n    configsSuccess: selectConfigsSuccess(state),\n    currentMarket: selectCurrentMarket(state),\n    customization: selectCustomizationData(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    platformAccessStatus: selectPlatformAccessStatus(state),\n    rangerState: selectRanger(state),\n    user: selectUserInfo(state),\n    userLoading: selectUserFetching(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchConfigs: function fetchConfigs() {\n      return dispatch(configsFetch());\n    },\n    fetchCustomization: function fetchCustomization() {\n      return dispatch(customizationFetch());\n    },\n    logout: function logout() {\n      return dispatch(logoutFetch());\n    },\n    toggleChartRebuild: function toggleChartRebuild() {\n      return dispatch(_toggleChartRebuild());\n    },\n    rangerConnect: function rangerConnect(payload) {\n      return dispatch(rangerConnectFetch(payload));\n    },\n    userFetch: function userFetch() {\n      return dispatch(_userFetch());\n    },\n    walletsReset: function walletsReset() {\n      return dispatch(_walletsReset());\n    }\n  };\n};\nexport var Layout = compose(injectIntl, withRouter, connect(mapStateToProps, mapDispatchToProps))(LayoutComponent);","map":{"version":3,"names":["React","Spinner","injectIntl","connect","Route","Switch","Redirect","withRouter","compose","minutesUntilAutoLogout","sessionCheckInterval","showLanding","ExpiredSessionModal","WalletsFetch","toggleColorTheme","ChangeForgottenPasswordMobileScreen","ConfirmMobileScreen","EmailVerificationMobileScreen","ForgotPasswordMobileScreen","OrdersMobileScreen","ProfileAccountActivityMobileScreen","ProfileApiKeysMobileScreen","ProfileAuthMobileScreen","ProfileChangePasswordMobileScreen","ProfileLanguageMobileScreen","ProfileMobileScreen","ProfileThemeMobileScreen","ProfileVerificationMobileScreen","SelectedWalletMobileScreen","SignInMobileScreen","SignUpMobileScreen","TradingScreenMobile","WalletDeposit","WalletsMobileScreen","WalletWithdraw","configsFetch","logoutFetch","selectConfigsLoading","selectConfigsSuccess","selectCurrentColorTheme","selectCurrentMarket","selectMobileDeviceState","selectPlatformAccessStatus","selectUserFetching","selectUserInfo","selectUserLoggedIn","toggleChartRebuild","userFetch","walletsReset","customizationFetch","selectCustomizationData","rangerConnectFetch","selectRanger","ChangeForgottenPasswordScreen","ConfirmScreen","DocumentationScreen","EmailVerificationScreen","ForgotPasswordScreen","HistoryScreen","LandingScreen","MagicLink","MaintenanceScreen","OrdersTabScreen","ProfileScreen","ProfileTwoFactorAuthScreen","RestrictedScreen","SignInScreen","SignUpScreen","TradingScreen","VerificationScreen","WalletsScreen","renderLoader","STORE_KEY","PrivateRoute","CustomComponent","component","loading","isLogged","rest","renderCustomerComponent","props","PublicRoute","LayoutComponent","timer","walletsFetchInterval","translate","key","intl","formatMessage","id","getLastAction","localStorage","getItem","parseInt","setLastAction","lastAction","setItem","toString","initListener","reset","eventsListen","type","document","body","addEventListener","Date","now","initInterval","setInterval","check","parseFloat","user","timeleft","diff","isTimeout","email","state","handleChangeExpSessionModalState","logout","handleSubmitExpSessionModal","history","push","handleRenderExpiredSessionModal","setState","isShownExpSessionModal","handleApplyCustomization","customization","rootElement","documentElement","parsedSettings","settings","JSON","parse","theme_colors","reduce","result","item","newItemColor","value","style","setProperty","isLoggedIn","location","platformAccessStatus","rangerState","fetchConfigs","pathname","includes","replace","token","connected","rangerConnect","withAuth","nextProps","prevProps","userLoading","removeEventListener","clearInterval","colorTheme","isMobileDevice","configsLoading","tradingCls","length","Component","mapStateToProps","configsSuccess","currentMarket","mapDispatchToProps","dispatch","fetchCustomization","payload","Layout"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/routes/Layout/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { Route, RouterProps, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { minutesUntilAutoLogout, sessionCheckInterval, showLanding } from '../../api';\nimport { ExpiredSessionModal } from '../../components';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport {\n    ChangeForgottenPasswordMobileScreen,\n    ConfirmMobileScreen,\n    EmailVerificationMobileScreen,\n    ForgotPasswordMobileScreen,\n    //LandingScreenMobile,\n    OrdersMobileScreen,\n    ProfileAccountActivityMobileScreen,\n    ProfileApiKeysMobileScreen,\n    ProfileAuthMobileScreen,\n    ProfileChangePasswordMobileScreen,\n    ProfileLanguageMobileScreen,\n    ProfileMobileScreen,\n    ProfileThemeMobileScreen,\n    ProfileVerificationMobileScreen,\n    SelectedWalletMobileScreen,\n    SignInMobileScreen,\n    SignUpMobileScreen,\n    TradingScreenMobile,\n    WalletDeposit,\n    WalletsMobileScreen,\n    WalletWithdraw,\n} from '../../mobile/screens';\nimport {\n    configsFetch,\n    logoutFetch,\n    Market,\n    RootState,\n    selectConfigsLoading,\n    selectConfigsSuccess,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectMobileDeviceState,\n    selectPlatformAccessStatus,\n    selectUserFetching,\n    selectUserInfo,\n    selectUserLoggedIn,\n    toggleChartRebuild,\n    User,\n    userFetch,\n    walletsReset,\n} from '../../modules';\nimport {\n    CustomizationDataInterface,\n    customizationFetch,\n    selectCustomizationData,\n} from '../../modules/public/customization';\nimport {\n    rangerConnectFetch,\n    RangerState,\n    selectRanger,\n} from '../../modules/public/ranger';\nimport {\n    ChangeForgottenPasswordScreen,\n    ConfirmScreen,\n    DocumentationScreen,\n    EmailVerificationScreen,\n    ForgotPasswordScreen,\n    HistoryScreen,\n    LandingScreen,\n    MagicLink,\n    MaintenanceScreen,\n    OrdersTabScreen,\n    ProfileScreen,\n    ProfileTwoFactorAuthScreen,\n    RestrictedScreen,\n    SignInScreen,\n    SignUpScreen,\n    TradingScreen,\n    VerificationScreen,\n    WalletsScreen,\n} from '../../screens';\n\ninterface ReduxProps {\n    colorTheme: string;\n    configsLoading: boolean;\n    configsSuccess: boolean;\n    currentMarket?: Market;\n    customization?: CustomizationDataInterface;\n    isLoggedIn: boolean;\n    isMobileDevice: boolean;\n    platformAccessStatus: string;\n    rangerState: RangerState;\n    user: User;\n    userLoading?: boolean;\n}\n\ninterface DispatchProps {\n    fetchConfigs: typeof configsFetch;\n    fetchCustomization: typeof customizationFetch;\n    logout: typeof logoutFetch;\n    rangerConnect: typeof rangerConnectFetch;\n    userFetch: typeof userFetch;\n    walletsReset: typeof walletsReset;\n}\n\ninterface LocationProps extends RouterProps {\n    location: {\n        pathname: string;\n    };\n}\n\ninterface LayoutState {\n    isShownExpSessionModal: boolean;\n}\n\ninterface OwnProps {\n    toggleChartRebuild: typeof toggleChartRebuild;\n}\n\nexport type LayoutProps = ReduxProps & DispatchProps & LocationProps & IntlProps & OwnProps;\n\nconst renderLoader = () => (\n    <div className=\"pg-loader-container\">\n        <Spinner animation=\"border\" variant=\"primary\" />\n    </div>\n);\n\nconst STORE_KEY = 'lastAction';\n\n//tslint:disable-next-line no-any\nconst PrivateRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n\n    if (isLogged) {\n        return <Route {...rest} render={renderCustomerComponent} />;\n    }\n\n    return (\n        <Route {...rest}>\n            <Redirect to={'/signin'} />\n        </Route>\n    );\n};\n\n//tslint:disable-next-line no-any\nconst PublicRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n\n    if (isLogged) {\n        return <Route {...rest}><Redirect to={'/wallets'} /></Route>;\n    }\n\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n\n    return <Route {...rest} render={renderCustomerComponent} />;\n};\n\nclass LayoutComponent extends React.Component<LayoutProps, LayoutState> {\n    public static eventsListen = [\n        'click',\n        'keydown',\n        'scroll',\n        'resize',\n        'mousemove',\n        'TabSelect',\n        'TabHide',\n    ];\n\n    public timer;\n    public walletsFetchInterval;\n\n    constructor(props: LayoutProps) {\n        super(props);\n        this.initListener();\n\n        this.state = {\n            isShownExpSessionModal: false,\n        };\n    }\n\n    public componentDidMount() {\n        const {\n            history,\n            isLoggedIn,\n            location,\n            platformAccessStatus,\n            rangerState,\n        } = this.props;\n\n        this.props.fetchConfigs();\n        if (\n            !(location.pathname.includes('/magic-link')\n            || location.pathname.includes('/404')\n            || location.pathname.includes('/500'))\n        ) {\n            switch (platformAccessStatus) {\n                case 'restricted':\n                    history.replace('/404');\n                    break;\n                case 'maintenance':\n                    history.replace('/500');\n                    break;\n                default:\n                    const token = localStorage.getItem('csrfToken');\n\n                    if (token) {\n                        this.props.userFetch();\n                        this.initInterval();\n                        this.check();\n                    }\n            }\n        }\n\n        if (!rangerState.connected) {\n            this.props.rangerConnect({ withAuth: isLoggedIn });\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: LayoutProps) {\n        if (\n            !(nextProps.location.pathname.includes('/magic-link')\n            || nextProps.location.pathname.includes('/404')\n            || nextProps.location.pathname.includes('/500'))\n            || this.props.platformAccessStatus !== nextProps.platformAccessStatus\n        ) {\n            switch (nextProps.platformAccessStatus) {\n                case 'restricted':\n                    this.props.history.replace('/404');\n                    break;\n                case 'maintenance':\n                    this.props.history.replace('/500');\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        if (!this.props.user.email && nextProps.user.email) {\n            this.props.userFetch();\n        }\n    }\n\n    public componentDidUpdate(prevProps: LayoutProps) {\n        const {\n            customization,\n            isLoggedIn,\n            rangerState,\n            userLoading,\n        } = this.props;\n\n        if (!isLoggedIn && prevProps.isLoggedIn && !userLoading) {\n            this.props.walletsReset();\n\n            if (!this.props.location.pathname.includes('/trading')) {\n                this.props.history.push('/trading/');\n            }\n        }\n\n        if (customization && customization !== prevProps.customization) {\n            this.handleApplyCustomization(customization);\n        }\n\n        if (\n            (isLoggedIn !== prevProps.isLoggedIn) ||\n            (!rangerState.connected && prevProps.rangerState.connected)\n        ) {\n            this.props.rangerConnect({ withAuth: isLoggedIn });\n        }\n    }\n\n    public componentWillUnmount() {\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.removeEventListener(type, this.reset);\n        }\n\n        clearInterval(this.timer);\n        clearInterval(this.walletsFetchInterval);\n    }\n\n    public translate = (key: string) => this.props.intl.formatMessage({id: key});\n\n    public render() {\n        const {\n            colorTheme,\n            isLoggedIn,\n            isMobileDevice,\n            userLoading,\n            location,\n            configsLoading,\n            platformAccessStatus,\n        } = this.props;\n        const { isShownExpSessionModal } = this.state;\n        const tradingCls = location.pathname.includes('/trading') ? 'trading-layout' : '';\n        toggleColorTheme(colorTheme);\n\n        if (configsLoading && !platformAccessStatus.length) {\n            return renderLoader();\n        }\n\n        if (isMobileDevice) {\n            return (\n                <div className={'container-fluid pg-layout pg-layout--mobile'}>\n                    <Switch>\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordMobileScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                        <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/history\" component={SelectedWalletMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/deposit\" component={WalletDeposit} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/withdraw\" component={WalletWithdraw} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/account-activity\" component={ProfileAccountActivityMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/api-keys\" component={ProfileApiKeysMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/language\" component={ProfileLanguageMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/2fa\" component={ProfileAuthMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/change-password\" component={ProfileChangePasswordMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/verification\" component={ProfileVerificationMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/theme\" component={ProfileThemeMobileScreen} />\n                        <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileMobileScreen} />\n                        <Route exact={true} path=\"/trading/:market?\" component={TradingScreenMobile} />\n                        {showLanding() && <Route exact={true} path=\"/\" component={LandingScreen} />}\n                        <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n                    </Switch>\n                    {isLoggedIn && <WalletsFetch />}\n                    {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n                </div>\n            );\n        }\n\n        return (\n            <div className={`container-fluid pg-layout ${tradingCls}`}>\n                <Switch>\n                    <Route exact={true} path=\"/magic-link\" component={MagicLink} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationScreen} />\n                    <Route path=\"/404\" component={RestrictedScreen} />\n                    <Route path=\"/500\" component={MaintenanceScreen} />\n                    <Route exact={true} path=\"/trading/:market?\" component={TradingScreen} />\n                    {showLanding() && <Route exact={true} path=\"/\" component={LandingScreen} />}\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersTabScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/history\" component={HistoryScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/security/2fa\" component={ProfileTwoFactorAuthScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/api\" component={DocumentationScreen} />\n                    <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n                </Switch>\n                {isLoggedIn && <WalletsFetch/>}\n                {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n            </div>\n        );\n    }\n\n    private getLastAction = () => {\n        if (localStorage.getItem(STORE_KEY) !== null) {\n            return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n        }\n\n        return 0;\n    };\n\n    private setLastAction = (lastAction: number) => {\n        localStorage.setItem(STORE_KEY, lastAction.toString());\n    };\n\n    private initListener = () => {\n        this.reset();\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.addEventListener(type, this.reset);\n        }\n    };\n\n    private reset = () => {\n        this.setLastAction(Date.now());\n    };\n\n    private initInterval = () => {\n        this.timer = setInterval(() => {\n            this.check();\n        }, parseFloat(sessionCheckInterval()));\n    };\n\n    private check = () => {\n        const { user } = this.props;\n        const now = Date.now();\n        const timeleft = this.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n        const diff = timeleft - now;\n        const isTimeout = diff < 0;\n        if (isTimeout && user.email) {\n            if (user.state === 'active') {\n                this.handleChangeExpSessionModalState();\n            }\n\n            this.props.logout();\n        }\n    };\n\n    private handleSubmitExpSessionModal = () => {\n        const { history } = this.props;\n        this.handleChangeExpSessionModalState();\n        history.push('/signin');\n    };\n\n    private handleRenderExpiredSessionModal = () => (\n        <ExpiredSessionModal\n            title={this.translate('page.modal.expired.title')}\n            buttonLabel={this.translate('page.modal.expired.submit')}\n            handleChangeExpSessionModalState={this.handleChangeExpSessionModalState}\n            handleSubmitExpSessionModal={this.handleSubmitExpSessionModal}\n        />\n    );\n\n    private handleChangeExpSessionModalState = () => {\n        this.setState({\n            isShownExpSessionModal: !this.state.isShownExpSessionModal,\n        });\n    };\n\n    private handleApplyCustomization = (customization: CustomizationDataInterface) => {\n        const rootElement = document.documentElement;\n        const parsedSettings = customization && customization.settings ? JSON.parse(customization.settings) : null;\n\n        if (rootElement && parsedSettings && parsedSettings.theme_colors) {\n            parsedSettings.theme_colors.reduce((result, item) => {\n                const newItemColor = item.value;\n\n                if (newItemColor) {\n                    rootElement.style.setProperty(item.key, item.value);\n                }\n\n                return result;\n            }, {});\n\n            this.props.toggleChartRebuild();\n        }\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    colorTheme: selectCurrentColorTheme(state),\n    configsLoading: selectConfigsLoading(state),\n    configsSuccess: selectConfigsSuccess(state),\n    currentMarket: selectCurrentMarket(state),\n    customization: selectCustomizationData(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    platformAccessStatus: selectPlatformAccessStatus(state),\n    rangerState: selectRanger(state),\n    user: selectUserInfo(state),\n    userLoading: selectUserFetching(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    fetchConfigs: () => dispatch(configsFetch()),\n    fetchCustomization: () => dispatch(customizationFetch()),\n    logout: () => dispatch(logoutFetch()),\n    toggleChartRebuild: () => dispatch(toggleChartRebuild()),\n    rangerConnect: payload => dispatch(rangerConnectFetch(payload)),\n    userFetch: () => dispatch(userFetch()),\n    walletsReset: () => dispatch(walletsReset()),\n});\n\nexport const Layout = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(LayoutComponent) as any;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}