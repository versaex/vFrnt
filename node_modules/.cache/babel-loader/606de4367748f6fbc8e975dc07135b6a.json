{"ast":null,"code":"/*\n** TimeZones for Daylight Saving Time (Summer time)\n*/\nvar zonesDST = {\n  '-780': 'Pacific/Fakaofo',\n  '-765': 'Pacific/Chatham',\n  '-720': 'Pacific/Auckland',\n  '-600': 'Australia/ACT',\n  '-570': 'Australia/Adelaide',\n  '-540': 'Asia/Tokyo',\n  '-480': 'Asia/Shanghai',\n  '-420': 'Asia/Bangkok',\n  '-360': 'Asia/Almaty',\n  '-345': 'Asia/Kathmandu',\n  '-330': 'Asia/Kolkata',\n  '-240': 'Asia/Dubai',\n  '-270': 'Asia/Tehran',\n  '-180': 'Europe/Moscow',\n  '-120': 'Europe/Paris',\n  60: 'Europe/London',\n  180: 'America/Sao_Paulo',\n  240: 'America/New_York',\n  360: 'America/El_Salvador',\n  420: 'America/Los_Angeles',\n  600: 'Pacific/Honolulu'\n};\n\n/*\n** TimeZones for Standart Time (Winter time)\n*/\nvar zonesSTD = {\n  '-825': 'Pacific/Chatham',\n  '-780': 'Pacific/Auckland',\n  '-660': 'Australia/Brisbane',\n  '-630': 'Australia/Adelaide',\n  '-540': 'Asia/Tokyo',\n  '-480': 'Asia/Shanghai',\n  '-420': 'Asia/Bangkok',\n  '-360': 'Asia/Almaty',\n  '-345': 'Asia/Kathmandu',\n  '-330': 'Asia/Kolkata',\n  '-240': 'Asia/Dubai',\n  '-210': 'Asia/Tehran',\n  '-180': 'Europe/Moscow',\n  '-120': 'Africa/Cairo',\n  '-60': 'Europe/Paris',\n  0: 'Europe/London',\n  120: 'America/Argentina/Buenos_Aires',\n  240: 'America/Caracas',\n  300: 'America/Bogota',\n  360: 'America/El_Salvador',\n  480: 'America/Los_Angeles',\n  600: 'Pacific/Honolulu'\n};\nexport var getTradingChartTimezone = function getTradingChartTimezone(offset, period) {\n  var zone = period === 'DST' ? zonesDST[offset] : zonesSTD[offset];\n  return zone ? zone : 'Etc/UTC';\n};","map":{"version":3,"names":["zonesDST","zonesSTD","getTradingChartTimezone","offset","period","zone"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/TradingChart/timezones.ts"],"sourcesContent":["import { Timezone } from '../../charting_library/datafeed-api';\n\n/*\n** TimeZones for Daylight Saving Time (Summer time)\n*/\nconst zonesDST: { [key: string]: Timezone } = {\n    '-780': 'Pacific/Fakaofo',\n    '-765': 'Pacific/Chatham',\n    '-720': 'Pacific/Auckland',\n    '-600': 'Australia/ACT',\n    '-570': 'Australia/Adelaide',\n    '-540': 'Asia/Tokyo',\n    '-480': 'Asia/Shanghai',\n    '-420': 'Asia/Bangkok',\n    '-360': 'Asia/Almaty',\n    '-345': 'Asia/Kathmandu',\n    '-330': 'Asia/Kolkata',\n    '-240': 'Asia/Dubai',\n    '-270': 'Asia/Tehran',\n    '-180': 'Europe/Moscow',\n    '-120': 'Europe/Paris',\n    60: 'Europe/London',\n    180: 'America/Sao_Paulo',\n    240: 'America/New_York',\n    360: 'America/El_Salvador',\n    420: 'America/Los_Angeles',\n    600: 'Pacific/Honolulu',\n};\n\n/*\n** TimeZones for Standart Time (Winter time)\n*/\nconst zonesSTD: { [key: string]: Timezone } = {\n    '-825': 'Pacific/Chatham',\n    '-780': 'Pacific/Auckland',\n    '-660': 'Australia/Brisbane',\n    '-630': 'Australia/Adelaide',\n    '-540': 'Asia/Tokyo',\n    '-480': 'Asia/Shanghai',\n    '-420': 'Asia/Bangkok',\n    '-360': 'Asia/Almaty',\n    '-345': 'Asia/Kathmandu',\n    '-330': 'Asia/Kolkata',\n    '-240': 'Asia/Dubai',\n    '-210': 'Asia/Tehran',\n    '-180': 'Europe/Moscow',\n    '-120': 'Africa/Cairo',\n    '-60': 'Europe/Paris',\n    0: 'Europe/London',\n    120: 'America/Argentina/Buenos_Aires',\n    240: 'America/Caracas',\n    300: 'America/Bogota',\n    360: 'America/El_Salvador',\n    480: 'America/Los_Angeles',\n    600: 'Pacific/Honolulu',\n};\n\nexport const getTradingChartTimezone = (offset: number | string, period: 'DST' | 'STD'): Timezone => {\n    const zone: Timezone = period === 'DST' ? zonesDST[offset] : zonesSTD[offset];\n\n    return zone ? zone : 'Etc/UTC';\n};\n"],"mappings":"AAEA;AACA;AACA;AACA,IAAMA,QAAqC,GAAG;EAC1C,MAAM,EAAE,iBAAiB;EACzB,MAAM,EAAE,iBAAiB;EACzB,MAAM,EAAE,kBAAkB;EAC1B,MAAM,EAAE,eAAe;EACvB,MAAM,EAAE,oBAAoB;EAC5B,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,eAAe;EACvB,MAAM,EAAE,cAAc;EACtB,MAAM,EAAE,aAAa;EACrB,MAAM,EAAE,gBAAgB;EACxB,MAAM,EAAE,cAAc;EACtB,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,aAAa;EACrB,MAAM,EAAE,eAAe;EACvB,MAAM,EAAE,cAAc;EACtB,EAAE,EAAE,eAAe;EACnB,GAAG,EAAE,mBAAmB;EACxB,GAAG,EAAE,kBAAkB;EACvB,GAAG,EAAE,qBAAqB;EAC1B,GAAG,EAAE,qBAAqB;EAC1B,GAAG,EAAE;AACT,CAAC;;AAED;AACA;AACA;AACA,IAAMC,QAAqC,GAAG;EAC1C,MAAM,EAAE,iBAAiB;EACzB,MAAM,EAAE,kBAAkB;EAC1B,MAAM,EAAE,oBAAoB;EAC5B,MAAM,EAAE,oBAAoB;EAC5B,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,eAAe;EACvB,MAAM,EAAE,cAAc;EACtB,MAAM,EAAE,aAAa;EACrB,MAAM,EAAE,gBAAgB;EACxB,MAAM,EAAE,cAAc;EACtB,MAAM,EAAE,YAAY;EACpB,MAAM,EAAE,aAAa;EACrB,MAAM,EAAE,eAAe;EACvB,MAAM,EAAE,cAAc;EACtB,KAAK,EAAE,cAAc;EACrB,CAAC,EAAE,eAAe;EAClB,GAAG,EAAE,gCAAgC;EACrC,GAAG,EAAE,iBAAiB;EACtB,GAAG,EAAE,gBAAgB;EACrB,GAAG,EAAE,qBAAqB;EAC1B,GAAG,EAAE,qBAAqB;EAC1B,GAAG,EAAE;AACT,CAAC;AAED,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAAuB,CAAIC,MAAuB,EAAEC,MAAqB,EAAe;EACjG,IAAMC,IAAc,GAAGD,MAAM,KAAK,KAAK,GAAGJ,QAAQ,CAACG,MAAM,CAAC,GAAGF,QAAQ,CAACE,MAAM,CAAC;EAE7E,OAAOE,IAAI,GAAGA,IAAI,GAAG,SAAS;AAClC,CAAC"},"metadata":{},"sourceType":"module"}