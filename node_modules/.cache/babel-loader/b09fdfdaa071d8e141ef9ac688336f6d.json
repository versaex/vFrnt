{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\CryptoIcon\\\\index.tsx\";\nimport cx from 'classnames';\nimport * as React from 'react';\nvar findIcon = function findIcon(code) {\n  try {\n    return require(\"../../../node_modules/cryptocurrency-icons/svg/color/\".concat(code.toLowerCase(), \".svg\"));\n  } catch (err) {\n    return require('../../../node_modules/cryptocurrency-icons/svg/color/generic.svg');\n  }\n};\nexport var CryptoIcon = function CryptoIcon(props) {\n  var code = props.code,\n    _props$className = props.className,\n    className = _props$className === void 0 ? '' : _props$className,\n    children = props.children;\n  var icon = findIcon(code);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: cx('cr-crypto-icon', className),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: code,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), \" \", children);\n};","map":{"version":3,"names":["cx","React","findIcon","code","require","toLowerCase","err","CryptoIcon","props","className","children","icon"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/CryptoIcon/index.tsx"],"sourcesContent":["import cx from 'classnames';\nimport * as React from 'react';\n\nexport interface CryptoIconProps {\n    code: string;\n    className?: string;\n    children?: React.ReactNode;\n}\n\nconst findIcon = (code: string): string => {\n  try {\n    return require(`../../../node_modules/cryptocurrency-icons/svg/color/${code.toLowerCase()}.svg`);\n  } catch (err){\n    return require('../../../node_modules/cryptocurrency-icons/svg/color/generic.svg');\n  }\n};\n\nexport const CryptoIcon: React.FunctionComponent<CryptoIconProps> = props => {\n    const { code, className = '', children } = props;\n\n    const icon = findIcon(code);\n\n    return (\n        <span className={cx('cr-crypto-icon', className)}>\n            <img src={icon} alt={code} /> {children}\n        </span>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAQ9B,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAY,EAAa;EACzC,IAAI;IACF,OAAOC,OAAO,gEAAyDD,IAAI,CAACE,WAAW,EAAE,UAAO;EAClG,CAAC,CAAC,OAAOC,GAAG,EAAC;IACX,OAAOF,OAAO,CAAC,kEAAkE,CAAC;EACpF;AACF,CAAC;AAED,OAAO,IAAMG,UAAoD,GAAG,SAAvDA,UAAoD,CAAGC,KAAK,EAAI;EACzE,IAAQL,IAAI,GAA+BK,KAAK,CAAxCL,IAAI;IAAA,mBAA+BK,KAAK,CAAlCC,SAAS;IAATA,SAAS,iCAAG,EAAE;IAAEC,QAAQ,GAAKF,KAAK,CAAlBE,QAAQ;EAEtC,IAAMC,IAAI,GAAGT,QAAQ,CAACC,IAAI,CAAC;EAE3B,oBACI;IAAM,SAAS,EAAEH,EAAE,CAAC,gBAAgB,EAAES,SAAS,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7C;IAAK,GAAG,EAAEE,IAAK;IAAC,GAAG,EAAER,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,OAAEO,QAAQ,CACpC;AAEf,CAAC"},"metadata":{},"sourceType":"module"}