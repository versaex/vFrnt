{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\DepositCrypto\\\\index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { formatCCYAddress } from '../../helpers';\nimport { selectMobileDeviceState } from '../../modules';\nimport { CopyableTextField } from '../CopyableTextField';\nimport { MetaMaskButton } from '../MetaMaskButton';\nimport { QRCode } from '../QRCode';\n/**\n *  Component that displays wallet details that can be used to deposit cryptocurrency.\n */\nvar DepositCrypto = function DepositCrypto(props) {\n  var _wallet$deposit_addre;\n  var QR_SIZE = 118;\n  var buttonLabel = props.buttonLabel,\n    copiableTextFieldText = props.copiableTextFieldText,\n    copyButtonText = props.copyButtonText,\n    dimensions = props.dimensions,\n    error = props.error,\n    handleGenerateAddress = props.handleGenerateAddress,\n    handleOnCopy = props.handleOnCopy,\n    text = props.text,\n    wallet = props.wallet;\n  var isMobileDevice = useSelector(selectMobileDeviceState);\n  var size = dimensions || QR_SIZE;\n  var disabled = !((_wallet$deposit_addre = wallet.deposit_address) === null || _wallet$deposit_addre === void 0 ? void 0 : _wallet$deposit_addre.address);\n  var onCopy = !disabled ? handleOnCopy : undefined;\n  var className = classnames('cr-deposit-crypto', {\n    'cr-copyable-text-field__disabled': disabled\n  });\n  if (!wallet.deposit_address) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-deposit-crypto__create\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cr-deposit-crypto__create-btn\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: \"button\",\n      onClick: handleGenerateAddress,\n      size: \"lg\",\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, buttonLabel ? buttonLabel : 'Generate deposit address'))));\n  }\n  var walletAddress = wallet.deposit_address && wallet.deposit_address.address ? formatCCYAddress(wallet.currency, wallet.deposit_address.address) : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"cr-deposit-info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, text), walletAddress ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-none d-md-block qr-code-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    dimensions: size,\n    data: walletAddress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cr-deposit-crypto__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, wallet.currency === 'eth' && !isMobileDevice && walletAddress ? /*#__PURE__*/React.createElement(MetaMaskButton, {\n    depositAddress: walletAddress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"cr-deposit-crypto__copyable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"cr-copyable-text-field\",\n    onClick: onCopy,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CopyableTextField, {\n    className: \"cr-deposit-crypto__copyable-area\",\n    value: walletAddress || error,\n    fieldId: walletAddress ? 'copy_deposit_1' : 'copy_deposit_2',\n    copyButtonText: copyButtonText,\n    disabled: disabled,\n    label: copiableTextFieldText ? copiableTextFieldText : 'Deposit by Wallet Address',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  })))));\n};\nexport { DepositCrypto };","map":{"version":3,"names":["classnames","React","Button","useSelector","formatCCYAddress","selectMobileDeviceState","CopyableTextField","MetaMaskButton","QRCode","DepositCrypto","props","QR_SIZE","buttonLabel","copiableTextFieldText","copyButtonText","dimensions","error","handleGenerateAddress","handleOnCopy","text","wallet","isMobileDevice","size","disabled","deposit_address","address","onCopy","undefined","className","walletAddress","currency"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/DepositCrypto/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { formatCCYAddress } from '../../helpers';\nimport { selectMobileDeviceState, Wallet } from '../../modules';\nimport { CopyableTextField } from '../CopyableTextField';\nimport { MetaMaskButton } from '../MetaMaskButton';\nimport { QRCode } from '../QRCode';\n\nexport interface DepositCryptoProps {\n    /**\n     * Wallet\n     */\n    wallet: Wallet;\n    /**\n     * Data which is used to display error if data is undefined\n     */\n    error: string;\n    /**\n     * Defines the size of QR code component.\n     * @default 118\n     */\n    dimensions?: number;\n    /**\n     *  Renders text of a component\n     */\n    text?: string;\n    /**\n     * @default 'Deposit by Wallet Address'\n     * Renders text of the label of CopyableTextField component\n     */\n    copiableTextFieldText?: string;\n    /**\n     * @default 'Copy'\n     *  Renders text of the label of copy button component\n     */\n    copyButtonText?: string;\n    /**\n     * Renders text alert about success copy address\n     */\n    handleOnCopy: () => void;\n    /**\n     * Generate wallet address for selected wallet\n     */\n    handleGenerateAddress: () => void;\n    /**\n     * Generate address button label\n     */\n    buttonLabel?: string;\n}\n\n\n/**\n *  Component that displays wallet details that can be used to deposit cryptocurrency.\n */\nconst DepositCrypto: React.FunctionComponent<DepositCryptoProps> = (props: DepositCryptoProps) => {\n    const QR_SIZE = 118;\n    const {\n        buttonLabel,\n        copiableTextFieldText,\n        copyButtonText,\n        dimensions,\n        error,\n        handleGenerateAddress,\n        handleOnCopy,\n        text,\n        wallet,\n    } = props;\n    const isMobileDevice = useSelector(selectMobileDeviceState);\n    const size = dimensions || QR_SIZE;\n    const disabled = !wallet.deposit_address?.address;\n    const onCopy = !disabled ? handleOnCopy : undefined;\n    const className = classnames('cr-deposit-crypto', {'cr-copyable-text-field__disabled': disabled});\n\n    if (!wallet.deposit_address) {\n        return (\n            <div className={className}>\n                <div className=\"cr-deposit-crypto__create\">\n                    <div className=\"cr-deposit-crypto__create-btn\">\n                        <Button\n                            block={true}\n                            type=\"button\"\n                            onClick={handleGenerateAddress}\n                            size=\"lg\"\n                            variant=\"primary\"\n                        >\n                            {buttonLabel ? buttonLabel : 'Generate deposit address'}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    const walletAddress = wallet.deposit_address && wallet.deposit_address.address ?\n        formatCCYAddress(wallet.currency, wallet.deposit_address.address) : '';\n\n    return (\n        <div className={className}>\n            <div>\n                <p className=\"cr-deposit-info\">{text}</p>\n                {walletAddress ? (\n                    <div className=\"d-none d-md-block qr-code-wrapper\">\n                        <QRCode dimensions={size} data={walletAddress}/>\n                    </div>\n                ) : null}\n            </div>\n            <div className=\"cr-deposit-crypto__block\">\n                {wallet.currency === 'eth' && !isMobileDevice && walletAddress ? (\n                    <MetaMaskButton depositAddress={walletAddress} />\n                ) : null}\n                <form className=\"cr-deposit-crypto__copyable\">\n                    <fieldset className=\"cr-copyable-text-field\" onClick={onCopy}>\n                        <CopyableTextField\n                            className=\"cr-deposit-crypto__copyable-area\"\n                            value={walletAddress || error}\n                            fieldId={walletAddress ? 'copy_deposit_1' : 'copy_deposit_2'}\n                            copyButtonText={copyButtonText}\n                            disabled={disabled}\n                            label={copiableTextFieldText ? copiableTextFieldText : 'Deposit by Wallet Address'}\n                        />\n                    </fieldset>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport {\n    DepositCrypto,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}