{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\containers\\\\OrderBook\\\\index.tsx\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CombinedOrderBook, Decimal } from '../../components';\nimport { colors } from '../../constants';\nimport { accumulateVolume, calcMaxVolume } from '../../helpers';\nimport { selectCurrentColorTheme, selectCurrentMarket, selectCurrentPrice, selectDepthAsks, selectDepthBids, selectDepthLoading, selectLastRecentTrade, selectMarketTickers, selectMobileDeviceState, selectOpenOrdersList, setCurrentPrice as _setCurrentPrice } from '../../modules';\n// render big/small breakpoint\nvar breakpoint = 634;\nvar OrderBookContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(OrderBookContainer, _React$Component);\n  var _super = _createSuper(OrderBookContainer);\n  function OrderBookContainer(props) {\n    var _this;\n    _classCallCheck(this, OrderBookContainer);\n    _this = _super.call(this, props);\n    _this.orderRef = void 0;\n    _this.orderBook = function (bids, asks) {\n      var _this$props = _this.props,\n        forceLarge = _this$props.forceLarge,\n        colorTheme = _this$props.colorTheme,\n        currentMarket = _this$props.currentMarket;\n      var isLarge = forceLarge || _this.state.width > breakpoint;\n      var asksData = isLarge ? asks : asks.slice(0).reverse();\n      return /*#__PURE__*/React.createElement(CombinedOrderBook, {\n        maxVolume: calcMaxVolume(bids, asks),\n        orderBookEntryAsks: accumulateVolume(asks),\n        orderBookEntryBids: accumulateVolume(bids),\n        rowBackgroundColorAsks: colors[colorTheme].orderBook.asks,\n        rowBackgroundColorBids: colors[colorTheme].orderBook.bids,\n        dataAsks: _this.renderOrderBook(asksData, 'asks', _this.props.intl.formatMessage({\n          id: 'page.noDataToShow'\n        }), currentMarket),\n        dataBids: _this.renderOrderBook(bids, 'bids', _this.props.intl.formatMessage({\n          id: 'page.noDataToShow'\n        }), currentMarket),\n        headers: _this.renderHeaders(),\n        lastPrice: _this.lastPrice(),\n        onSelectAsks: _this.handleOnSelectAsks,\n        onSelectBids: _this.handleOnSelectBids,\n        isLarge: isLarge,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      });\n    };\n    _this.renderHeaders = function () {\n      var _this$props2 = _this.props,\n        currentMarket = _this$props2.currentMarket,\n        intl = _this$props2.intl,\n        isMobileDevice = _this$props2.isMobileDevice;\n      var formattedBaseUnit = currentMarket && currentMarket.base_unit ? \"(\".concat(currentMarket.base_unit.toUpperCase(), \")\") : '';\n      var formattedQuoteUnit = currentMarket && currentMarket.quote_unit ? \"(\".concat(currentMarket.quote_unit.toUpperCase(), \")\") : '';\n      if (isMobileDevice) {\n        return [\"\".concat(intl.formatMessage({\n          id: 'page.body.trade.orderbook.header.price'\n        }), \"\\n\").concat(formattedQuoteUnit), \"\".concat(intl.formatMessage({\n          id: 'page.body.trade.orderbook.header.amount'\n        }), \"\\n\").concat(formattedBaseUnit)];\n      }\n      return [\"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.price'\n      }), \"\\n\").concat(formattedQuoteUnit), \"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.amount'\n      }), \"\\n\").concat(formattedBaseUnit), \"\".concat(intl.formatMessage({\n        id: 'page.body.trade.orderbook.header.volume'\n      }), \"\\n\").concat(formattedBaseUnit)];\n    };\n    _this.renderOrderBook = function (array, side, message, currentMarket) {\n      var _this$props3 = _this.props,\n        isMobileDevice = _this$props3.isMobileDevice,\n        forceLarge = _this$props3.forceLarge;\n      var total = accumulateVolume(array);\n      var isLarge = forceLarge || _this.state.width > breakpoint;\n      var priceFixed = currentMarket ? currentMarket.price_precision : 0;\n      var amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n      return array.length > 0 ? array.map(function (item, i) {\n        var _item = _slicedToArray(item, 2),\n          price = _item[0],\n          volume = _item[1];\n        switch (side) {\n          case 'asks':\n            total = isLarge ? accumulateVolume(array) : accumulateVolume(array.slice(0).reverse()).slice(0).reverse();\n            if (isMobileDevice) {\n              return [/*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i + 1] ? array[i + 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 33\n                }\n              }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 29\n                }\n              }, total[i])];\n            }\n            return [/*#__PURE__*/React.createElement(\"span\", {\n              key: i,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 25\n              }\n            }, /*#__PURE__*/React.createElement(Decimal, {\n              fixed: priceFixed,\n              thousSep: \",\",\n              prevValue: array[i + 1] ? array[i + 1][0] : 0,\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 29\n              }\n            }, price)), /*#__PURE__*/React.createElement(Decimal, {\n              key: i,\n              fixed: amountFixed,\n              thousSep: \",\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }\n            }, volume), /*#__PURE__*/React.createElement(Decimal, {\n              key: i,\n              fixed: amountFixed,\n              thousSep: \",\",\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 25\n              }\n            }, total[i])];\n          default:\n            if (isLarge) {\n              if (isMobileDevice) {\n                return [/*#__PURE__*/React.createElement(Decimal, {\n                  key: i,\n                  fixed: amountFixed,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 33\n                  }\n                }, total[i]), /*#__PURE__*/React.createElement(\"span\", {\n                  key: i,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(Decimal, {\n                  fixed: priceFixed,\n                  thousSep: \",\",\n                  prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 37\n                  }\n                }, price))];\n              }\n              return [/*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 29\n                }\n              }, total[i]), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 29\n                }\n              }, volume), /*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 33\n                }\n              }, price))];\n            } else {\n              if (isMobileDevice) {\n                return [/*#__PURE__*/React.createElement(\"span\", {\n                  key: i,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(Decimal, {\n                  fixed: priceFixed,\n                  thousSep: \",\",\n                  prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 37\n                  }\n                }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                  key: i,\n                  fixed: amountFixed,\n                  thousSep: \",\",\n                  __self: _assertThisInitialized(_this),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 33\n                  }\n                }, total[i])];\n              }\n              return [/*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 29\n                }\n              }, /*#__PURE__*/React.createElement(Decimal, {\n                fixed: priceFixed,\n                thousSep: \",\",\n                prevValue: array[i - 1] ? array[i - 1][0] : 0,\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 33\n                }\n              }, price)), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 29\n                }\n              }, volume), /*#__PURE__*/React.createElement(Decimal, {\n                key: i,\n                fixed: amountFixed,\n                thousSep: \",\",\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 29\n                }\n              }, total[i])];\n            }\n        }\n      }) : [[[''], message, ['']]];\n    };\n    _this.handleOnSelectBids = function (index) {\n      var _this$props4 = _this.props,\n        currentPrice = _this$props4.currentPrice,\n        bids = _this$props4.bids;\n      var priceToSet = bids[Number(index)] && Number(bids[Number(index)][0]);\n      if (currentPrice !== priceToSet) {\n        _this.props.setCurrentPrice(priceToSet);\n      }\n    };\n    _this.handleOnSelectAsks = function (index) {\n      var _this$props5 = _this.props,\n        asks = _this$props5.asks,\n        currentPrice = _this$props5.currentPrice,\n        forceLarge = _this$props5.forceLarge;\n      var isLarge = forceLarge || _this.state.width >= breakpoint;\n      var asksData = isLarge ? asks : asks.slice(0).reverse();\n      var priceToSet = asksData[Number(index)] && Number(asksData[Number(index)][0]);\n      if (currentPrice !== priceToSet) {\n        _this.props.setCurrentPrice(priceToSet);\n      }\n    };\n    _this.getTickerValue = function (currentMarket, tickers) {\n      var defaultTicker = {\n        amount: 0,\n        low: 0,\n        last: 0,\n        high: 0,\n        volume: 0,\n        open: 0,\n        price_change_percent: '+0.00%'\n      };\n      return tickers[currentMarket.id] || defaultTicker;\n    };\n    _this.state = {\n      width: 0\n    };\n    _this.orderRef = React.createRef();\n    return _this;\n  }\n  _createClass(OrderBookContainer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n        this.setState({\n          width: this.orderRef.current.clientWidth\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var _this$props6 = this.props,\n        asks = _this$props6.asks,\n        bids = _this$props6.bids,\n        currentMarket = _this$props6.currentMarket,\n        lastRecentTrade = _this$props6.lastRecentTrade,\n        marketTickers = _this$props6.marketTickers,\n        openOrdersList = _this$props6.openOrdersList,\n        orderBookLoading = _this$props6.orderBookLoading,\n        size = _this$props6.size;\n      var shouldUpdateState = JSON.stringify(nextProps.asks) !== JSON.stringify(asks) || JSON.stringify(nextProps.bids) !== JSON.stringify(bids) || (nextProps.currentMarket && nextProps.currentMarket.id) !== (currentMarket && currentMarket.id) || nextProps.openOrdersList !== openOrdersList || nextProps.orderBookLoading !== orderBookLoading || nextProps.size !== size;\n      if (nextProps.lastRecentTrade) {\n        return shouldUpdateState || JSON.stringify(nextProps.lastRecentTrade) !== JSON.stringify(lastRecentTrade);\n      }\n      var lastPrice = currentMarket && this.getTickerValue(currentMarket, marketTickers).last;\n      var nextLastPrice = nextProps.currentMarket && this.getTickerValue(nextProps.currentMarket, nextProps.marketTickers).last;\n      return shouldUpdateState || nextLastPrice !== lastPrice;\n    }\n  }, {\n    key: \"lastPrice\",\n    value: function lastPrice() {\n      var _this$props7 = this.props,\n        currentMarket = _this$props7.currentMarket,\n        isMobileDevice = _this$props7.isMobileDevice,\n        lastRecentTrade = _this$props7.lastRecentTrade,\n        marketTickers = _this$props7.marketTickers;\n      if (currentMarket) {\n        var lastPrice = '';\n        var priceChangeSign = '';\n        if ((lastRecentTrade === null || lastRecentTrade === void 0 ? void 0 : lastRecentTrade.market) === currentMarket.id) {\n          lastPrice = lastRecentTrade.price;\n          if (Number(lastRecentTrade.price_change) >= 0) {\n            priceChangeSign = 'positive';\n          } else if (Number(lastRecentTrade.price_change) < 0) {\n            priceChangeSign = 'negative';\n          }\n        } else {\n          var currentTicker = currentMarket && this.getTickerValue(currentMarket, marketTickers);\n          lastPrice = currentTicker.last;\n          if (currentTicker.price_change_percent.includes('+')) {\n            priceChangeSign = 'positive';\n          } else if (currentTicker.price_change_percent.includes('-')) {\n            priceChangeSign = 'negative';\n          }\n        }\n        var cn = classNames('', {\n          'cr-combined-order-book__market-negative': priceChangeSign === 'negative',\n          'cr-combined-order-book__market-positive': priceChangeSign === 'positive'\n        });\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: cn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        }, Decimal.format(lastPrice, currentMarket.price_precision, ','), \"\\xA0\", isMobileDevice ? null : currentMarket.quote_unit.toUpperCase()), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }\n        }, this.props.intl.formatMessage({\n          id: 'page.body.trade.orderbook.lastMarket'\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: 'cr-combined-order-book__market-negative',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }\n        }, \"0\"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }\n        }, this.props.intl.formatMessage({\n          id: 'page.body.trade.orderbook.lastMarket'\n        })));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n        asks = _this$props8.asks,\n        bids = _this$props8.bids,\n        forceLarge = _this$props8.forceLarge,\n        orderBookLoading = _this$props8.orderBookLoading;\n      var isLarge = forceLarge || this.state.width > breakpoint;\n      var cn = classNames('pg-combined-order-book ', {\n        'cr-combined-order-book--data-loading': orderBookLoading,\n        'pg-combined-order-book--no-data-first': !asks.length && !isLarge || !bids.length && isLarge,\n        'pg-combined-order-book--no-data-second': !bids.length && !isLarge || !asks.length && isLarge\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: cn,\n        ref: this.orderRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'cr-table-header__content',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, this.props.intl.formatMessage({\n        id: 'page.body.trade.orderbook'\n      })), orderBookLoading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pg-combined-order-book-loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 84\n        }\n      })) : this.orderBook(bids, asks));\n    }\n  }]);\n  return OrderBookContainer;\n}(React.Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    colorTheme: selectCurrentColorTheme(state),\n    orderBookLoading: selectDepthLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n    lastRecentTrade: selectLastRecentTrade(state),\n    marketTickers: selectMarketTickers(state),\n    openOrdersList: selectOpenOrdersList(state),\n    isMobileDevice: selectMobileDeviceState(state)\n  };\n};\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setCurrentPrice: function setCurrentPrice(payload) {\n      return dispatch(_setCurrentPrice(payload));\n    }\n  };\n};\nexport var OrderBook = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderBookContainer));","map":{"version":3,"names":["classNames","React","Spinner","injectIntl","connect","CombinedOrderBook","Decimal","colors","accumulateVolume","calcMaxVolume","selectCurrentColorTheme","selectCurrentMarket","selectCurrentPrice","selectDepthAsks","selectDepthBids","selectDepthLoading","selectLastRecentTrade","selectMarketTickers","selectMobileDeviceState","selectOpenOrdersList","setCurrentPrice","breakpoint","OrderBookContainer","props","orderRef","orderBook","bids","asks","forceLarge","colorTheme","currentMarket","isLarge","state","width","asksData","slice","reverse","renderOrderBook","intl","formatMessage","id","renderHeaders","lastPrice","handleOnSelectAsks","handleOnSelectBids","isMobileDevice","formattedBaseUnit","base_unit","toUpperCase","formattedQuoteUnit","quote_unit","array","side","message","total","priceFixed","price_precision","amountFixed","amount_precision","length","map","item","i","price","volume","index","currentPrice","priceToSet","Number","getTickerValue","tickers","defaultTicker","amount","low","last","high","open","price_change_percent","createRef","current","clientWidth","setState","nextProps","lastRecentTrade","marketTickers","openOrdersList","orderBookLoading","size","shouldUpdateState","JSON","stringify","nextLastPrice","priceChangeSign","market","price_change","currentTicker","includes","cn","format","Component","mapStateToProps","mapDispatchToProps","dispatch","payload","OrderBook"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/containers/OrderBook/index.tsx"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { CombinedOrderBook, Decimal } from '../../components';\nimport { colors } from '../../constants';\nimport { accumulateVolume, calcMaxVolume } from '../../helpers';\nimport {\n    Market,\n    PublicTrade,\n    RootState,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectCurrentPrice,\n    selectDepthAsks,\n    selectDepthBids,\n    selectDepthLoading,\n    selectLastRecentTrade,\n    selectMarketTickers,\n    selectMobileDeviceState,\n    selectOpenOrdersList,\n    setCurrentPrice,\n    Ticker,\n} from '../../modules';\nimport { OrderCommon } from '../../modules/types';\n\ninterface ReduxProps {\n    asks: string[][];\n    bids: string[][];\n    colorTheme: string;\n    currentMarket?: Market;\n    currentPrice?: number;\n    lastRecentTrade?: PublicTrade;\n    openOrdersList: OrderCommon[];\n    orderBookLoading: boolean;\n    isMobileDevice: boolean;\n}\n\ninterface DispatchProps {\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ninterface State {\n    width: number;\n}\n\ninterface OwnProps {\n    marketTickers: {\n        [key: string]: Ticker;\n    };\n    forceLarge?: boolean;\n    size: number;\n}\n\ntype Props = ReduxProps & DispatchProps & OwnProps & IntlProps;\n\n// render big/small breakpoint\nconst breakpoint = 634;\n\nclass OrderBookContainer extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            width: 0,\n        };\n\n        this.orderRef = React.createRef();\n    }\n\n    private orderRef;\n\n    public componentDidUpdate() {\n        if (this.orderRef.current && this.state.width !== this.orderRef.current.clientWidth) {\n            this.setState({\n                width: this.orderRef.current.clientWidth,\n            });\n        }\n    }\n\n    public shouldComponentUpdate(nextProps: Props) {\n        const {\n            asks,\n            bids,\n            currentMarket,\n            lastRecentTrade,\n            marketTickers,\n            openOrdersList,\n            orderBookLoading,\n            size,\n        } = this.props;\n\n        const shouldUpdateState =\n            JSON.stringify(nextProps.asks) !== JSON.stringify(asks) ||\n            JSON.stringify(nextProps.bids) !== JSON.stringify(bids) ||\n            (nextProps.currentMarket && nextProps.currentMarket.id) !== (currentMarket && currentMarket.id) ||\n            nextProps.openOrdersList !== openOrdersList ||\n            nextProps.orderBookLoading !== orderBookLoading ||\n            nextProps.size !== size;\n\n        if (nextProps.lastRecentTrade) {\n            return (\n                shouldUpdateState ||\n                JSON.stringify(nextProps.lastRecentTrade) !== JSON.stringify(lastRecentTrade)\n            );\n        }\n\n        const lastPrice = currentMarket && this.getTickerValue(currentMarket, marketTickers).last;\n        const nextLastPrice = nextProps.currentMarket && this.getTickerValue(nextProps.currentMarket, nextProps.marketTickers).last;\n\n        return (\n            shouldUpdateState ||\n            nextLastPrice !== lastPrice\n        );\n    }\n\n    public lastPrice() {\n        const {\n            currentMarket,\n            isMobileDevice,\n            lastRecentTrade,\n            marketTickers,\n        } = this.props;\n\n        if (currentMarket) {\n            let lastPrice = '';\n            let priceChangeSign: '' | 'positive' | 'negative' = '';\n\n            if (lastRecentTrade?.market === currentMarket.id) {\n                lastPrice = lastRecentTrade.price;\n\n                if (Number(lastRecentTrade.price_change) >= 0) {\n                    priceChangeSign = 'positive';\n                } else if (Number(lastRecentTrade.price_change) < 0) {\n                    priceChangeSign = 'negative';\n                }\n            } else {\n                const currentTicker = currentMarket && this.getTickerValue(currentMarket, marketTickers);\n                lastPrice = currentTicker.last;\n\n\n                if (currentTicker.price_change_percent.includes('+')) {\n                    priceChangeSign = 'positive';\n                } else if (currentTicker.price_change_percent.includes('-')) {\n                    priceChangeSign = 'negative';\n                }\n            }\n\n            const cn = classNames('', {\n                'cr-combined-order-book__market-negative': priceChangeSign === 'negative',\n                'cr-combined-order-book__market-positive': priceChangeSign === 'positive',\n            });\n\n            return (\n                <React.Fragment>\n                    <span className={cn}>\n                        {Decimal.format(lastPrice, currentMarket.price_precision, ',')}&nbsp;\n                        {isMobileDevice ? null : currentMarket.quote_unit.toUpperCase()}\n                    </span>\n                    <span>{this.props.intl.formatMessage({id: 'page.body.trade.orderbook.lastMarket'})}</span>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <span className={'cr-combined-order-book__market-negative'}>0</span>\n                    <span>{this.props.intl.formatMessage({id: 'page.body.trade.orderbook.lastMarket'})}</span>\n                </React.Fragment>\n            );\n        }\n    }\n\n    public render() {\n        const {\n            asks,\n            bids,\n            forceLarge,\n            orderBookLoading,\n        } = this.props;\n\n        const isLarge = forceLarge || (this.state.width > breakpoint);\n\n        const cn = classNames('pg-combined-order-book ', {\n            'cr-combined-order-book--data-loading': orderBookLoading,\n            'pg-combined-order-book--no-data-first': (!asks.length && !isLarge) || (!bids.length && isLarge),\n            'pg-combined-order-book--no-data-second': (!bids.length && !isLarge) || (!asks.length && isLarge),\n        });\n\n        return (\n            <div className={cn} ref={this.orderRef}>\n                <div className={'cr-table-header__content'}>\n                    {this.props.intl.formatMessage({id: 'page.body.trade.orderbook'})}\n                </div>\n                {orderBookLoading ? <div className=\"pg-combined-order-book-loader\"><Spinner animation=\"border\" variant=\"primary\" /></div> : this.orderBook(bids, asks)}\n            </div>\n        );\n    }\n\n    private orderBook = (bids, asks) => {\n        const {\n            forceLarge,\n            colorTheme,\n            currentMarket,\n        } = this.props;\n\n        const isLarge = forceLarge || this.state.width > breakpoint;\n        const asksData = isLarge ? asks : asks.slice(0).reverse();\n\n        return (\n            <CombinedOrderBook\n                maxVolume={calcMaxVolume(bids, asks)}\n                orderBookEntryAsks={accumulateVolume(asks)}\n                orderBookEntryBids={accumulateVolume(bids)}\n                rowBackgroundColorAsks={colors[colorTheme].orderBook.asks}\n                rowBackgroundColorBids={colors[colorTheme].orderBook.bids}\n                dataAsks={this.renderOrderBook(asksData, 'asks', this.props.intl.formatMessage({id: 'page.noDataToShow'}), currentMarket)}\n                dataBids={this.renderOrderBook(bids, 'bids', this.props.intl.formatMessage({id: 'page.noDataToShow'}), currentMarket)}\n                headers={this.renderHeaders()}\n                lastPrice={this.lastPrice()}\n                onSelectAsks={this.handleOnSelectAsks}\n                onSelectBids={this.handleOnSelectBids}\n                isLarge={isLarge}\n            />\n        );\n    };\n\n    private renderHeaders = () => {\n        const {\n            currentMarket,\n            intl,\n            isMobileDevice,\n        } = this.props;\n        const formattedBaseUnit = (currentMarket && currentMarket.base_unit) ? `(${currentMarket.base_unit.toUpperCase()})` : '';\n        const formattedQuoteUnit = (currentMarket && currentMarket.quote_unit) ? `(${currentMarket.quote_unit.toUpperCase()})` : '';\n\n        if (isMobileDevice) {\n            return [\n                `${intl.formatMessage({id: 'page.body.trade.orderbook.header.price'})}\\n${formattedQuoteUnit}`,\n                `${intl.formatMessage({id: 'page.body.trade.orderbook.header.amount'})}\\n${formattedBaseUnit}`,\n            ];\n        }\n\n        return [\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.price'})}\\n${formattedQuoteUnit}`,\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.amount'})}\\n${formattedBaseUnit}`,\n            `${intl.formatMessage({id: 'page.body.trade.orderbook.header.volume'})}\\n${formattedBaseUnit}`,\n        ];\n    };\n\n    private renderOrderBook = (array: string[][], side: string, message: string, currentMarket?: Market) => {\n        const { isMobileDevice, forceLarge } = this.props;\n        let total = accumulateVolume(array);\n        const isLarge = forceLarge || this.state.width > breakpoint;\n        const priceFixed = currentMarket ? currentMarket.price_precision : 0;\n        const amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n\n        return (array.length > 0) ? array.map((item, i) => {\n            const [price, volume] = item;\n            switch (side) {\n                case 'asks':\n                    total = isLarge ? accumulateVolume(array) : accumulateVolume(array.slice(0).reverse()).slice(0).reverse();\n\n                    if (isMobileDevice) {\n                        return [\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i + 1] ? array[i + 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                        ];\n                    }\n\n                    return [\n                        <span key={i}>\n                            <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i + 1] ? array[i + 1][0] : 0}>{price}</Decimal>\n                        </span>,\n                        <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                        <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                    ];\n                default:\n                    if (isLarge) {\n                        if (isMobileDevice) {\n                            return [\n                                <Decimal key={i} fixed={amountFixed}>{total[i]}</Decimal>,\n                                <span key={i}>\n                                    <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                                </span>,\n                            ];\n                        }\n\n                        return [\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                        ];\n                    } else {\n                        if (isMobileDevice) {\n                            return [\n                                <span key={i}>\n                                    <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                                </span>,\n                                <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                            ];\n                        }\n\n                        return [\n                            <span key={i}>\n                                <Decimal fixed={priceFixed} thousSep=\",\" prevValue={array[i - 1] ? array[i - 1][0] : 0}>{price}</Decimal>\n                            </span>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{volume}</Decimal>,\n                            <Decimal key={i} fixed={amountFixed} thousSep=\",\">{total[i]}</Decimal>,\n                        ];\n                    }\n            }\n        }) : [[[''], message, ['']]];\n    };\n\n    private handleOnSelectBids = (index: string) => {\n        const { currentPrice, bids } = this.props;\n        const priceToSet = bids[Number(index)] && Number(bids[Number(index)][0]);\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n\n    private handleOnSelectAsks = (index: string) => {\n        const { asks, currentPrice, forceLarge } = this.props;\n        const isLarge = forceLarge || this.state.width >= breakpoint;\n        const asksData = isLarge ? asks : asks.slice(0).reverse();\n        const priceToSet = asksData[Number(index)] && Number(asksData[Number(index)][0]);\n        if (currentPrice !== priceToSet) {\n            this.props.setCurrentPrice(priceToSet);\n        }\n    };\n\n    private getTickerValue = (currentMarket: Market, tickers: { [key: string]: Ticker }) => {\n        const defaultTicker = { amount: 0, low: 0, last: 0, high: 0, volume: 0, open: 0, price_change_percent: '+0.00%' };\n\n        return tickers[currentMarket.id] || defaultTicker;\n    };\n}\n\nconst mapStateToProps = (state: RootState) => ({\n    bids: selectDepthBids(state),\n    asks: selectDepthAsks(state),\n    colorTheme: selectCurrentColorTheme(state),\n    orderBookLoading: selectDepthLoading(state),\n    currentMarket: selectCurrentMarket(state),\n    currentPrice: selectCurrentPrice(state),\n    lastRecentTrade: selectLastRecentTrade(state),\n    marketTickers: selectMarketTickers(state),\n    openOrdersList: selectOpenOrdersList(state),\n    isMobileDevice: selectMobileDeviceState(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n    });\n\nexport const OrderBook = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OrderBookContainer)) as any;\nexport type OrderBookProps = ReduxProps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}