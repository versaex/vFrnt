{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\PasswordStrengthMeter\\\\index.tsx\";\nimport * as React from 'react';\nimport { passwordEntropyStep } from '../../api';\nimport { PasswordStrengthTip } from '../PasswordStrengthTip';\nvar renderPasswordStrengthMeter = function renderPasswordStrengthMeter(passwordStrengthMeterLength) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength-meter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength-meter__block \".concat(passwordStrengthClassName(passwordStrengthMeterLength)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }));\n};\nvar renderPasswordStrengthTip = function renderPasswordStrengthTip(props, passwordStrengthMeterLength) {\n  return props.passwordPopUp ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, props.translate('page.header.signUp.strength.password')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-pop-up__strength-status \".concat(passwordStrengthClassName(passwordStrengthMeterLength)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, passwordStrengthStatus(passwordStrengthMeterLength, props.translate))), /*#__PURE__*/React.createElement(PasswordStrengthTip, {\n    passwordErrorFirstSolved: props.passwordErrorFirstSolved,\n    passwordErrorSecondSolved: props.passwordErrorSecondSolved,\n    passwordErrorThirdSolved: props.passwordErrorThirdSolved,\n    passwordPopUp: props.passwordPopUp,\n    translate: props.translate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : null;\n};\nvar passwordStrengthClassName = function passwordStrengthClassName(passwordStrengthMeterLength) {\n  switch (passwordStrengthMeterLength) {\n    case 0:\n      return 'too-weak';\n    case 1:\n      return 'weak';\n    case 2:\n      return 'good';\n    case 3:\n      return 'strong';\n    case 4:\n      return 'very-strong';\n    default:\n      return 'too-weak';\n  }\n};\nvar passwordStrengthStatus = function passwordStrengthStatus(passwordStrengthMeterLength, translate) {\n  switch (passwordStrengthMeterLength) {\n    case 0:\n      return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n    case 1:\n      return translate('page.header.signUp.password.too.weak') || 'WEAK';\n    case 2:\n      return translate('page.header.signUp.password.good') || 'GOOD';\n    case 3:\n      return translate('page.header.signUp.password.strong') || 'STRONG';\n    case 4:\n      return translate('page.header.signUp.password.very.strong') || 'VERY STRONG';\n    default:\n      return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n  }\n};\nvar PasswordStrengthMeterComponent = function PasswordStrengthMeterComponent(props) {\n  var passwordErrorSecondSolved = props.passwordErrorSecondSolved,\n    passwordErrorFirstSolved = props.passwordErrorFirstSolved,\n    passwordErrorThirdSolved = props.passwordErrorThirdSolved,\n    minPasswordEntropy = props.minPasswordEntropy,\n    currentPasswordEntropy = props.currentPasswordEntropy,\n    passwordExist = props.passwordExist;\n  var passwordComplite = passwordErrorSecondSolved && passwordErrorFirstSolved && passwordErrorThirdSolved;\n  var AVG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep();\n  var STRONG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep() * 2;\n  var passwordStrengthMeterLength = -1;\n  if (currentPasswordEntropy < minPasswordEntropy) {\n    passwordStrengthMeterLength = 0;\n  }\n  if (currentPasswordEntropy < minPasswordEntropy && passwordErrorFirstSolved || passwordErrorFirstSolved) {\n    passwordStrengthMeterLength = 1;\n  }\n  if (passwordComplite) {\n    if (currentPasswordEntropy >= minPasswordEntropy && currentPasswordEntropy < AVG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 2;\n    }\n    if (currentPasswordEntropy >= AVG_PASSWORD_ENTROPY && currentPasswordEntropy < STRONG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 3;\n    }\n    if (currentPasswordEntropy >= STRONG_PASSWORD_ENTROPY) {\n      passwordStrengthMeterLength = 4;\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-password-strength\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, passwordExist ? renderPasswordStrengthMeter(passwordStrengthMeterLength) : null, renderPasswordStrengthTip(props, passwordStrengthMeterLength));\n};\nexport var PasswordStrengthMeter = React.memo(PasswordStrengthMeterComponent);","map":{"version":3,"names":["React","passwordEntropyStep","PasswordStrengthTip","renderPasswordStrengthMeter","passwordStrengthMeterLength","passwordStrengthClassName","renderPasswordStrengthTip","props","passwordPopUp","translate","passwordStrengthStatus","passwordErrorFirstSolved","passwordErrorSecondSolved","passwordErrorThirdSolved","PasswordStrengthMeterComponent","minPasswordEntropy","currentPasswordEntropy","passwordExist","passwordComplite","AVG_PASSWORD_ENTROPY","STRONG_PASSWORD_ENTROPY","PasswordStrengthMeter","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/PasswordStrengthMeter/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { passwordEntropyStep } from '../../api';\nimport { PasswordStrengthTip } from '../PasswordStrengthTip';\n\nexport interface PasswordStrengthMeterProps {\n    currentPasswordEntropy: number;\n    minPasswordEntropy: number;\n    passwordExist: boolean;\n    passwordErrorFirstSolved: boolean;\n    passwordErrorSecondSolved: boolean;\n    passwordErrorThirdSolved: boolean;\n    passwordPopUp: boolean;\n    translate: (id: string) => string;\n}\n\nconst renderPasswordStrengthMeter = (passwordStrengthMeterLength: number) => (\n    <div className=\"pg-password-strength-meter\">\n        <div\n            className={`pg-password-strength-meter__block ${passwordStrengthClassName(\n                passwordStrengthMeterLength\n            )}`}></div>\n    </div>\n);\n\nconst renderPasswordStrengthTip = (props: PasswordStrengthMeterProps, passwordStrengthMeterLength: number) =>\n    props.passwordPopUp ? (\n        <div className=\"pg-password-pop-up\">\n            <div className=\"pg-password-pop-up__strength\">\n                <div className=\"pg-password-pop-up__strength-title\">\n                    {props.translate('page.header.signUp.strength.password')}\n                </div>\n                <div\n                    className={`pg-password-pop-up__strength-status ${passwordStrengthClassName(\n                        passwordStrengthMeterLength\n                    )}`}>\n                    {passwordStrengthStatus(passwordStrengthMeterLength, props.translate)}\n                </div>\n            </div>\n            <PasswordStrengthTip\n                passwordErrorFirstSolved={props.passwordErrorFirstSolved}\n                passwordErrorSecondSolved={props.passwordErrorSecondSolved}\n                passwordErrorThirdSolved={props.passwordErrorThirdSolved}\n                passwordPopUp={props.passwordPopUp}\n                translate={props.translate}\n            />\n        </div>\n    ) : null;\n\nconst passwordStrengthClassName = (passwordStrengthMeterLength: number) => {\n    switch (passwordStrengthMeterLength) {\n        case 0:\n            return 'too-weak';\n        case 1:\n            return 'weak';\n        case 2:\n            return 'good';\n        case 3:\n            return 'strong';\n        case 4:\n            return 'very-strong';\n        default:\n            return 'too-weak';\n    }\n};\n\nconst passwordStrengthStatus = (passwordStrengthMeterLength: number, translate) => {\n    switch (passwordStrengthMeterLength) {\n        case 0:\n            return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n        case 1:\n            return translate('page.header.signUp.password.too.weak') || 'WEAK';\n        case 2:\n            return translate('page.header.signUp.password.good') || 'GOOD';\n        case 3:\n            return translate('page.header.signUp.password.strong') || 'STRONG';\n        case 4:\n            return translate('page.header.signUp.password.very.strong') || 'VERY STRONG';\n        default:\n            return translate('page.header.signUp.password.too.weak') || 'TOO WEAK';\n    }\n};\n\nconst PasswordStrengthMeterComponent: React.FC<PasswordStrengthMeterProps> = (props) => {\n    const {\n        passwordErrorSecondSolved,\n        passwordErrorFirstSolved,\n        passwordErrorThirdSolved,\n        minPasswordEntropy,\n        currentPasswordEntropy,\n        passwordExist,\n    } = props;\n\n    const passwordComplite = passwordErrorSecondSolved && passwordErrorFirstSolved && passwordErrorThirdSolved;\n    const AVG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep();\n    const STRONG_PASSWORD_ENTROPY = minPasswordEntropy + passwordEntropyStep() * 2;\n\n    let passwordStrengthMeterLength = -1;\n\n    if (currentPasswordEntropy < minPasswordEntropy) {\n        passwordStrengthMeterLength = 0;\n    }\n\n    if ((currentPasswordEntropy < minPasswordEntropy && passwordErrorFirstSolved) || passwordErrorFirstSolved) {\n        passwordStrengthMeterLength = 1;\n    }\n\n    if (passwordComplite) {\n        if (currentPasswordEntropy >= minPasswordEntropy && currentPasswordEntropy < AVG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 2;\n        }\n\n        if (currentPasswordEntropy >= AVG_PASSWORD_ENTROPY && currentPasswordEntropy < STRONG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 3;\n        }\n\n        if (currentPasswordEntropy >= STRONG_PASSWORD_ENTROPY) {\n            passwordStrengthMeterLength = 4;\n        }\n    }\n\n    return (\n        <div className=\"pg-password-strength\">\n            {passwordExist ? renderPasswordStrengthMeter(passwordStrengthMeterLength) : null}\n            {renderPasswordStrengthTip(props, passwordStrengthMeterLength)}\n        </div>\n    );\n};\n\nexport const PasswordStrengthMeter = React.memo(PasswordStrengthMeterComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}