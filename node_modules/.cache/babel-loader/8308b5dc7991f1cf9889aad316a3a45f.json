{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Elton\\\\OneDrive\\\\Desktop\\\\baseapp-2024\\\\src\\\\components\\\\UploadFile\\\\index.tsx\";\nimport classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { changeElementPosition } from '../../helpers';\nvar UploadFileComponent = function UploadFileComponent(_ref) {\n  var title = _ref.title,\n    label = _ref.label,\n    buttonText = _ref.buttonText,\n    sizesText = _ref.sizesText,\n    formatsText = _ref.formatsText,\n    tipText = _ref.tipText,\n    exampleImagePath = _ref.exampleImagePath,\n    id = _ref.id,\n    isMobileDevice = _ref.isMobileDevice,\n    uploadedFile = _ref.uploadedFile,\n    _ref$accept = _ref.accept,\n    accept = _ref$accept === void 0 ? 'application/pdf,image/jpeg,image/png' : _ref$accept,\n    handleUploadScan = _ref.handleUploadScan;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMouseTooltipVisible = _useState2[0],\n    setIsMouseTooltipVisible = _useState2[1];\n  var handleToggleTooltipVisible = useCallback(function () {\n    setIsMouseTooltipVisible(function (prevState) {\n      return !prevState;\n    });\n  }, []);\n  var handleHoverTooltipIcon = useCallback(function () {\n    changeElementPosition('pg-upload-file__tooltip', 0, -100, 20);\n    handleToggleTooltipVisible();\n  }, [handleToggleTooltipVisible]);\n  var renderTitle = useCallback(function () {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-upload-file__content__title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, tipText ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pg-upload-file__content__title__tip-icon\",\n      onMouseEnter: handleHoverTooltipIcon,\n      onMouseLeave: handleToggleTooltipVisible,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TipIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })) : null, title ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }, title) : null);\n  }, [handleHoverTooltipIcon, handleToggleTooltipVisible, tipText, title]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, tipText || title ? renderTitle() : null, label ? /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 26\n    }\n  }, label) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content__form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: accept,\n    className: \"pg-upload-file__content__form__input\",\n    \"data-multiple-caption\": \"files selected\",\n    draggable: true,\n    multiple: false,\n    name: \"files[]\",\n    type: \"file\",\n    id: id || 'file',\n    onChange: handleUploadScan,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__content__form__info\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, exampleImagePath && isMobileDevice ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__doc-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: exampleImagePath,\n    alt: \"\".concat(label, \" example\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, buttonText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__button btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, buttonText) : null, sizesText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, sizesText) : null, formatsText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, formatsText) : null, uploadedFile ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"pg-upload-file__content__form__info__text file\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }, uploadedFile) : null)))), exampleImagePath && !isMobileDevice ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pg-upload-file__doc-image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: exampleImagePath,\n    alt: \"\".concat(label, \" example\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })) : null, tipText ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classnames('pg-upload-file__tooltip tooltip-hover', {\n      'tooltip-hover--visible': isMouseTooltipVisible\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: tipText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })) : null);\n};\nexport var UploadFile = React.memo(UploadFileComponent);","map":{"version":3,"names":["classnames","React","useCallback","useState","FormattedMessage","TipIcon","changeElementPosition","UploadFileComponent","title","label","buttonText","sizesText","formatsText","tipText","exampleImagePath","id","isMobileDevice","uploadedFile","accept","handleUploadScan","isMouseTooltipVisible","setIsMouseTooltipVisible","handleToggleTooltipVisible","prevState","handleHoverTooltipIcon","renderTitle","UploadFile","memo"],"sources":["C:/Users/Elton/OneDrive/Desktop/baseapp-2024/src/components/UploadFile/index.tsx"],"sourcesContent":["import classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { changeElementPosition } from '../../helpers';\n\ninterface OwnPropsTranslations {\n    title?: string;\n    label?: string;\n    buttonText?: string;\n    sizesText?: string;\n    formatsText?: string;\n    tipText?: string;\n    isMobileDevice?: boolean;\n}\n\ninterface OwnProps extends OwnPropsTranslations {\n    handleUploadScan: (e: any) => void;\n    id?: string;\n    exampleImagePath?: string;\n    uploadedFile?: string;\n    accept?: string;\n}\n\ntype Props = OwnProps;\n\nconst UploadFileComponent: React.FC<Props> = ({\n    title,\n    label,\n    buttonText,\n    sizesText,\n    formatsText,\n    tipText,\n    exampleImagePath,\n    id,\n    isMobileDevice,\n    uploadedFile,\n    accept = 'application/pdf,image/jpeg,image/png',\n    handleUploadScan,\n}) => {\n    const [isMouseTooltipVisible, setIsMouseTooltipVisible] = useState<boolean>(false);\n\n    const handleToggleTooltipVisible = useCallback(() => {\n        setIsMouseTooltipVisible((prevState) => !prevState);\n    }, []);\n\n    const handleHoverTooltipIcon = useCallback(() => {\n        changeElementPosition('pg-upload-file__tooltip', 0, -100, 20);\n        handleToggleTooltipVisible();\n    }, [handleToggleTooltipVisible]);\n\n    const renderTitle = useCallback(() => {\n        return (\n            <div className=\"pg-upload-file__content__title\">\n                {tipText ? (\n                    <div\n                        className=\"pg-upload-file__content__title__tip-icon\"\n                        onMouseEnter={handleHoverTooltipIcon}\n                        onMouseLeave={handleToggleTooltipVisible}>\n                        <TipIcon />\n                    </div>\n                ) : null}\n                {title ? <h3>{title}</h3> : null}\n            </div>\n        );\n    }, [handleHoverTooltipIcon, handleToggleTooltipVisible, tipText, title]);\n\n    return (\n        <div className=\"pg-upload-file\">\n            <div className=\"pg-upload-file__content\">\n                {tipText || title ? renderTitle() : null}\n                {label ? <label>{label}</label> : null}\n                <div className=\"pg-upload-file__content__form\">\n                    <input\n                        accept={accept}\n                        className=\"pg-upload-file__content__form__input\"\n                        data-multiple-caption=\"files selected\"\n                        draggable={true}\n                        multiple={false}\n                        name=\"files[]\"\n                        type=\"file\"\n                        id={id || 'file'}\n                        onChange={handleUploadScan}\n                    />\n                    <div className=\"pg-upload-file__content__form__info\">\n                        {exampleImagePath && isMobileDevice ? (\n                            <div className=\"pg-upload-file__doc-image\">\n                                <img src={exampleImagePath} alt={`${label} example`} />\n                            </div>\n                        ) : null}\n                        <div>\n                            {buttonText ? (\n                                <span className=\"pg-upload-file__content__form__info__button btn-primary\">\n                                    {buttonText}\n                                </span>\n                            ) : null}\n                            {sizesText ? (\n                                <span className=\"pg-upload-file__content__form__info__text\">{sizesText}</span>\n                            ) : null}\n                            {formatsText ? (\n                                <span className=\"pg-upload-file__content__form__info__text\">{formatsText}</span>\n                            ) : null}\n                            {uploadedFile ? (\n                                <span className=\"pg-upload-file__content__form__info__text file\">{uploadedFile}</span>\n                            ) : null}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {exampleImagePath && !isMobileDevice ? (\n                <div className=\"pg-upload-file__doc-image\">\n                    <img src={exampleImagePath} alt={`${label} example`} />\n                </div>\n            ) : null}\n            {tipText ? (\n                <span\n                    className={classnames('pg-upload-file__tooltip tooltip-hover', {\n                        'tooltip-hover--visible': isMouseTooltipVisible,\n                    })}>\n                    <FormattedMessage id={tipText} />\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport const UploadFile = React.memo(UploadFileComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}